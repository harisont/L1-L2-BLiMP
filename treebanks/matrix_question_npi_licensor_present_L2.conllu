# sentence_good = Had Bruce ever played?
# sentence_bad = Bruce had ever played.
# two_prefix_prefix_good = Had Bruce
# two_prefix_prefix_bad = Bruce had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present0
1	Bruce	Bruce	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	played	play	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Patrick ever answered?
# sentence_bad = Patrick had ever answered.
# two_prefix_prefix_good = Had Patrick
# two_prefix_prefix_bad = Patrick had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present1
1	Patrick	Patrick	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	answered	answer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do some carts ever accelerate?
# sentence_bad = Some carts do ever accelerate.
# two_prefix_prefix_good = Do some carts
# two_prefix_prefix_bad = Some carts do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present2
1	Some	some	DET	DT	_	2	det	_	_
2	carts	cart	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	accelerate	accelerate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Dawn ever know Jeffrey?
# sentence_bad = Dawn will ever know Jeffrey.
# two_prefix_prefix_good = Will Dawn
# two_prefix_prefix_bad = Dawn will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present3
1	Dawn	Dawn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	know	know	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Monica ever grin?
# sentence_bad = Monica should ever grin.
# two_prefix_prefix_good = Should Monica
# two_prefix_prefix_bad = Monica should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present4
1	Monica	Monica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	grin	grin	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Cindy ever anticipated most dancers to study?
# sentence_bad = Cindy has ever anticipated most dancers to study.
# two_prefix_prefix_good = Has Cindy
# two_prefix_prefix_bad = Cindy has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present5
1	Cindy	Cindy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	anticipated	anticipate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	dancers	dancer	NOUN	NNS	Number=Plur	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	study	study	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Denise ever doubted Galileo can't bother to train?
# sentence_bad = Denise had ever doubted Galileo can't bother to train.
# two_prefix_prefix_good = Had Denise
# two_prefix_prefix_bad = Denise had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present6
1	Denise	Denise	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	doubted	doubt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Galileo	Galileo	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	bother	bother	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	train	train	VERB	VB	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Jane ever worried Tonya?
# sentence_bad = Jane has ever worried Tonya.
# two_prefix_prefix_good = Has Jane
# two_prefix_prefix_bad = Jane has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present7
1	Jane	Jane	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	worried	worry	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Tonya	Tonya	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would many customers ever bake?
# sentence_bad = Many customers would ever bake.
# two_prefix_prefix_good = Would many customers
# two_prefix_prefix_bad = Many customers would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present8
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	customers	customer	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bake	bake	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Mitchell ever know Eva?
# sentence_bad = Mitchell should ever know Eva.
# two_prefix_prefix_good = Should Mitchell
# two_prefix_prefix_bad = Mitchell should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present9
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	know	know	VERB	VB	VerbForm=Inf	0	root	_	_
5	Eva	Eva	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could many doctors ever clash?
# sentence_bad = Many doctors could ever clash.
# two_prefix_prefix_good = Could many doctors
# two_prefix_prefix_bad = Many doctors could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present10
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	doctors	doctor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	clash	clash	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Sandra ever planned to get a job?
# sentence_bad = Sandra has ever planned to get a job.
# two_prefix_prefix_good = Has Sandra
# two_prefix_prefix_bad = Sandra has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present11
1	Sandra	Sandra	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	planned	plan	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	get	get	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	_	_
8	job	job	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will the horse ever come here?
# sentence_bad = The horse will ever come here.
# two_prefix_prefix_good = Will the horse
# two_prefix_prefix_bad = The horse will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present12
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	horse	horse	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	come	come	VERB	VB	VerbForm=Inf	0	root	_	_
6	here	here	ADV	RB	PronType=Dem	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did children ever cope?
# sentence_bad = Children did ever cope.
# two_prefix_prefix_good = Did children
# two_prefix_prefix_bad = Children did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present13
1	Children	child	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cope	cope	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Carolyn ever argue?
# sentence_bad = Carolyn did ever argue.
# two_prefix_prefix_good = Did Carolyn
# two_prefix_prefix_bad = Carolyn did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present14
1	Carolyn	Carolyn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argue	argue	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did most dresses ever shrink?
# sentence_bad = Most dresses did ever shrink.
# two_prefix_prefix_good = Did most dresses
# two_prefix_prefix_bad = Most dresses did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present15
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	dresses	dress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shrink	shrink	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Sarah ever forget many teachers?
# sentence_bad = Sarah might ever forget many teachers.
# two_prefix_prefix_good = Might Sarah
# two_prefix_prefix_bad = Sarah might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present16
1	Sarah	Sarah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forget	forget	VERB	VB	VerbForm=Inf	0	root	_	_
5	many	many	ADJ	JJ	Degree=Pos	6	amod	_	_
6	teachers	teacher	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Frank ever boast about Melanie?
# sentence_bad = Frank might ever boast about Melanie.
# two_prefix_prefix_good = Might Frank
# two_prefix_prefix_bad = Frank might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present17
1	Frank	Frank	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boast	boast	VERB	VB	VerbForm=Inf	0	root	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	Melanie	Melanie	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Dennis ever begged Joel to stretch?
# sentence_bad = Dennis had ever begged Joel to stretch.
# two_prefix_prefix_good = Had Dennis
# two_prefix_prefix_bad = Dennis had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present18
1	Dennis	Dennis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	begged	beg	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Joel	Joel	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	stretch	stretch	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Eric ever prompt Dawn to write?
# sentence_bad = Eric does ever prompt Dawn to write.
# two_prefix_prefix_good = Does Eric
# two_prefix_prefix_bad = Eric does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present19
1	Eric	Eric	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prompt	prompt	VERB	VB	VerbForm=Inf	0	root	_	_
5	Dawn	Dawn	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	write	write	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Ann ever drink?
# sentence_bad = Ann would ever drink.
# two_prefix_prefix_good = Would Ann
# two_prefix_prefix_bad = Ann would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present20
1	Ann	Ann	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	drink	drink	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Sharon ever waste away?
# sentence_bad = Sharon did ever waste away.
# two_prefix_prefix_good = Did Sharon
# two_prefix_prefix_bad = Sharon did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present21
1	Sharon	Sharon	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	waste	waste	VERB	VB	VerbForm=Inf	0	root	_	_
5	away	away	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would some screen ever disappear?
# sentence_bad = Some screen would ever disappear.
# two_prefix_prefix_good = Would some screen
# two_prefix_prefix_bad = Some screen would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present22
1	Some	some	DET	DT	_	2	det	_	_
2	screen	screen	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disappear	disappear	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Gary ever believe Dennis to alarm Stephanie?
# sentence_bad = Gary does ever believe Dennis to alarm Stephanie.
# two_prefix_prefix_good = Does Gary
# two_prefix_prefix_bad = Gary does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present23
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	believe	believe	VERB	VB	VerbForm=Inf	0	root	_	_
5	Dennis	Dennis	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	alarm	alarm	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	Stephanie	Stephanie	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will that coat ever warp?
# sentence_bad = That coat will ever warp.
# two_prefix_prefix_good = Will that coat
# two_prefix_prefix_bad = That coat will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present24
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	coat	coat	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	warp	warp	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Suzanne ever sat down?
# sentence_bad = Suzanne had ever sat down.
# two_prefix_prefix_good = Had Suzanne
# two_prefix_prefix_bad = Suzanne had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present25
1	Suzanne	Suzanne	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sat	sit	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	down	down	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Nina ever descended that mountain?
# sentence_bad = Nina has ever descended that mountain.
# two_prefix_prefix_good = Has Nina
# two_prefix_prefix_bad = Nina has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present26
1	Nina	Nina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	descended	descend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	mountain	mountain	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Jill ever die?
# sentence_bad = Jill did ever die.
# two_prefix_prefix_good = Did Jill
# two_prefix_prefix_bad = Jill did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present27
1	Jill	Jill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	die	die	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Bradley ever mutter?
# sentence_bad = Bradley will ever mutter.
# two_prefix_prefix_good = Will Bradley
# two_prefix_prefix_bad = Bradley will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present28
1	Bradley	Bradley	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	mutter	mutter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have many children ever surrendered?
# sentence_bad = Many children have ever surrendered.
# two_prefix_prefix_good = Have many children
# two_prefix_prefix_bad = Many children have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present29
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	children	child	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	surrendered	surrender	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Stephen ever hide away?
# sentence_bad = Stephen would ever hide away.
# two_prefix_prefix_good = Would Stephen
# two_prefix_prefix_bad = Stephen would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present30
1	Stephen	Stephen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hide	hide	VERB	VB	VerbForm=Inf	0	root	_	_
5	away	away	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Steven ever badgered every man to sound like most senators?
# sentence_bad = Steven has ever badgered every man to sound like most senators.
# two_prefix_prefix_good = Has Steven
# two_prefix_prefix_bad = Steven has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present31
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	badgered	badger	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	man	man	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	sound	sound	VERB	VB	VerbForm=Inf	4	advcl	_	_
9	like	like	ADP	IN	_	11	case	_	_
10	most	most	ADJ	JJS	Degree=Sup	11	amod	_	_
11	senators	senator	NOUN	NNS	Number=Plur	8	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might students ever see?
# sentence_bad = Students might ever see.
# two_prefix_prefix_good = Might students
# two_prefix_prefix_bad = Students might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present32
1	Students	student	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	see	see	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will some bank ever profit?
# sentence_bad = Some bank will ever profit.
# two_prefix_prefix_good = Will some bank
# two_prefix_prefix_bad = Some bank will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present33
1	Some	some	DET	DT	_	2	det	_	_
2	bank	bank	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	profit	profit	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Andrea ever encourage Beth to care for Charles?
# sentence_bad = Andrea would ever encourage Beth to care for Charles.
# two_prefix_prefix_good = Would Andrea
# two_prefix_prefix_bad = Andrea would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present34
1	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	encourage	encourage	VERB	VB	VerbForm=Inf	0	root	_	_
5	Beth	Beth	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	care	care	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	for	for	ADP	IN	_	9	case	_	_
9	Charles	Charles	PROPN	NNP	Number=Sing	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Brad ever insulted Irene?
# sentence_bad = Brad has ever insulted Irene.
# two_prefix_prefix_good = Has Brad
# two_prefix_prefix_bad = Brad has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present35
1	Brad	Brad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	insulted	insult	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Irene	Irene	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Vanessa ever dislike Charles?
# sentence_bad = Vanessa could ever dislike Charles.
# two_prefix_prefix_good = Could Vanessa
# two_prefix_prefix_bad = Vanessa could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present36
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dislike	dislike	VERB	VB	VerbForm=Inf	0	root	_	_
5	Charles	Charles	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Carl ever kissed Irene?
# sentence_bad = Carl had ever kissed Irene.
# two_prefix_prefix_good = Had Carl
# two_prefix_prefix_bad = Carl had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present37
1	Carl	Carl	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	kissed	kiss	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Irene	Irene	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Christina ever try to observe Dawn?
# sentence_bad = Christina will ever try to observe Dawn.
# two_prefix_prefix_good = Will Christina
# two_prefix_prefix_bad = Christina will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present38
1	Christina	Christina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	try	try	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	observe	observe	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Dawn	Dawn	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Samuel ever sneeze?
# sentence_bad = Samuel did ever sneeze.
# two_prefix_prefix_good = Did Samuel
# two_prefix_prefix_bad = Samuel did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present39
1	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sneeze	sneeze	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should a lot of girls ever benefit?
# sentence_bad = A lot of girls should ever benefit.
# two_prefix_prefix_good = Should a lot of girls
# two_prefix_prefix_bad = A lot of girls should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present40
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	girls	girl	NOUN	NNS	Number=Plur	2	nmod	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	benefit	benefit	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Could some people ever chat?
# sentence_bad = Some people could ever chat.
# two_prefix_prefix_good = Could some people
# two_prefix_prefix_bad = Some people could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present41
1	Some	some	DET	DT	_	2	det	_	_
2	people	people	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	chat	chat	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Colleen ever imagined those actresses have ordered Kevin to talk?
# sentence_bad = Colleen had ever imagined those actresses have ordered Kevin to talk.
# two_prefix_prefix_good = Had Colleen
# two_prefix_prefix_bad = Colleen had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present42
1	Colleen	Colleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	imagined	imagine	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	those	that	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	actresses	actress	NOUN	NNS	Number=Plur	8	nsubj	_	_
7	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
8	ordered	order	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
9	Kevin	Kevin	PROPN	NNP	Number=Sing	8	obj	_	_
10	to	to	PART	TO	_	11	mark	_	_
11	talk	talk	VERB	VB	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Sharon ever climbed down a hill?
# sentence_bad = Sharon has ever climbed down a hill.
# two_prefix_prefix_good = Has Sharon
# two_prefix_prefix_bad = Sharon has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present43
1	Sharon	Sharon	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	climbed	climb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	down	down	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	hill	hill	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Catherine ever implore Kristin's cousins to speak up?
# sentence_bad = Catherine might ever implore Kristin's cousins to speak up.
# two_prefix_prefix_good = Might Catherine
# two_prefix_prefix_bad = Catherine might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present44
1	Catherine	Catherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	implore	implore	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Kristin's	_	_	_	_	_	_	_	_
5	Kristin	Kristin	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	cousins	cousin	NOUN	NNS	Number=Plur	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	speak	speak	VERB	VB	VerbForm=Inf	4	xcomp	_	_
10	up	up	ADP	RP	_	9	compound:prt	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have a lot of teachers ever kissed?
# sentence_bad = A lot of teachers have ever kissed.
# two_prefix_prefix_good = Have a lot of teachers
# two_prefix_prefix_bad = A lot of teachers have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present45
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	teachers	teacher	NOUN	NNS	Number=Plur	2	nmod	_	_
5	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	kissed	kiss	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Has Gary ever argued?
# sentence_bad = Gary has ever argued.
# two_prefix_prefix_good = Has Gary
# two_prefix_prefix_bad = Gary has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present46
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argued	argue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have these blouses ever shrunk?
# sentence_bad = These blouses have ever shrunk.
# two_prefix_prefix_good = Have these blouses
# two_prefix_prefix_bad = These blouses have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present47
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	blouses	blouse	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shrunk	shrink	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Heather ever visit those closets?
# sentence_bad = Heather did ever visit those closets.
# two_prefix_prefix_good = Did Heather
# two_prefix_prefix_bad = Heather did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present48
1	Heather	Heather	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	visit	visit	VERB	VB	VerbForm=Inf	0	root	_	_
5	those	that	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	closets	closet	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do a lot of legislatures ever profit?
# sentence_bad = A lot of legislatures do ever profit.
# two_prefix_prefix_good = Do a lot of legislatures
# two_prefix_prefix_bad = A lot of legislatures do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present49
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	legislatures	legislature	NOUN	NNS	Number=Plur	2	nmod	_	_
5	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	profit	profit	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Had Raymond ever murmured?
# sentence_bad = Raymond had ever murmured.
# two_prefix_prefix_good = Had Raymond
# two_prefix_prefix_bad = Raymond had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present50
1	Raymond	Raymond	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	murmured	murmur	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Amelia ever learned who aren't seeing?
# sentence_bad = Amelia has ever learned who aren't seeing.
# two_prefix_prefix_good = Has Amelia
# two_prefix_prefix_bad = Amelia has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present51
1	Amelia	Amelia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	who	who	PRON	WP	PronType=Int	8	nsubj	_	_
6-7	aren't	_	_	_	_	_	_	_	_
6	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	seeing	see	VERB	VBG	Tense=Pres|VerbForm=Part	4	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Frank ever cleaned glasses?
# sentence_bad = Frank had ever cleaned glasses.
# two_prefix_prefix_good = Had Frank
# two_prefix_prefix_bad = Frank had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present52
1	Frank	Frank	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cleaned	clean	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	glasses	glass	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do all hats ever twist?
# sentence_bad = All hats do ever twist.
# two_prefix_prefix_good = Do all hats
# two_prefix_prefix_bad = All hats do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present53
1	All	all	DET	DT	_	2	det	_	_
2	hats	hat	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	twist	twist	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does that ice ever evaporate?
# sentence_bad = That ice does ever evaporate.
# two_prefix_prefix_good = Does that ice
# two_prefix_prefix_bad = That ice does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present54
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	ice	ice	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	evaporate	evaporate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had some vase ever tipped over?
# sentence_bad = Some vase had ever tipped over.
# two_prefix_prefix_good = Had some vase
# two_prefix_prefix_bad = Some vase had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present55
1	Some	some	DET	DT	_	2	det	_	_
2	vase	vase	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	tipped	tip	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	over	over	ADP	RP	_	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Steven ever tried to die?
# sentence_bad = Steven has ever tried to die.
# two_prefix_prefix_good = Has Steven
# two_prefix_prefix_bad = Steven has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present56
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	tried	try	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	die	die	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Amy ever cooked?
# sentence_bad = Amy had ever cooked.
# two_prefix_prefix_good = Had Amy
# two_prefix_prefix_bad = Amy had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present57
1	Amy	Amy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cooked	cook	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Deanna ever learned what won't negotiate?
# sentence_bad = Deanna has ever learned what won't negotiate.
# two_prefix_prefix_good = Has Deanna
# two_prefix_prefix_bad = Deanna has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present58
1	Deanna	Deanna	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	what	what	PRON	WP	PronType=Int	4	obj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	negotiate	negotiate	VERB	VB	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Natalie ever criticize the senator?
# sentence_bad = Natalie can ever criticize the senator.
# two_prefix_prefix_good = Can Natalie
# two_prefix_prefix_bad = Natalie can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present59
1	Natalie	Natalie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	criticize	criticize	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	senator	senator	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some convertibles ever stopped?
# sentence_bad = Some convertibles had ever stopped.
# two_prefix_prefix_good = Had some convertibles
# two_prefix_prefix_bad = Some convertibles had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present60
1	Some	some	DET	DT	_	2	det	_	_
2	convertibles	convertible	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stopped	stop	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Janice ever play?
# sentence_bad = Janice could ever play.
# two_prefix_prefix_good = Could Janice
# two_prefix_prefix_bad = Janice could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present61
1	Janice	Janice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	play	play	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Carol ever encouraged Phillip to take a lot of public parks?
# sentence_bad = Carol had ever encouraged Phillip to take a lot of public parks.
# two_prefix_prefix_good = Had Carol
# two_prefix_prefix_bad = Carol had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present62
1	Carol	Carol	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	encouraged	encourage	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Phillip	Phillip	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	take	take	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	_	_
9	lot	lot	NOUN	NN	Number=Sing	7	obj	_	_
10	of	of	ADP	IN	_	12	case	_	_
11	public	public	ADJ	JJ	Degree=Pos	12	amod	_	_
12	parks	park	NOUN	NNS	Number=Plur	9	nmod	_	SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some government ever clashed?
# sentence_bad = Some government had ever clashed.
# two_prefix_prefix_good = Had some government
# two_prefix_prefix_bad = Some government had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present63
1	Some	some	DET	DT	_	2	det	_	_
2	government	government	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	clashed	clash	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Christopher ever trained?
# sentence_bad = Christopher had ever trained.
# two_prefix_prefix_good = Had Christopher
# two_prefix_prefix_bad = Christopher had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present64
1	Christopher	Christopher	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	trained	train	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Spain ever pushed these daughters of Melinda to go fishing?
# sentence_bad = Spain has ever pushed these daughters of Melinda to go fishing.
# two_prefix_prefix_good = Has Spain
# two_prefix_prefix_bad = Spain has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present65
1	Spain	Spain	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	pushed	push	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	daughters	daughter	NOUN	NNS	Number=Plur	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	Melinda	Melinda	PROPN	NNP	Number=Sing	6	nmod	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	go	go	VERB	VB	VerbForm=Inf	4	xcomp	_	_
11	fishing	fish	VERB	VBG	VerbForm=Ger	10	xcomp	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would every bank ever work hard?
# sentence_bad = Every bank would ever work hard.
# two_prefix_prefix_good = Would every bank
# two_prefix_prefix_bad = Every bank would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present66
1	Every	every	DET	DT	_	2	det	_	_
2	bank	bank	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	work	work	VERB	VB	VerbForm=Inf	0	root	_	_
6	hard	hard	ADV	RB	Degree=Pos	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Danielle ever go fishing?
# sentence_bad = Danielle might ever go fishing.
# two_prefix_prefix_good = Might Danielle
# two_prefix_prefix_bad = Danielle might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present67
1	Danielle	Danielle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	go	go	VERB	VB	VerbForm=Inf	0	root	_	_
5	fishing	fish	VERB	VBG	VerbForm=Ger	4	xcomp	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has that shirt ever flattened?
# sentence_bad = That shirt has ever flattened.
# two_prefix_prefix_good = Has that shirt
# two_prefix_prefix_bad = That shirt has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present68
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	shirt	shirt	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	flattened	flatten	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can every committee ever testify?
# sentence_bad = Every committee can ever testify.
# two_prefix_prefix_good = Can every committee
# two_prefix_prefix_bad = Every committee can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present69
1	Every	every	DET	DT	_	2	det	_	_
2	committee	committee	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	testify	testify	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have many movies ever disagreed with Jessica?
# sentence_bad = Many movies have ever disagreed with Jessica.
# two_prefix_prefix_good = Have many movies
# two_prefix_prefix_bad = Many movies have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present70
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	movies	movie	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disagreed	disagree	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	with	with	ADP	IN	_	7	case	_	_
7	Jessica	Jessica	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should William ever exercise?
# sentence_bad = William should ever exercise.
# two_prefix_prefix_good = Should William
# two_prefix_prefix_bad = William should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present71
1	William	William	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	exercise	exercise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had James ever dropped by this museum?
# sentence_bad = James had ever dropped by this museum.
# two_prefix_prefix_good = Had James
# two_prefix_prefix_bad = James had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present72
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dropped	drop	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	by	by	ADP	IN	_	7	case	_	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	museum	museum	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Jennifer ever disappear?
# sentence_bad = Jennifer did ever disappear.
# two_prefix_prefix_good = Did Jennifer
# two_prefix_prefix_bad = Jennifer did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present73
1	Jennifer	Jennifer	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disappear	disappear	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the doctors ever intended to drop by most movie theaters?
# sentence_bad = The doctors had ever intended to drop by most movie theaters.
# two_prefix_prefix_good = Had the doctors
# two_prefix_prefix_bad = The doctors had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present74
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	doctors	doctor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	intended	intend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	drop	drop	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	by	by	ADP	IN	_	11	case	_	_
9	most	most	ADJ	JJS	Degree=Sup	11	amod	_	_
10	movie	movie	NOUN	NN	Number=Sing	11	compound	_	_
11	theaters	theater	NOUN	NNS	Number=Plur	7	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Liam ever come here?
# sentence_bad = Liam does ever come here.
# two_prefix_prefix_good = Does Liam
# two_prefix_prefix_bad = Liam does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present75
1	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	come	come	VERB	VB	VerbForm=Inf	0	root	_	_
5	here	here	ADV	RB	PronType=Dem	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Jodi ever argue?
# sentence_bad = Jodi should ever argue.
# two_prefix_prefix_good = Should Jodi
# two_prefix_prefix_bad = Jodi should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present76
1	Jodi	Jodi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argue	argue	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should guests ever seem to suffer?
# sentence_bad = Guests should ever seem to suffer.
# two_prefix_prefix_good = Should guests
# two_prefix_prefix_bad = Guests should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present77
1	Guests	guest	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	seem	seem	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	suffer	suffer	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Julia ever scratch?
# sentence_bad = Julia would ever scratch.
# two_prefix_prefix_good = Would Julia
# two_prefix_prefix_bad = Julia would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present78
1	Julia	Julia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	scratch	scratch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Adam ever forgotten about who have hats?
# sentence_bad = Adam had ever forgotten about who have hats.
# two_prefix_prefix_good = Had Adam
# two_prefix_prefix_bad = Adam had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present79
1	Adam	Adam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forgotten	forget	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	about	about	SCONJ	IN	_	7	mark	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	have	have	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	advcl	_	_
8	hats	hat	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Carol ever declared some ladies to shout?
# sentence_bad = Carol has ever declared some ladies to shout.
# two_prefix_prefix_good = Has Carol
# two_prefix_prefix_bad = Carol has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present80
1	Carol	Carol	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	declared	declare	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	ladies	lady	NOUN	NNS	Number=Plur	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	shout	shout	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does the jacket ever fold?
# sentence_bad = The jacket does ever fold.
# two_prefix_prefix_good = Does the jacket
# two_prefix_prefix_bad = The jacket does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present81
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	jacket	jacket	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fold	fold	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had some books ever disagreed?
# sentence_bad = Some books had ever disagreed.
# two_prefix_prefix_good = Had some books
# two_prefix_prefix_bad = Some books had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present82
1	Some	some	DET	DT	_	2	det	_	_
2	books	book	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disagreed	disagree	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has a waitress ever hoped to take every carriage?
# sentence_bad = A waitress has ever hoped to take every carriage.
# two_prefix_prefix_good = Has a waitress
# two_prefix_prefix_bad = A waitress has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present83
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	waitress	waitress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	hoped	hope	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	take	take	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	every	every	DET	DT	_	9	det	_	_
9	carriage	carriage	NOUN	NN	Number=Sing	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Edward ever watch Wendy?
# sentence_bad = Edward would ever watch Wendy.
# two_prefix_prefix_good = Would Edward
# two_prefix_prefix_bad = Edward would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present84
1	Edward	Edward	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	watch	watch	VERB	VB	VerbForm=Inf	0	root	_	_
5	Wendy	Wendy	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Carrie ever answer?
# sentence_bad = Carrie should ever answer.
# two_prefix_prefix_good = Should Carrie
# two_prefix_prefix_bad = Carrie should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present85
1	Carrie	Carrie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	answer	answer	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have these ladies ever seen Kayla?
# sentence_bad = These ladies have ever seen Kayla.
# two_prefix_prefix_good = Have these ladies
# two_prefix_prefix_bad = These ladies have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present86
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	ladies	lady	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	seen	see	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Kayla	Kayla	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Wendy ever proven to fold?
# sentence_bad = Wendy had ever proven to fold.
# two_prefix_prefix_good = Had Wendy
# two_prefix_prefix_bad = Wendy had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present87
1	Wendy	Wendy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	proven	prove	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	fold	fold	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had every child ever left every guest?
# sentence_bad = Every child had ever left every guest.
# two_prefix_prefix_good = Had every child
# two_prefix_prefix_bad = Every child had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present88
1	Every	every	DET	DT	_	2	det	_	_
2	child	child	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	left	leave	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	every	every	DET	DT	_	7	det	_	_
7	guest	guest	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had some children ever reunited?
# sentence_bad = Some children had ever reunited.
# two_prefix_prefix_good = Had some children
# two_prefix_prefix_bad = Some children had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present89
1	Some	some	DET	DT	_	2	det	_	_
2	children	child	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reunited	reunit	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have a lot of waiters ever whispered?
# sentence_bad = A lot of waiters have ever whispered.
# two_prefix_prefix_good = Have a lot of waiters
# two_prefix_prefix_bad = A lot of waiters have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present90
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	waiters	waiter	NOUN	NNS	Number=Plur	2	nmod	_	_
5	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	whispered	whisper	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Has Rebecca ever enticed the waiter to scratch?
# sentence_bad = Rebecca has ever enticed the waiter to scratch.
# two_prefix_prefix_good = Has Rebecca
# two_prefix_prefix_bad = Rebecca has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present91
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	enticed	entice	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	waiter	waiter	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	scratch	scratch	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some ladies ever answered?
# sentence_bad = Some ladies had ever answered.
# two_prefix_prefix_good = Had some ladies
# two_prefix_prefix_bad = Some ladies had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present92
1	Some	some	DET	DT	_	2	det	_	_
2	ladies	lady	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	answered	answer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would the play ever disgust Karen?
# sentence_bad = The play would ever disgust Karen.
# two_prefix_prefix_good = Would the play
# two_prefix_prefix_bad = The play would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present93
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	play	play	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disgust	disgust	VERB	VB	VerbForm=Inf	0	root	_	_
6	Karen	Karen	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could that child ever tour the malls?
# sentence_bad = That child could ever tour the malls.
# two_prefix_prefix_good = Could that child
# two_prefix_prefix_bad = That child could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present94
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	child	child	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	tour	tour	VERB	VB	VerbForm=Inf	0	root	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
7	malls	mall	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Nicole ever believed Pamela to cheer?
# sentence_bad = Nicole had ever believed Pamela to cheer.
# two_prefix_prefix_good = Had Nicole
# two_prefix_prefix_bad = Nicole had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present95
1	Nicole	Nicole	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	believed	believe	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Pamela	Pamela	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	cheer	cheer	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Irene ever attempt to answer?
# sentence_bad = Irene would ever attempt to answer.
# two_prefix_prefix_good = Would Irene
# two_prefix_prefix_bad = Irene would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present96
1	Irene	Irene	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	attempt	attempt	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	answer	answer	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did the actors ever debate?
# sentence_bad = The actors did ever debate.
# two_prefix_prefix_good = Did the actors
# two_prefix_prefix_bad = The actors did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present97
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	debate	debate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Linda ever insult Sheila?
# sentence_bad = Linda does ever insult Sheila.
# two_prefix_prefix_good = Does Linda
# two_prefix_prefix_bad = Linda does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present98
1	Linda	Linda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	insult	insult	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sheila	Sheila	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have the schools ever required Edward to argue?
# sentence_bad = The schools have ever required Edward to argue.
# two_prefix_prefix_good = Have the schools
# two_prefix_prefix_bad = The schools have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present99
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	schools	school	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	required	require	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Edward	Edward	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	argue	argue	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have most chairs ever tipped over?
# sentence_bad = Most chairs have ever tipped over.
# two_prefix_prefix_good = Have most chairs
# two_prefix_prefix_bad = Most chairs have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present100
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	chairs	chair	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	tipped	tip	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	over	over	ADP	RP	_	5	compound:prt	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have the Clintons ever worked hard?
# sentence_bad = The Clintons have ever worked hard.
# two_prefix_prefix_good = Have the Clintons
# two_prefix_prefix_bad = The Clintons have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present101
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Clintons	Clinton	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	worked	work	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	hard	hard	ADV	RB	Degree=Pos	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have most lamps ever dimmed?
# sentence_bad = Most lamps have ever dimmed.
# two_prefix_prefix_good = Have most lamps
# two_prefix_prefix_bad = Most lamps have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present102
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	lamps	lamp	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	dimmed	dim	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Kendra ever yawned?
# sentence_bad = Kendra had ever yawned.
# two_prefix_prefix_good = Had Kendra
# two_prefix_prefix_bad = Kendra had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present103
1	Kendra	Kendra	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	yawned	yawn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Samuel ever wept?
# sentence_bad = Samuel had ever wept.
# two_prefix_prefix_good = Had Samuel
# two_prefix_prefix_bad = Samuel had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present104
1	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wept	weep	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might many lights ever darken?
# sentence_bad = Many lights might ever darken.
# two_prefix_prefix_good = Might many lights
# two_prefix_prefix_bad = Many lights might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present105
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	lights	light	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	darken	darken	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Sally ever escape?
# sentence_bad = Sally will ever escape.
# two_prefix_prefix_good = Will Sally
# two_prefix_prefix_bad = Sally will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present106
1	Sally	Sally	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escape	escape	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Jerry ever observed Rachel?
# sentence_bad = Jerry had ever observed Rachel.
# two_prefix_prefix_good = Had Jerry
# two_prefix_prefix_bad = Jerry had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present107
1	Jerry	Jerry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Rachel	Rachel	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will a lot of public parks ever irritate Tara?
# sentence_bad = A lot of public parks will ever irritate Tara.
# two_prefix_prefix_good = Will a lot of public parks
# two_prefix_prefix_bad = A lot of public parks will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present108
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	8	nsubj	_	_
3	of	of	ADP	IN	_	5	case	_	_
4	public	public	ADJ	JJ	Degree=Pos	5	amod	_	_
5	parks	park	NOUN	NNS	Number=Plur	2	nmod	_	_
6	will	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	ever	ever	ADV	RB	_	8	advmod	_	_
8	irritate	irritate	VERB	VB	VerbForm=Inf	0	root	_	_
9	Tara	Tara	PROPN	NNP	Number=Sing	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	8	punct	_	SpaceAfter=No



# sentence_good = Can a doctor ever observe Amy?
# sentence_bad = A doctor can ever observe Amy.
# two_prefix_prefix_good = Can a doctor
# two_prefix_prefix_bad = A doctor can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present109
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	doctor	doctor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	observe	observe	VERB	VB	VerbForm=Inf	0	root	_	_
6	Amy	Amy	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Donald ever yearned to embarrass Tonya?
# sentence_bad = Donald has ever yearned to embarrass Tonya.
# two_prefix_prefix_good = Has Donald
# two_prefix_prefix_bad = Donald has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present110
1	Donald	Donald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	yearned	yearn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	embarrass	embarrass	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Tonya	Tonya	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Amanda ever shock Sarah?
# sentence_bad = Amanda can ever shock Sarah.
# two_prefix_prefix_good = Can Amanda
# two_prefix_prefix_bad = Amanda can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present111
1	Amanda	Amanda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	shock	shock	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sarah	Sarah	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Lissa ever discovered who has remembered what prodded Kenneth to bake?
# sentence_bad = Lissa had ever discovered who has remembered what prodded Kenneth to bake.
# two_prefix_prefix_good = Had Lissa
# two_prefix_prefix_bad = Lissa had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present112
1	Lissa	Lissa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discovered	discover	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
6	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	remembered	remember	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
8	what	what	PRON	WP	PronType=Int	7	obj	_	_
9	prodded	prodd	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	acl:relcl	_	_
10	Kenneth	Kenneth	PROPN	NNP	Number=Sing	9	obj	_	_
11	to	to	PART	TO	_	12	mark	_	_
12	bake	bake	VERB	VB	VerbForm=Inf	9	advcl	_	SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can this mushroom ever go bad?
# sentence_bad = This mushroom can ever go bad.
# two_prefix_prefix_good = Can this mushroom
# two_prefix_prefix_bad = This mushroom can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present113
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	mushroom	mushroom	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	go	go	VERB	VB	VerbForm=Inf	0	root	_	_
6	bad	bad	ADJ	JJ	Degree=Pos	5	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might some library ever compete?
# sentence_bad = Some library might ever compete.
# two_prefix_prefix_good = Might some library
# two_prefix_prefix_bad = Some library might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present114
1	Some	some	DET	DT	_	2	det	_	_
2	library	library	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	compete	compete	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had this cilantro ever charred?
# sentence_bad = This cilantro had ever charred.
# two_prefix_prefix_good = Had this cilantro
# two_prefix_prefix_bad = This cilantro had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present115
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	cilantro	cilantro	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	charred	char	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Monica ever convince Brian to hide?
# sentence_bad = Monica did ever convince Brian to hide.
# two_prefix_prefix_good = Did Monica
# two_prefix_prefix_bad = Monica did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present116
1	Monica	Monica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	convince	convince	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brian	Brian	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	hide	hide	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had a glove ever unfolded?
# sentence_bad = A glove had ever unfolded.
# two_prefix_prefix_good = Had a glove
# two_prefix_prefix_bad = A glove had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present117
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	glove	glove	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	unfolded	unfold	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Monet ever donate?
# sentence_bad = Monet can ever donate.
# two_prefix_prefix_good = Can Monet
# two_prefix_prefix_bad = Monet can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present118
1	Monet	monet	NOUN	NN	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	donate	donate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the Lutherans ever divorced?
# sentence_bad = The Lutherans had ever divorced.
# two_prefix_prefix_good = Had the Lutherans
# two_prefix_prefix_bad = The Lutherans had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present119
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Lutherans	Lutheran	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	divorced	divorce	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should this adult ever command Melanie to forfeit?
# sentence_bad = This adult should ever command Melanie to forfeit.
# two_prefix_prefix_good = Should this adult
# two_prefix_prefix_bad = This adult should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present120
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	adult	adult	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	command	command	VERB	VB	VerbForm=Inf	0	root	_	_
6	Melanie	Melanie	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	forfeit	forfeit	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Stacy ever attacked Donald?
# sentence_bad = Stacy had ever attacked Donald.
# two_prefix_prefix_good = Had Stacy
# two_prefix_prefix_bad = Stacy had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present121
1	Stacy	Stacy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	attacked	attack	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Donald	Donald	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Caroline ever explore these malls?
# sentence_bad = Caroline can ever explore these malls.
# two_prefix_prefix_good = Can Caroline
# two_prefix_prefix_bad = Caroline can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present122
1	Caroline	Caroline	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	explore	explore	VERB	VB	VerbForm=Inf	0	root	_	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	malls	mall	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Randolf ever argued?
# sentence_bad = Randolf has ever argued.
# two_prefix_prefix_good = Has Randolf
# two_prefix_prefix_bad = Randolf has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present123
1	Randolf	Randolf	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argued	argue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Deanna ever see a girl?
# sentence_bad = Deanna could ever see a girl.
# two_prefix_prefix_good = Could Deanna
# two_prefix_prefix_bad = Deanna could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present124
1	Deanna	Deanna	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	see	see	VERB	VB	VerbForm=Inf	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	girl	girl	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Martha ever reveal who isn't researching every sketch?
# sentence_bad = Martha can ever reveal who isn't researching every sketch.
# two_prefix_prefix_good = Can Martha
# two_prefix_prefix_bad = Martha can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present125
1	Martha	Martha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	reveal	reveal	VERB	VB	VerbForm=Inf	0	root	_	_
5	who	who	PRON	WP	PronType=Int	8	nsubj	_	_
6-7	isn't	_	_	_	_	_	_	_	_
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	researching	research	VERB	VBG	Tense=Pres|VerbForm=Part	4	ccomp	_	_
9	every	every	DET	DT	_	10	det	_	_
10	sketch	sketch	NOUN	NN	Number=Sing	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Patrick ever studied?
# sentence_bad = Patrick has ever studied.
# two_prefix_prefix_good = Has Patrick
# two_prefix_prefix_bad = Patrick has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present126
1	Patrick	Patrick	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	studied	study	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should a unicycle ever slow?
# sentence_bad = A unicycle should ever slow.
# two_prefix_prefix_good = Should a unicycle
# two_prefix_prefix_bad = A unicycle should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present127
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	unicycle	unicycle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	slow	slow	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Chad ever slump over?
# sentence_bad = Chad would ever slump over.
# two_prefix_prefix_good = Would Chad
# two_prefix_prefix_bad = Chad would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present128
1	Chad	Chad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	slump	slump	VERB	VB	VerbForm=Inf	0	root	_	_
5	over	over	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Lawrence ever forced Samuel to smile?
# sentence_bad = Lawrence has ever forced Samuel to smile.
# two_prefix_prefix_good = Has Lawrence
# two_prefix_prefix_bad = Lawrence has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present129
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forced	force	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Samuel	Samuel	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	smile	smile	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might the Impressionists ever reunite?
# sentence_bad = The Impressionists might ever reunite.
# two_prefix_prefix_good = Might the Impressionists
# two_prefix_prefix_bad = The Impressionists might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present130
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Impressionists	Impressionist	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reunite	reunite	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had glaciers ever frozen?
# sentence_bad = Glaciers had ever frozen.
# two_prefix_prefix_good = Had glaciers
# two_prefix_prefix_bad = Glaciers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present131
1	Glaciers	glacier	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	frozen	freeze	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Stephanie ever disappeared?
# sentence_bad = Stephanie has ever disappeared.
# two_prefix_prefix_good = Has Stephanie
# two_prefix_prefix_bad = Stephanie has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present132
1	Stephanie	Stephanie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disappeared	disappear	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Lawrence ever reveal every glacier?
# sentence_bad = Lawrence does ever reveal every glacier.
# two_prefix_prefix_good = Does Lawrence
# two_prefix_prefix_bad = Lawrence does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present133
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	reveal	reveal	VERB	VB	VerbForm=Inf	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	glacier	glacier	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should that child ever conceal what fade?
# sentence_bad = That child should ever conceal what fade.
# two_prefix_prefix_good = Should that child
# two_prefix_prefix_bad = That child should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present134
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	child	child	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	0	root	_	_
6	what	what	PRON	WP	PronType=Int	5	obj	_	_
7	fade	fade	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	6	acl:relcl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Kirsten ever plan to listen to Gina?
# sentence_bad = Kirsten does ever plan to listen to Gina.
# two_prefix_prefix_good = Does Kirsten
# two_prefix_prefix_bad = Kirsten does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present135
1	Kirsten	Kirsten	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	plan	plan	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	listen	listen	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	Gina	Gina	PROPN	NNP	Number=Sing	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Dana ever protested?
# sentence_bad = Dana had ever protested.
# two_prefix_prefix_good = Had Dana
# two_prefix_prefix_bad = Dana had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present136
1	Dana	Dana	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	protested	protest	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Sally ever laughed?
# sentence_bad = Sally has ever laughed.
# two_prefix_prefix_good = Has Sally
# two_prefix_prefix_bad = Sally has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present137
1	Sally	Sally	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	laughed	laugh	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Matt ever argue?
# sentence_bad = Matt might ever argue.
# two_prefix_prefix_good = Might Matt
# two_prefix_prefix_bad = Matt might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present138
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argue	argue	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could many universities ever reply?
# sentence_bad = Many universities could ever reply.
# two_prefix_prefix_good = Could many universities
# two_prefix_prefix_bad = Many universities could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present139
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	universities	university	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reply	reply	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will the guy ever describe Bradley?
# sentence_bad = The guy will ever describe Bradley.
# two_prefix_prefix_good = Will the guy
# two_prefix_prefix_bad = The guy will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present140
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	describe	describe	VERB	VB	VerbForm=Inf	0	root	_	_
6	Bradley	Bradley	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Mitchell ever notice Peter?
# sentence_bad = Mitchell could ever notice Peter.
# two_prefix_prefix_good = Could Mitchell
# two_prefix_prefix_bad = Mitchell could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present141
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	notice	notice	VERB	VB	VerbForm=Inf	0	root	_	_
5	Peter	Peter	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have most men ever escaped?
# sentence_bad = Most men have ever escaped.
# two_prefix_prefix_good = Have most men
# two_prefix_prefix_bad = Most men have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present142
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	men	man	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	escaped	escape	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would the sweater ever dry?
# sentence_bad = The sweater would ever dry.
# two_prefix_prefix_good = Would the sweater
# two_prefix_prefix_bad = The sweater would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present143
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	sweater	sweater	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	dry	dry	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Elizabeth ever exercise?
# sentence_bad = Elizabeth can ever exercise.
# two_prefix_prefix_good = Can Elizabeth
# two_prefix_prefix_bad = Elizabeth can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present144
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	exercise	exercise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Rhonda ever discover Becca to shout?
# sentence_bad = Rhonda does ever discover Becca to shout.
# two_prefix_prefix_good = Does Rhonda
# two_prefix_prefix_bad = Rhonda does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present145
1	Rhonda	Rhonda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discover	discover	VERB	VB	VerbForm=Inf	0	root	_	_
5	Becca	Becca	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	shout	shout	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Dennis ever climbed up that hill?
# sentence_bad = Dennis had ever climbed up that hill.
# two_prefix_prefix_good = Had Dennis
# two_prefix_prefix_bad = Dennis had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present146
1	Dennis	Dennis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	climbed	climb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	up	up	ADP	IN	_	7	case	_	_
6	that	that	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	hill	hill	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Kirsten ever remember Angela?
# sentence_bad = Kirsten does ever remember Angela.
# two_prefix_prefix_good = Does Kirsten
# two_prefix_prefix_bad = Kirsten does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present147
1	Kirsten	Kirsten	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remember	remember	VERB	VB	VerbForm=Inf	0	root	_	_
5	Angela	Angela	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Patrick ever litter?
# sentence_bad = Patrick could ever litter.
# two_prefix_prefix_good = Could Patrick
# two_prefix_prefix_bad = Patrick could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present148
1	Patrick	Patrick	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	litter	litter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should a lot of lamps ever brighten?
# sentence_bad = A lot of lamps should ever brighten.
# two_prefix_prefix_good = Should a lot of lamps
# two_prefix_prefix_bad = A lot of lamps should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present149
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	lamps	lamp	NOUN	NNS	Number=Plur	2	nmod	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	brighten	brighten	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Could Russell ever remember what hadn't sold that scarf?
# sentence_bad = Russell could ever remember what hadn't sold that scarf.
# two_prefix_prefix_good = Could Russell
# two_prefix_prefix_bad = Russell could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present150
1	Russell	Russell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remember	remember	VERB	VB	VerbForm=Inf	0	root	_	_
5	what	what	PRON	WP	PronType=Int	4	obj	_	_
6-7	hadn't	_	_	_	_	_	_	_	_
6	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	sold	sell	VERB	VBN	Tense=Past|VerbForm=Part	5	acl:relcl	_	_
9	that	that	DET	DT	Number=Sing|PronType=Dem	10	det	_	_
10	scarf	scarf	NOUN	NN	Number=Sing	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would these pictures ever look like Ella?
# sentence_bad = These pictures would ever look like Ella.
# two_prefix_prefix_good = Would these pictures
# two_prefix_prefix_bad = These pictures would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present151
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	pictures	picture	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	look	look	VERB	VB	VerbForm=Inf	0	root	_	_
6	like	like	ADP	IN	_	7	case	_	_
7	Ella	Ella	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Martin ever left?
# sentence_bad = Martin has ever left.
# two_prefix_prefix_good = Has Martin
# two_prefix_prefix_bad = Martin has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present152
1	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	left	leave	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might actors ever clash?
# sentence_bad = Actors might ever clash.
# two_prefix_prefix_good = Might actors
# two_prefix_prefix_bad = Actors might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present153
1	Actors	actor	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	clash	clash	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did some cashiers ever mess up some movie theaters?
# sentence_bad = Some cashiers did ever mess up some movie theaters.
# two_prefix_prefix_good = Did some cashiers
# two_prefix_prefix_bad = Some cashiers did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present154
1	Some	some	DET	DT	_	2	det	_	_
2	cashiers	cashier	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	mess	mess	VERB	VB	VerbForm=Inf	0	root	_	_
6	up	up	ADP	RP	_	5	compound:prt	_	_
7	some	some	DET	DT	_	9	det	_	_
8	movie	movie	NOUN	NN	Number=Sing	9	compound	_	_
9	theaters	theater	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would the projector ever darken?
# sentence_bad = The projector would ever darken.
# two_prefix_prefix_good = Would the projector
# two_prefix_prefix_bad = The projector would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present155
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	projector	projector	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	darken	darken	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Carla ever looked to spin around?
# sentence_bad = Carla had ever looked to spin around.
# two_prefix_prefix_good = Had Carla
# two_prefix_prefix_bad = Carla had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present156
1	Carla	Carla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	looked	look	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	spin	spin	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	around	around	ADV	RB	_	6	advmod	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Gary ever anticipated Samantha to go to a cafe?
# sentence_bad = Gary had ever anticipated Samantha to go to a cafe.
# two_prefix_prefix_good = Had Gary
# two_prefix_prefix_bad = Gary had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present157
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	anticipated	anticipate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Samantha	Samantha	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	go	go	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	to	to	ADP	IN	_	10	case	_	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	_	_
10	cafe	cafe	NOUN	NN	Number=Sing	7	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Beverly ever fix this glass?
# sentence_bad = Beverly can ever fix this glass.
# two_prefix_prefix_good = Can Beverly
# two_prefix_prefix_bad = Beverly can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present158
1	Beverly	Beverly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	fix	fix	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	glass	glass	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had all jackets ever soaked?
# sentence_bad = All jackets had ever soaked.
# two_prefix_prefix_good = Had all jackets
# two_prefix_prefix_bad = All jackets had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present159
1	All	all	DET	DT	_	2	det	_	_
2	jackets	jacket	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	soaked	soak	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Walter ever depart?
# sentence_bad = Walter does ever depart.
# two_prefix_prefix_good = Does Walter
# two_prefix_prefix_bad = Walter does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present160
1	Walter	Walter	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	depart	depart	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Deanna ever hide?
# sentence_bad = Deanna should ever hide.
# two_prefix_prefix_good = Should Deanna
# two_prefix_prefix_bad = Deanna should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present161
1	Deanna	Deanna	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hide	hide	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did the river ever vaporize?
# sentence_bad = The river did ever vaporize.
# two_prefix_prefix_good = Did the river
# two_prefix_prefix_bad = The river did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present162
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	river	river	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	vaporize	vaporize	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Elaine ever shouted?
# sentence_bad = Elaine had ever shouted.
# two_prefix_prefix_good = Had Elaine
# two_prefix_prefix_bad = Elaine had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present163
1	Elaine	Elaine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	shouted	shout	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had most children ever investigated who doesn't flee from Laurie?
# sentence_bad = Most children had ever investigated who doesn't flee from Laurie.
# two_prefix_prefix_good = Had most children
# two_prefix_prefix_bad = Most children had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present164
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	children	child	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	investigated	investigate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	who	who	PRON	WP	PronType=Rel	9	nsubj	_	_
7-8	doesn't	_	_	_	_	_	_	_	_
7	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	flee	flee	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	from	from	ADP	IN	_	11	case	_	_
11	Laurie	Laurie	PROPN	NNP	Number=Sing	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had a lot of cashiers ever impressed this child?
# sentence_bad = A lot of cashiers had ever impressed this child.
# two_prefix_prefix_good = Had a lot of cashiers
# two_prefix_prefix_bad = A lot of cashiers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present165
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	cashiers	cashier	NOUN	NNS	Number=Plur	2	nmod	_	_
5	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	impressed	impress	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8	this	this	DET	DT	Number=Sing|PronType=Dem	9	det	_	_
9	child	child	NOUN	NN	Number=Sing	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Does Brad ever want some doctors to complain about Melissa?
# sentence_bad = Brad does ever want some doctors to complain about Melissa.
# two_prefix_prefix_good = Does Brad
# two_prefix_prefix_bad = Brad does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present166
1	Brad	Brad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	want	want	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	doctors	doctor	NOUN	NNS	Number=Plur	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	complain	complain	VERB	VB	VerbForm=Inf	4	xcomp	_	_
9	about	about	ADP	IN	_	10	case	_	_
10	Melissa	Melissa	PROPN	NNP	Number=Sing	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Sara ever referenced Sharon?
# sentence_bad = Sara had ever referenced Sharon.
# two_prefix_prefix_good = Had Sara
# two_prefix_prefix_bad = Sara had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present167
1	Sara	Sara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	referenced	reference	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Sharon	Sharon	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the glasses ever flattened?
# sentence_bad = The glasses had ever flattened.
# two_prefix_prefix_good = Had the glasses
# two_prefix_prefix_bad = The glasses had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present168
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	glasses	glass	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	flattened	flatten	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Ruth ever hire this driver?
# sentence_bad = Ruth would ever hire this driver.
# two_prefix_prefix_good = Would Ruth
# two_prefix_prefix_bad = Ruth would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present169
1	Ruth	Ruth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hire	hire	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	driver	driver	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will every popsicle ever melt?
# sentence_bad = Every popsicle will ever melt.
# two_prefix_prefix_good = Will every popsicle
# two_prefix_prefix_bad = Every popsicle will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present170
1	Every	every	DET	DT	_	2	det	_	_
2	popsicle	popsicle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	melt	melt	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have the blouses ever loosened?
# sentence_bad = The blouses have ever loosened.
# two_prefix_prefix_good = Have the blouses
# two_prefix_prefix_bad = The blouses have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present171
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	blouses	blouse	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	loosened	loosen	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Jason ever investigate Cheryl?
# sentence_bad = Jason did ever investigate Cheryl.
# two_prefix_prefix_good = Did Jason
# two_prefix_prefix_bad = Jason did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present172
1	Jason	Jason	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	investigate	investigate	VERB	VB	VerbForm=Inf	0	root	_	_
5	Cheryl	Cheryl	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Connie ever compromised?
# sentence_bad = Connie had ever compromised.
# two_prefix_prefix_good = Had Connie
# two_prefix_prefix_bad = Connie had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present173
1	Connie	Connie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compromised	compromise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would the men ever bother these students?
# sentence_bad = The men would ever bother these students.
# two_prefix_prefix_good = Would the men
# two_prefix_prefix_bad = The men would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present174
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	men	man	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bother	bother	VERB	VB	VerbForm=Inf	0	root	_	_
6	these	this	DET	DT	Number=Plur|PronType=Dem	7	det	_	_
7	students	student	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had teenagers ever retaliated?
# sentence_bad = Teenagers had ever retaliated.
# two_prefix_prefix_good = Had teenagers
# two_prefix_prefix_bad = Teenagers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present175
1	Teenagers	teenager	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	retaliated	retaliate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should the cart ever accelerate?
# sentence_bad = The cart should ever accelerate.
# two_prefix_prefix_good = Should the cart
# two_prefix_prefix_bad = The cart should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present176
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	cart	cart	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	accelerate	accelerate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Theodore ever argue?
# sentence_bad = Theodore does ever argue.
# two_prefix_prefix_good = Does Theodore
# two_prefix_prefix_bad = Theodore does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present177
1	Theodore	Theodore	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argue	argue	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Matt ever intended to reveal some public parks?
# sentence_bad = Matt has ever intended to reveal some public parks.
# two_prefix_prefix_good = Has Matt
# two_prefix_prefix_bad = Matt has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present178
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	intended	intend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	reveal	reveal	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	some	some	DET	DT	_	9	det	_	_
8	public	public	ADJ	JJ	Degree=Pos	9	amod	_	_
9	parks	park	NOUN	NNS	Number=Plur	6	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Randolf ever shouted?
# sentence_bad = Randolf has ever shouted.
# two_prefix_prefix_good = Has Randolf
# two_prefix_prefix_bad = Randolf has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present179
1	Randolf	Randolf	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	shouted	shout	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Laurie ever nod?
# sentence_bad = Laurie does ever nod.
# two_prefix_prefix_good = Does Laurie
# two_prefix_prefix_bad = Laurie does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present180
1	Laurie	Laurie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	nod	nod	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Marla ever blink?
# sentence_bad = Marla will ever blink.
# two_prefix_prefix_good = Will Marla
# two_prefix_prefix_bad = Marla will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present181
1	Marla	Marla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	blink	blink	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will that couch ever fall apart?
# sentence_bad = That couch will ever fall apart.
# two_prefix_prefix_good = Will that couch
# two_prefix_prefix_bad = That couch will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present182
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	couch	couch	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	_
6	apart	apart	ADV	RB	_	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Dana ever order Kenneth's employee to explore most museums?
# sentence_bad = Dana should ever order Kenneth's employee to explore most museums.
# two_prefix_prefix_good = Should Dana
# two_prefix_prefix_bad = Dana should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present183
1	Dana	Dana	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	order	order	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kenneth's	Kenneth'	PROPN	NNPS	Number=Plur	6	compound	_	_
6	employee	employee	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	explore	explore	VERB	VB	VerbForm=Inf	4	xcomp	_	_
9	most	most	ADJ	JJS	Degree=Sup	10	amod	_	_
10	museums	museum	NOUN	NNS	Number=Plur	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Vanessa ever appreciated Patrick?
# sentence_bad = Vanessa had ever appreciated Patrick.
# two_prefix_prefix_good = Had Vanessa
# two_prefix_prefix_bad = Vanessa had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present184
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	appreciated	appreciate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Patrick	Patrick	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can that shoe ever fray?
# sentence_bad = That shoe can ever fray.
# two_prefix_prefix_good = Can that shoe
# two_prefix_prefix_bad = That shoe can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present185
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	shoe	shoe	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fray	fray	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Margaret ever failed to discuss that woman?
# sentence_bad = Margaret has ever failed to discuss that woman.
# two_prefix_prefix_good = Has Margaret
# two_prefix_prefix_bad = Margaret has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present186
1	Margaret	Margaret	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	failed	fail	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	discuss	discuss	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	that	that	DET	DT	Number=Sing|PronType=Dem	8	det	_	_
8	woman	woman	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has that apple ever charred?
# sentence_bad = That apple has ever charred.
# two_prefix_prefix_good = Has that apple
# two_prefix_prefix_bad = That apple has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present187
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	apple	apple	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	charred	char	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have those waiters ever obligated Monica to suffer?
# sentence_bad = Those waiters have ever obligated Monica to suffer.
# two_prefix_prefix_good = Have those waiters
# two_prefix_prefix_bad = Those waiters have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present188
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	waiters	waiter	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	obligated	obligate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Monica	Monica	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	suffer	suffer	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did this committee ever reply?
# sentence_bad = This committee did ever reply.
# two_prefix_prefix_good = Did this committee
# two_prefix_prefix_bad = This committee did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present189
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	committee	committee	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reply	reply	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Theodore ever swallow?
# sentence_bad = Theodore could ever swallow.
# two_prefix_prefix_good = Could Theodore
# two_prefix_prefix_bad = Theodore could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present190
1	Theodore	Theodore	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	swallow	swallow	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Ella ever exist?
# sentence_bad = Ella should ever exist.
# two_prefix_prefix_good = Should Ella
# two_prefix_prefix_bad = Ella should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present191
1	Ella	Ella	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	exist	exist	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Stacey ever cared for Ruth?
# sentence_bad = Stacey has ever cared for Ruth.
# two_prefix_prefix_good = Has Stacey
# two_prefix_prefix_bad = Stacey has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present192
1	Stacey	Stacey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cared	care	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	Ruth	Ruth	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Naomi ever boast about Ellen?
# sentence_bad = Naomi might ever boast about Ellen.
# two_prefix_prefix_good = Might Naomi
# two_prefix_prefix_bad = Naomi might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present193
1	Naomi	Naomi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boast	boast	VERB	VB	VerbForm=Inf	0	root	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	Ellen	Ellen	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Wayne ever walked through public parks?
# sentence_bad = Wayne has ever walked through public parks.
# two_prefix_prefix_good = Has Wayne
# two_prefix_prefix_bad = Wayne has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present194
1	Wayne	Wayne	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	walked	walk	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	through	through	ADP	IN	_	7	case	_	_
6	public	public	ADJ	JJ	Degree=Pos	7	amod	_	_
7	parks	park	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have those men ever hunted?
# sentence_bad = Those men have ever hunted.
# two_prefix_prefix_good = Have those men
# two_prefix_prefix_bad = Those men have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present195
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	men	man	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	hunted	hunt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Roger ever plan to complain about those guys?
# sentence_bad = Roger will ever plan to complain about those guys.
# two_prefix_prefix_good = Will Roger
# two_prefix_prefix_bad = Roger will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present196
1	Roger	Roger	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	plan	plan	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	complain	complain	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	about	about	ADP	IN	_	9	case	_	_
8	those	that	DET	DT	Number=Plur|PronType=Dem	9	det	_	_
9	guys	guy	NOUN	NNS	Number=Plur	6	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Grace ever boycotted that legislature?
# sentence_bad = Grace had ever boycotted that legislature.
# two_prefix_prefix_good = Had Grace
# two_prefix_prefix_bad = Grace had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present197
1	Grace	Grace	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boycotted	boycot	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	legislature	legislature	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Laurie ever figured out what hasn't blackened?
# sentence_bad = Laurie has ever figured out what hasn't blackened.
# two_prefix_prefix_good = Has Laurie
# two_prefix_prefix_bad = Laurie has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present198
1	Laurie	Laurie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	figured	figure	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	out	out	ADP	RP	_	4	compound:prt	_	_
6	what	what	PRON	WP	PronType=Int	9	nsubj	_	_
7-8	hasn't	_	_	_	_	_	_	_	_
7	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	blackened	blacken	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have waiters ever explored every museum?
# sentence_bad = Waiters have ever explored every museum.
# two_prefix_prefix_good = Have waiters
# two_prefix_prefix_bad = Waiters have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present199
1	Waiters	waiter	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	explored	explore	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	museum	museum	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Stephanie ever badger every adult to exercise?
# sentence_bad = Stephanie can ever badger every adult to exercise.
# two_prefix_prefix_good = Can Stephanie
# two_prefix_prefix_bad = Stephanie can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present200
1	Stephanie	Stephanie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	badger	badger	VERB	VB	VerbForm=Inf	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	adult	adult	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	exercise	exercise	VERB	VB	VerbForm=Inf	4	advcl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Liam ever weep?
# sentence_bad = Liam should ever weep.
# two_prefix_prefix_good = Should Liam
# two_prefix_prefix_bad = Liam should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present201
1	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	weep	weep	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the skirts ever dried?
# sentence_bad = The skirts had ever dried.
# two_prefix_prefix_good = Had the skirts
# two_prefix_prefix_bad = The skirts had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present202
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	skirts	skirt	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	dried	dry	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Heather ever convince Carrie to learn?
# sentence_bad = Heather should ever convince Carrie to learn.
# two_prefix_prefix_good = Should Heather
# two_prefix_prefix_bad = Heather should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present203
1	Heather	Heather	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	convince	convince	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carrie	Carrie	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	learn	learn	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Carrie ever doubted Eric thought about what chars?
# sentence_bad = Carrie has ever doubted Eric thought about what chars.
# two_prefix_prefix_good = Has Carrie
# two_prefix_prefix_bad = Carrie has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present204
1	Carrie	Carrie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	doubted	doubt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Eric	Eric	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	thought	think	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	ccomp	_	_
7	about	about	SCONJ	IN	_	9	mark	_	_
8	what	what	PRON	WP	PronType=Int	9	obj	_	_
9	chars	char	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	advcl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do the books ever alarm Aaron?
# sentence_bad = The books do ever alarm Aaron.
# two_prefix_prefix_good = Do the books
# two_prefix_prefix_bad = The books do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present205
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	books	book	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	alarm	alarm	VERB	VB	VerbForm=Inf	0	root	_	_
6	Aaron	Aaron	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Beverly ever won?
# sentence_bad = Beverly has ever won.
# two_prefix_prefix_good = Has Beverly
# two_prefix_prefix_bad = Beverly has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present206
1	Beverly	Beverly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	won	win	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can all legislatures ever benefit?
# sentence_bad = All legislatures can ever benefit.
# two_prefix_prefix_good = Can all legislatures
# two_prefix_prefix_bad = All legislatures can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present207
1	All	all	DET	DT	_	2	det	_	_
2	legislatures	legislature	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	benefit	benefit	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Joel ever return to April?
# sentence_bad = Joel would ever return to April.
# two_prefix_prefix_good = Would Joel
# two_prefix_prefix_bad = Joel would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present208
1	Joel	Joel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	return	return	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	April	April	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Christopher ever driven to this mall?
# sentence_bad = Christopher had ever driven to this mall.
# two_prefix_prefix_good = Had Christopher
# two_prefix_prefix_bad = Christopher had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present209
1	Christopher	Christopher	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	driven	drive	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	ADP	IN	_	7	case	_	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	mall	mall	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Carla ever spurred David to blink?
# sentence_bad = Carla had ever spurred David to blink.
# two_prefix_prefix_good = Had Carla
# two_prefix_prefix_bad = Carla had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present210
1	Carla	Carla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	spurred	spur	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	David	David	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	blink	blink	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Dawn ever forgotten who hadn't compelled Edward's lawyer to wave?
# sentence_bad = Dawn had ever forgotten who hadn't compelled Edward's lawyer to wave.
# two_prefix_prefix_good = Had Dawn
# two_prefix_prefix_bad = Dawn had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present211
1	Dawn	Dawn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forgotten	forget	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	who	who	PRON	WP	PronType=Int	8	nsubj	_	_
6-7	hadn't	_	_	_	_	_	_	_	_
6	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	compelled	compel	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
9-10	Edward's	_	_	_	_	_	_	_	_
9	Edward	Edward	PROPN	NNP	Number=Sing	11	nmod:poss	_	_
10	's	's	PART	POS	_	9	case	_	_
11	lawyer	lawyer	NOUN	NN	Number=Sing	8	obj	_	_
12	to	to	PART	TO	_	13	mark	_	_
13	wave	wave	VERB	VB	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
14	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have these actors ever explained everything?
# sentence_bad = These actors have ever explained everything.
# two_prefix_prefix_good = Have these actors
# two_prefix_prefix_bad = These actors have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present212
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	explained	explain	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	everything	everything	PRON	NN	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Lissa ever discovered April?
# sentence_bad = Lissa had ever discovered April.
# two_prefix_prefix_good = Had Lissa
# two_prefix_prefix_bad = Lissa had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present213
1	Lissa	Lissa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discovered	discover	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	April	April	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Gerald ever change?
# sentence_bad = Gerald could ever change.
# two_prefix_prefix_good = Could Gerald
# two_prefix_prefix_bad = Gerald could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present214
1	Gerald	Gerald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	change	change	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should all drivers ever interact?
# sentence_bad = All drivers should ever interact.
# two_prefix_prefix_good = Should all drivers
# two_prefix_prefix_bad = All drivers should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present215
1	All	all	DET	DT	_	2	det	_	_
2	drivers	driver	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	interact	interact	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Melanie ever hurt Tiffany?
# sentence_bad = Melanie will ever hurt Tiffany.
# two_prefix_prefix_good = Will Melanie
# two_prefix_prefix_bad = Melanie will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present216
1	Melanie	Melanie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hurt	hurt	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tiffany	Tiffany	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that coat ever warped?
# sentence_bad = That coat had ever warped.
# two_prefix_prefix_good = Had that coat
# two_prefix_prefix_bad = That coat had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present217
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	coat	coat	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	warped	warp	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Karla ever answered?
# sentence_bad = Karla has ever answered.
# two_prefix_prefix_good = Has Karla
# two_prefix_prefix_bad = Karla has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present218
1	Karla	Karla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	answered	answer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can some doctors ever cheer?
# sentence_bad = Some doctors can ever cheer.
# two_prefix_prefix_good = Can some doctors
# two_prefix_prefix_bad = Some doctors can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present219
1	Some	some	DET	DT	_	2	det	_	_
2	doctors	doctor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cheer	cheer	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did most plays ever disagree with Gerald?
# sentence_bad = Most plays did ever disagree with Gerald.
# two_prefix_prefix_good = Did most plays
# two_prefix_prefix_bad = Most plays did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present220
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	plays	play	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disagree	disagree	VERB	VB	VerbForm=Inf	0	root	_	_
6	with	with	ADP	IN	_	7	case	_	_
7	Gerald	Gerald	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Gary ever ascertain the skateboard to roll?
# sentence_bad = Gary can ever ascertain the skateboard to roll.
# two_prefix_prefix_good = Can Gary
# two_prefix_prefix_bad = Gary can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present221
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	ascertain	ascertain	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	skateboard	skateboard	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	roll	roll	VERB	VB	VerbForm=Inf	4	advcl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Jodi ever skate around Harvard University?
# sentence_bad = Jodi would ever skate around Harvard University.
# two_prefix_prefix_good = Would Jodi
# two_prefix_prefix_bad = Jodi would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present222
1	Jodi	Jodi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	skate	skate	VERB	VB	VerbForm=Inf	0	root	_	_
5	around	around	ADP	IN	_	7	case	_	_
6	Harvard	Harvard	PROPN	NNP	Number=Sing	7	compound	_	_
7	University	University	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Natalie ever drunk?
# sentence_bad = Natalie had ever drunk.
# two_prefix_prefix_good = Had Natalie
# two_prefix_prefix_bad = Natalie had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present223
1	Natalie	Natalie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	drunk	drink	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Jacqueline ever insulted John?
# sentence_bad = Jacqueline has ever insulted John.
# two_prefix_prefix_good = Has Jacqueline
# two_prefix_prefix_bad = Jacqueline has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present224
1	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	insulted	insult	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	John	John	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does some skirt ever stretch?
# sentence_bad = Some skirt does ever stretch.
# two_prefix_prefix_good = Does some skirt
# two_prefix_prefix_bad = Some skirt does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present225
1	Some	some	DET	DT	_	2	det	_	_
2	skirt	skirt	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stretch	stretch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Bethany ever love this movie?
# sentence_bad = Bethany might ever love this movie.
# two_prefix_prefix_good = Might Bethany
# two_prefix_prefix_bad = Bethany might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present226
1	Bethany	Bethany	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	love	love	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	movie	movie	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Diana ever remembered Heather?
# sentence_bad = Diana has ever remembered Heather.
# two_prefix_prefix_good = Has Diana
# two_prefix_prefix_bad = Diana has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present227
1	Diana	Diana	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remembered	remember	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Heather	Heather	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might a lot of patients ever debate?
# sentence_bad = A lot of patients might ever debate.
# two_prefix_prefix_good = Might a lot of patients
# two_prefix_prefix_bad = A lot of patients might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present228
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	patients	patient	NOUN	NNS	Number=Plur	2	nmod	_	_
5	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	debate	debate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Might all windows ever irritate Lawrence?
# sentence_bad = All windows might ever irritate Lawrence.
# two_prefix_prefix_good = Might all windows
# two_prefix_prefix_bad = All windows might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present229
1	All	all	DET	DT	_	2	det	_	_
2	windows	window	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	irritate	irritate	VERB	VB	VerbForm=Inf	0	root	_	_
6	Lawrence	Lawrence	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has that jacket ever twisted?
# sentence_bad = That jacket has ever twisted.
# two_prefix_prefix_good = Has that jacket
# two_prefix_prefix_bad = That jacket has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present230
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	jacket	jacket	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	twisted	twist	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Bradley ever sounded like that closet?
# sentence_bad = Bradley has ever sounded like that closet.
# two_prefix_prefix_good = Has Bradley
# two_prefix_prefix_bad = Bradley has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present231
1	Bradley	Bradley	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sounded	sound	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	like	like	ADP	IN	_	7	case	_	_
6	that	that	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	closet	closet	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Sonia ever watch Jane?
# sentence_bad = Sonia did ever watch Jane.
# two_prefix_prefix_good = Did Sonia
# two_prefix_prefix_bad = Sonia did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present232
1	Sonia	Sonia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	watch	watch	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jane	Jane	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Tammy ever gone fishing?
# sentence_bad = Tammy has ever gone fishing.
# two_prefix_prefix_good = Has Tammy
# two_prefix_prefix_bad = Tammy has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present233
1	Tammy	Tammy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	gone	go	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	fishing	fish	VERB	VBG	VerbForm=Ger	4	xcomp	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does every apple ever scorch?
# sentence_bad = Every apple does ever scorch.
# two_prefix_prefix_good = Does every apple
# two_prefix_prefix_bad = Every apple does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present234
1	Every	every	DET	DT	_	2	det	_	_
2	apple	apple	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	scorch	scorch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Benjamin ever fall?
# sentence_bad = Benjamin should ever fall.
# two_prefix_prefix_good = Should Benjamin
# two_prefix_prefix_bad = Benjamin should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present235
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Clyde ever cry?
# sentence_bad = Clyde might ever cry.
# two_prefix_prefix_good = Might Clyde
# two_prefix_prefix_bad = Clyde might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present236
1	Clyde	Clyde	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cry	cry	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Vanessa ever pressure Homer's dermatologist to complain?
# sentence_bad = Vanessa will ever pressure Homer's dermatologist to complain.
# two_prefix_prefix_good = Will Vanessa
# two_prefix_prefix_bad = Vanessa will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present237
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	pressure	pressure	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Homer's	_	_	_	_	_	_	_	_
5	Homer	Homer	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	dermatologist	dermatologist	NOUN	NN	Number=Sing	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	complain	complain	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Adam ever compromised?
# sentence_bad = Adam had ever compromised.
# two_prefix_prefix_good = Had Adam
# two_prefix_prefix_bad = Adam had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present238
1	Adam	Adam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compromised	compromise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Kathleen ever hired most men?
# sentence_bad = Kathleen had ever hired most men.
# two_prefix_prefix_good = Had Kathleen
# two_prefix_prefix_bad = Kathleen had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present239
1	Kathleen	Kathleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hired	hire	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	men	man	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had this coat ever twirled?
# sentence_bad = This coat had ever twirled.
# two_prefix_prefix_good = Had this coat
# two_prefix_prefix_bad = This coat had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present240
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	coat	coat	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	twirled	twirl	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had some plane ever accelerated?
# sentence_bad = Some plane had ever accelerated.
# two_prefix_prefix_good = Had some plane
# two_prefix_prefix_bad = Some plane had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present241
1	Some	some	DET	DT	_	2	det	_	_
2	plane	plane	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	accelerated	accelerate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Harvard University ever confuse Galileo?
# sentence_bad = Harvard University could ever confuse Galileo.
# two_prefix_prefix_good = Could Harvard University
# two_prefix_prefix_bad = Harvard University could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present242
1	Harvard	Harvard	PROPN	NNP	Number=Sing	2	compound	_	_
2	University	University	PROPN	NNP	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	confuse	confuse	VERB	VB	VerbForm=Inf	0	root	_	_
6	Galileo	Galileo	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might all dancers ever explore the Great Lakes?
# sentence_bad = All dancers might ever explore the Great Lakes.
# two_prefix_prefix_good = Might all dancers
# two_prefix_prefix_bad = All dancers might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present243
1	All	all	DET	DT	_	2	det	_	_
2	dancers	dancer	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	explore	explore	VERB	VB	VerbForm=Inf	0	root	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	8	det	_	_
7	Great	Great	ADJ	NNP	Degree=Pos	8	amod	_	_
8	Lakes	Lake	PROPN	NNPS	Number=Plur	5	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Cheryl ever happened to hide?
# sentence_bad = Cheryl has ever happened to hide.
# two_prefix_prefix_good = Has Cheryl
# two_prefix_prefix_bad = Cheryl has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present244
1	Cheryl	Cheryl	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	happened	happen	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	hide	hide	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Claire ever cough?
# sentence_bad = Claire should ever cough.
# two_prefix_prefix_good = Should Claire
# two_prefix_prefix_bad = Claire should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present245
1	Claire	Claire	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cough	cough	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has this university ever approved?
# sentence_bad = This university has ever approved.
# two_prefix_prefix_good = Has this university
# two_prefix_prefix_bad = This university has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present246
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	university	university	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	approved	approve	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Rachel ever hunt?
# sentence_bad = Rachel can ever hunt.
# two_prefix_prefix_good = Can Rachel
# two_prefix_prefix_bad = Rachel can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present247
1	Rachel	Rachel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hunt	hunt	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Veronica ever disgusted Tracy?
# sentence_bad = Veronica had ever disgusted Tracy.
# two_prefix_prefix_good = Had Veronica
# two_prefix_prefix_bad = Veronica had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present248
1	Veronica	Veronica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disgusted	disgust	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Tracy	Tracy	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does that legislature ever succeed?
# sentence_bad = That legislature does ever succeed.
# two_prefix_prefix_good = Does that legislature
# two_prefix_prefix_bad = That legislature does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present249
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	legislature	legislature	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	succeed	succeed	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should these museums ever forget what would turn?
# sentence_bad = These museums should ever forget what would turn.
# two_prefix_prefix_good = Should these museums
# two_prefix_prefix_bad = These museums should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present250
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	museums	museum	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	forget	forget	VERB	VB	VerbForm=Inf	0	root	_	_
6	what	what	PRON	WP	PronType=Int	8	nsubj	_	_
7	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
8	turn	turn	VERB	VB	VerbForm=Inf	5	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Kayla ever hurt Eric?
# sentence_bad = Kayla would ever hurt Eric.
# two_prefix_prefix_good = Would Kayla
# two_prefix_prefix_bad = Kayla would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present251
1	Kayla	Kayla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hurt	hurt	VERB	VB	VerbForm=Inf	0	root	_	_
5	Eric	Eric	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can those guests ever intend to think about the couch?
# sentence_bad = Those guests can ever intend to think about the couch.
# two_prefix_prefix_good = Can those guests
# two_prefix_prefix_bad = Those guests can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present252
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	guests	guest	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	intend	intend	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	think	think	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	about	about	ADP	IN	_	10	case	_	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	_	_
10	couch	couch	NOUN	NN	Number=Sing	7	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Emily ever happen to marry?
# sentence_bad = Emily will ever happen to marry.
# two_prefix_prefix_good = Will Emily
# two_prefix_prefix_bad = Emily will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present253
1	Emily	Emily	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	happen	happen	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	marry	marry	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can some girls ever kiss?
# sentence_bad = Some girls can ever kiss.
# two_prefix_prefix_good = Can some girls
# two_prefix_prefix_bad = Some girls can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present254
1	Some	some	DET	DT	_	2	det	_	_
2	girls	girl	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	kiss	kiss	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Steven ever tour the mall?
# sentence_bad = Steven can ever tour the mall.
# two_prefix_prefix_good = Can Steven
# two_prefix_prefix_bad = Steven can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present255
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	tour	tour	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	mall	mall	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have those rivers ever vaporized?
# sentence_bad = Those rivers have ever vaporized.
# two_prefix_prefix_good = Have those rivers
# two_prefix_prefix_bad = Those rivers have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present256
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	rivers	river	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	vaporized	vaporize	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should the glaciers ever melt?
# sentence_bad = The glaciers should ever melt.
# two_prefix_prefix_good = Should the glaciers
# two_prefix_prefix_bad = The glaciers should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present257
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	glaciers	glacier	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	melt	melt	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had these lights ever brightened?
# sentence_bad = These lights had ever brightened.
# two_prefix_prefix_good = Had these lights
# two_prefix_prefix_bad = These lights had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present258
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	lights	light	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	brightened	brighten	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Do some ladies ever conceal who explored some restaurant?
# sentence_bad = Some ladies do ever conceal who explored some restaurant.
# two_prefix_prefix_good = Do some ladies
# two_prefix_prefix_bad = Some ladies do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present259
1	Some	some	DET	DT	_	2	det	_	_
2	ladies	lady	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	0	root	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	explored	explore	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	ccomp	_	_
8	some	some	DET	DT	_	9	det	_	_
9	restaurant	restaurant	NOUN	NN	Number=Sing	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Jennifer ever hugged Aaron?
# sentence_bad = Jennifer has ever hugged Aaron.
# two_prefix_prefix_good = Has Jennifer
# two_prefix_prefix_bad = Jennifer has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present260
1	Jennifer	Jennifer	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hugged	hug	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Aaron	Aaron	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should most dancers ever compete?
# sentence_bad = Most dancers should ever compete.
# two_prefix_prefix_good = Should most dancers
# two_prefix_prefix_bad = Most dancers should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present261
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	dancers	dancer	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	compete	compete	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Tammy ever have some mushrooms?
# sentence_bad = Tammy would ever have some mushrooms.
# two_prefix_prefix_good = Would Tammy
# two_prefix_prefix_bad = Tammy would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present262
1	Tammy	Tammy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	have	have	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	mushrooms	mushroom	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Lawrence ever found Helen?
# sentence_bad = Lawrence had ever found Helen.
# two_prefix_prefix_good = Had Lawrence
# two_prefix_prefix_bad = Lawrence had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present263
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	found	find	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Helen	Helen	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Beverly ever fixed that unicycle?
# sentence_bad = Beverly has ever fixed that unicycle.
# two_prefix_prefix_good = Has Beverly
# two_prefix_prefix_bad = Beverly has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present264
1	Beverly	Beverly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	fixed	fix	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	unicycle	unicycle	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Phillip ever drive to a mall?
# sentence_bad = Phillip could ever drive to a mall.
# two_prefix_prefix_good = Could Phillip
# two_prefix_prefix_bad = Phillip could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present265
1	Phillip	Phillip	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	drive	drive	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	mall	mall	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did that patient ever doubt Anna saw?
# sentence_bad = That patient did ever doubt Anna saw.
# two_prefix_prefix_good = Did that patient
# two_prefix_prefix_bad = That patient did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present266
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	patient	patient	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	doubt	doubt	VERB	VB	VerbForm=Inf	0	root	_	_
6	Anna	Anna	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	saw	see	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Phillip ever compromised?
# sentence_bad = Phillip has ever compromised.
# two_prefix_prefix_good = Has Phillip
# two_prefix_prefix_bad = Phillip has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present267
1	Phillip	Phillip	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compromised	compromise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will the Lutherans ever describe Chad?
# sentence_bad = The Lutherans will ever describe Chad.
# two_prefix_prefix_good = Will the Lutherans
# two_prefix_prefix_bad = The Lutherans will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present268
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Lutherans	Lutheran	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	describe	describe	VERB	VB	VerbForm=Inf	0	root	_	_
6	Chad	Chad	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Mitchell ever smiled?
# sentence_bad = Mitchell had ever smiled.
# two_prefix_prefix_good = Had Mitchell
# two_prefix_prefix_bad = Mitchell had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present269
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	smiled	smile	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has this dress ever twirled?
# sentence_bad = This dress has ever twirled.
# two_prefix_prefix_good = Has this dress
# two_prefix_prefix_bad = This dress has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present270
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	dress	dress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	twirled	twirl	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Rose ever changed?
# sentence_bad = Rose had ever changed.
# two_prefix_prefix_good = Had Rose
# two_prefix_prefix_bad = Rose had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present271
1	Rose	Rose	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	changed	change	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Richard ever manage to go fishing?
# sentence_bad = Richard does ever manage to go fishing.
# two_prefix_prefix_good = Does Richard
# two_prefix_prefix_bad = Richard does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present272
1	Richard	Richard	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	manage	manage	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	go	go	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	fishing	fish	VERB	VBG	VerbForm=Ger	6	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has a bank ever neglected to profit?
# sentence_bad = A bank has ever neglected to profit.
# two_prefix_prefix_good = Has a bank
# two_prefix_prefix_bad = A bank has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present273
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	bank	bank	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	neglected	neglect	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	profit	profit	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had all convertibles ever moved?
# sentence_bad = All convertibles had ever moved.
# two_prefix_prefix_good = Had all convertibles
# two_prefix_prefix_bad = All convertibles had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present274
1	All	all	DET	DT	_	2	det	_	_
2	convertibles	convertible	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	moved	move	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Steven ever climbed down this mountain?
# sentence_bad = Steven had ever climbed down this mountain.
# two_prefix_prefix_good = Had Steven
# two_prefix_prefix_bad = Steven had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present275
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	climbed	climb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	down	down	ADP	IN	_	7	case	_	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	mountain	mountain	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Carla ever salute?
# sentence_bad = Carla could ever salute.
# two_prefix_prefix_good = Could Carla
# two_prefix_prefix_bad = Carla could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present276
1	Carla	Carla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	salute	salute	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might every driver ever appear to know Bethany?
# sentence_bad = Every driver might ever appear to know Bethany.
# two_prefix_prefix_good = Might every driver
# two_prefix_prefix_bad = Every driver might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present277
1	Every	every	DET	DT	_	2	det	_	_
2	driver	driver	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	appear	appear	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	know	know	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	Bethany	Bethany	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Ruth ever turned out to testify?
# sentence_bad = Ruth had ever turned out to testify.
# two_prefix_prefix_good = Had Ruth
# two_prefix_prefix_bad = Ruth had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present278
1	Ruth	Ruth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	turned	turn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	out	out	ADP	RP	_	4	compound:prt	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	testify	testify	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Dennis ever found Tiffany?
# sentence_bad = Dennis had ever found Tiffany.
# two_prefix_prefix_good = Had Dennis
# two_prefix_prefix_bad = Dennis had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present279
1	Dennis	Dennis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	found	find	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Tiffany	Tiffany	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might those waitresses ever cooperate?
# sentence_bad = Those waitresses might ever cooperate.
# two_prefix_prefix_good = Might those waitresses
# two_prefix_prefix_bad = Those waitresses might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present280
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	waitresses	waitress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cooperate	cooperate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might James ever perform?
# sentence_bad = James might ever perform.
# two_prefix_prefix_good = Might James
# two_prefix_prefix_bad = James might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present281
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	perform	perform	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Tanya ever return to Mary?
# sentence_bad = Tanya could ever return to Mary.
# two_prefix_prefix_good = Could Tanya
# two_prefix_prefix_bad = Tanya could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present282
1	Tanya	Tanya	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	return	return	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	Mary	Mary	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can all dancers ever find this skateboard?
# sentence_bad = All dancers can ever find this skateboard.
# two_prefix_prefix_good = Can all dancers
# two_prefix_prefix_bad = All dancers can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present283
1	All	all	DET	DT	_	2	det	_	_
2	dancers	dancer	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	find	find	VERB	VB	VerbForm=Inf	0	root	_	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	skateboard	skateboard	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Lawrence ever observed Wayne?
# sentence_bad = Lawrence had ever observed Wayne.
# two_prefix_prefix_good = Had Lawrence
# two_prefix_prefix_bad = Lawrence had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present284
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Wayne	Wayne	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that university ever surrendered?
# sentence_bad = That university had ever surrendered.
# two_prefix_prefix_good = Had that university
# two_prefix_prefix_bad = That university had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present285
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	university	university	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	surrendered	surrender	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has this museum ever revealed who perform?
# sentence_bad = This museum has ever revealed who perform.
# two_prefix_prefix_good = Has this museum
# two_prefix_prefix_bad = This museum has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present286
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	museum	museum	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	revealed	reveal	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	perform	perform	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Jason ever wept?
# sentence_bad = Jason has ever wept.
# two_prefix_prefix_good = Has Jason
# two_prefix_prefix_bad = Jason has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present287
1	Jason	Jason	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wept	weep	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have some girls ever descended most steps?
# sentence_bad = Some girls have ever descended most steps.
# two_prefix_prefix_good = Have some girls
# two_prefix_prefix_bad = Some girls have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present288
1	Some	some	DET	DT	_	2	det	_	_
2	girls	girl	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	descended	descend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	most	most	ADJ	JJS	Degree=Sup	7	amod	_	_
7	steps	step	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Harvard University ever remembered what might chat?
# sentence_bad = Harvard University had ever remembered what might chat.
# two_prefix_prefix_good = Had Harvard University
# two_prefix_prefix_bad = Harvard University had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present289
1	Harvard	Harvard	PROPN	NNP	Number=Sing	2	compound	_	_
2	University	University	PROPN	NNP	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	remembered	remember	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	what	what	PRON	WP	PronType=Int	8	nsubj	_	_
7	might	might	AUX	MD	VerbForm=Fin	8	aux	_	_
8	chat	chat	VERB	VB	VerbForm=Inf	5	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Rhonda ever read?
# sentence_bad = Rhonda has ever read.
# two_prefix_prefix_good = Has Rhonda
# two_prefix_prefix_bad = Rhonda has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present290
1	Rhonda	Rhonda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	read	read	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Stacey ever woken up?
# sentence_bad = Stacey has ever woken up.
# two_prefix_prefix_good = Has Stacey
# two_prefix_prefix_bad = Stacey has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present291
1	Stacey	Stacey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	woken	wake	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	up	up	ADP	RP	_	4	compound:prt	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do gloves ever disappear?
# sentence_bad = Gloves do ever disappear.
# two_prefix_prefix_good = Do gloves
# two_prefix_prefix_bad = Gloves do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present292
1	Gloves	glove	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disappear	disappear	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Samuel ever suffer?
# sentence_bad = Samuel did ever suffer.
# two_prefix_prefix_good = Did Samuel
# two_prefix_prefix_bad = Samuel did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present293
1	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	suffer	suffer	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Carmen ever cough?
# sentence_bad = Carmen could ever cough.
# two_prefix_prefix_good = Could Carmen
# two_prefix_prefix_bad = Carmen could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present294
1	Carmen	Carmen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cough	cough	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might the woman ever scratch?
# sentence_bad = The woman might ever scratch.
# two_prefix_prefix_good = Might the woman
# two_prefix_prefix_bad = The woman might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present295
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	scratch	scratch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can that icicle ever aggravate Tonya?
# sentence_bad = That icicle can ever aggravate Tonya.
# two_prefix_prefix_good = Can that icicle
# two_prefix_prefix_bad = That icicle can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present296
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	icicle	icicle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	aggravate	aggravate	VERB	VB	VerbForm=Inf	0	root	_	_
6	Tonya	Tonya	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Carmen ever hate this guest?
# sentence_bad = Carmen might ever hate this guest.
# two_prefix_prefix_good = Might Carmen
# two_prefix_prefix_bad = Carmen might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present297
1	Carmen	Carmen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hate	hate	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	guest	guest	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Tracy ever get fired?
# sentence_bad = Tracy should ever get fired.
# two_prefix_prefix_good = Should Tracy
# two_prefix_prefix_bad = Tracy should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present298
1	Tracy	Tracy	PROPN	NNP	Number=Sing	5	nsubj:pass	_	_
2	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
3	ever	ever	ADV	RB	_	5	advmod	_	_
4	get	get	AUX	VB	VerbForm=Inf	5	aux:pass	_	_
5	fired	fire	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Julie ever drive to grocery stores?
# sentence_bad = Julie does ever drive to grocery stores.
# two_prefix_prefix_good = Does Julie
# two_prefix_prefix_bad = Julie does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present299
1	Julie	Julie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	drive	drive	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	ADP	IN	_	7	case	_	_
6	grocery	grocery	NOUN	NN	Number=Sing	7	compound	_	_
7	stores	store	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some actors ever pushed the girls' supervisor to dislike Larry?
# sentence_bad = Some actors had ever pushed the girls' supervisor to dislike Larry.
# two_prefix_prefix_good = Had some actors
# two_prefix_prefix_bad = Some actors had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present300
1	Some	some	DET	DT	_	2	det	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	pushed	push	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
7-8	girls'	_	_	_	_	_	_	_	_
7	girls	girl	NOUN	NNS	Number=Plur	9	nmod:poss	_	_
8	'	's	PART	POS	_	7	case	_	_
9	supervisor	supervisor	NOUN	NN	Number=Sing	5	obj	_	_
10	to	to	PART	TO	_	11	mark	_	_
11	dislike	dislike	VERB	VB	VerbForm=Inf	5	xcomp	_	_
12	Larry	Larry	PROPN	NNP	Number=Sing	11	obj	_	SpaceAfter=No
13	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Russell ever kissed Anna?
# sentence_bad = Russell had ever kissed Anna.
# two_prefix_prefix_good = Had Russell
# two_prefix_prefix_bad = Russell had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present301
1	Russell	Russell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	kissed	kiss	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Anna	Anna	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had a lot of gates ever closed?
# sentence_bad = A lot of gates had ever closed.
# two_prefix_prefix_good = Had a lot of gates
# two_prefix_prefix_bad = A lot of gates had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present302
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	gates	gate	NOUN	NNS	Number=Plur	2	nmod	_	_
5	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	closed	close	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Has this adult ever wondered who can debate?
# sentence_bad = This adult has ever wondered who can debate.
# two_prefix_prefix_good = Has this adult
# two_prefix_prefix_bad = This adult has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present303
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	adult	adult	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	wondered	wonder	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	who	who	PRON	WP	PronType=Int	8	nsubj	_	_
7	can	can	AUX	MD	VerbForm=Fin	8	aux	_	_
8	debate	debate	VERB	VB	VerbForm=Inf	5	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Maria ever talk about Scott?
# sentence_bad = Maria should ever talk about Scott.
# two_prefix_prefix_good = Should Maria
# two_prefix_prefix_bad = Maria should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present304
1	Maria	Maria	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	talk	talk	VERB	VB	VerbForm=Inf	0	root	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	Scott	Scott	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can some lamp ever darken?
# sentence_bad = Some lamp can ever darken.
# two_prefix_prefix_good = Can some lamp
# two_prefix_prefix_bad = Some lamp can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present305
1	Some	some	DET	DT	_	2	det	_	_
2	lamp	lamp	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	darken	darken	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Brian ever believed all couches to slip?
# sentence_bad = Brian had ever believed all couches to slip.
# two_prefix_prefix_good = Had Brian
# two_prefix_prefix_bad = Brian had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present306
1	Brian	Brian	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	believed	believe	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	all	all	DET	DT	_	6	det	_	_
6	couches	couch	NOUN	NNS	Number=Plur	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	slip	slip	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can the lady ever move?
# sentence_bad = The lady can ever move.
# two_prefix_prefix_good = Can the lady
# two_prefix_prefix_bad = The lady can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present307
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	lady	lady	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	move	move	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Rebecca ever distract Jeffrey?
# sentence_bad = Rebecca might ever distract Jeffrey.
# two_prefix_prefix_good = Might Rebecca
# two_prefix_prefix_bad = Rebecca might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present308
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	distract	distract	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Teresa ever gone to a lot of rivers?
# sentence_bad = Teresa had ever gone to a lot of rivers.
# two_prefix_prefix_good = Had Teresa
# two_prefix_prefix_bad = Teresa had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present309
1	Teresa	Teresa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	gone	go	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	lot	lot	NOUN	NN	Number=Sing	4	obl	_	_
8	of	of	ADP	IN	_	9	case	_	_
9	rivers	river	NOUN	NNS	Number=Plur	7	nmod	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Tara ever found these mirrors?
# sentence_bad = Tara has ever found these mirrors.
# two_prefix_prefix_good = Has Tara
# two_prefix_prefix_bad = Tara has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present310
1	Tara	Tara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	found	find	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	mirrors	mirror	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Jodi ever written?
# sentence_bad = Jodi had ever written.
# two_prefix_prefix_good = Had Jodi
# two_prefix_prefix_bad = Jodi had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present311
1	Jodi	Jodi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	written	write	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Gregory ever refused to discuss Becky?
# sentence_bad = Gregory has ever refused to discuss Becky.
# two_prefix_prefix_good = Has Gregory
# two_prefix_prefix_bad = Gregory has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present312
1	Gregory	Gregory	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	refused	refuse	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	discuss	discuss	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Becky	Becky	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Roger ever hide away?
# sentence_bad = Roger might ever hide away.
# two_prefix_prefix_good = Might Roger
# two_prefix_prefix_bad = Roger might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present313
1	Roger	Roger	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hide	hide	VERB	VB	VerbForm=Inf	0	root	_	_
5	away	away	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have some gloves ever flattened?
# sentence_bad = Some gloves have ever flattened.
# two_prefix_prefix_good = Have some gloves
# two_prefix_prefix_bad = Some gloves have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present314
1	Some	some	DET	DT	_	2	det	_	_
2	gloves	glove	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	flattened	flatten	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can a lot of men ever exist?
# sentence_bad = A lot of men can ever exist.
# two_prefix_prefix_good = Can a lot of men
# two_prefix_prefix_bad = A lot of men can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present315
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	men	man	NOUN	NNS	Number=Plur	2	nmod	_	_
5	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	exist	exist	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Has Christina ever nodded?
# sentence_bad = Christina has ever nodded.
# two_prefix_prefix_good = Has Christina
# two_prefix_prefix_bad = Christina has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present316
1	Christina	Christina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	nodded	nod	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Leslie ever skate around every public park?
# sentence_bad = Leslie would ever skate around every public park.
# two_prefix_prefix_good = Would Leslie
# two_prefix_prefix_bad = Leslie would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present317
1	Leslie	Leslie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	skate	skate	VERB	VB	VerbForm=Inf	0	root	_	_
5	around	around	ADP	IN	_	8	case	_	_
6	every	every	DET	DT	_	8	det	_	_
7	public	public	ADJ	JJ	Degree=Pos	8	amod	_	_
8	park	park	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Jane ever practiced?
# sentence_bad = Jane has ever practiced.
# two_prefix_prefix_good = Has Jane
# two_prefix_prefix_bad = Jane has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present318
1	Jane	Jane	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	practiced	practice	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have most actors ever disagreed?
# sentence_bad = Most actors have ever disagreed.
# two_prefix_prefix_good = Have most actors
# two_prefix_prefix_bad = Most actors have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present319
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disagreed	disagree	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has the legislature ever profited?
# sentence_bad = The legislature has ever profited.
# two_prefix_prefix_good = Has the legislature
# two_prefix_prefix_bad = The legislature has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present320
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	legislature	legislature	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	profited	profit	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will that museum ever reference Ellen?
# sentence_bad = That museum will ever reference Ellen.
# two_prefix_prefix_good = Will that museum
# two_prefix_prefix_bad = That museum will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present321
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	museum	museum	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reference	reference	VERB	VB	VerbForm=Inf	0	root	_	_
6	Ellen	Ellen	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Peter ever healed Marie?
# sentence_bad = Peter has ever healed Marie.
# two_prefix_prefix_good = Has Peter
# two_prefix_prefix_bad = Peter has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present322
1	Peter	Peter	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	healed	heal	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Marie	Marie	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Charles ever needed to cure Julie?
# sentence_bad = Charles has ever needed to cure Julie.
# two_prefix_prefix_good = Has Charles
# two_prefix_prefix_bad = Charles has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present323
1	Charles	Charles	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	needed	need	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	cure	cure	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Julie	Julie	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Gary ever played?
# sentence_bad = Gary has ever played.
# two_prefix_prefix_good = Has Gary
# two_prefix_prefix_bad = Gary has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present324
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	played	play	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Martin ever alarmed Michael?
# sentence_bad = Martin had ever alarmed Michael.
# two_prefix_prefix_good = Had Martin
# two_prefix_prefix_bad = Martin had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present325
1	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	alarmed	alarm	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Michael	Michael	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Phillip ever preferred Patrick to bake?
# sentence_bad = Phillip has ever preferred Patrick to bake.
# two_prefix_prefix_good = Has Phillip
# two_prefix_prefix_bad = Phillip has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present326
1	Phillip	Phillip	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	preferred	prefer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Patrick	Patrick	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	bake	bake	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might most teenagers ever win?
# sentence_bad = Most teenagers might ever win.
# two_prefix_prefix_good = Might most teenagers
# two_prefix_prefix_bad = Most teenagers might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present327
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	teenagers	teenager	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	win	win	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Sheila ever forget what vaporized?
# sentence_bad = Sheila could ever forget what vaporized.
# two_prefix_prefix_good = Could Sheila
# two_prefix_prefix_bad = Sheila could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present328
1	Sheila	Sheila	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forget	forget	VERB	VB	VerbForm=Inf	0	root	_	_
5	what	what	PRON	WP	PronType=Int	4	obj	_	_
6	vaporized	vaporize	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	acl:relcl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had a skirt ever stretched?
# sentence_bad = A skirt had ever stretched.
# two_prefix_prefix_good = Had a skirt
# two_prefix_prefix_bad = A skirt had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present329
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	skirt	skirt	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stretched	stretch	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Rebecca ever appeared to stun Cheryl?
# sentence_bad = Rebecca had ever appeared to stun Cheryl.
# two_prefix_prefix_good = Had Rebecca
# two_prefix_prefix_bad = Rebecca had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present330
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	appeared	appear	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	stun	stun	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Cheryl	Cheryl	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Katherine ever convince most nephews of Amelia to cooperate?
# sentence_bad = Katherine did ever convince most nephews of Amelia to cooperate.
# two_prefix_prefix_good = Did Katherine
# two_prefix_prefix_bad = Katherine did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present331
1	Katherine	Katherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	convince	convince	VERB	VB	VerbForm=Inf	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	nephews	nephew	NOUN	NNS	Number=Plur	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	Amelia	Amelia	PROPN	NNP	Number=Sing	6	nmod	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	cooperate	cooperate	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would the Impressionists ever fight?
# sentence_bad = The Impressionists would ever fight.
# two_prefix_prefix_good = Would the Impressionists
# two_prefix_prefix_bad = The Impressionists would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present332
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Impressionists	Impressionist	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fight	fight	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Alice ever nod?
# sentence_bad = Alice could ever nod.
# two_prefix_prefix_good = Could Alice
# two_prefix_prefix_bad = Alice could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present333
1	Alice	Alice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	nod	nod	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Becca ever want to waste away?
# sentence_bad = Becca had ever want to waste away.
# two_prefix_prefix_good = Had Becca
# two_prefix_prefix_bad = Becca had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present334
1	Becca	Becca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	want	want	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	waste	waste	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	away	away	ADV	RB	_	6	advmod	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Kayla ever said the Borgias chuckle?
# sentence_bad = Kayla has ever said the Borgias chuckle.
# two_prefix_prefix_good = Has Kayla
# two_prefix_prefix_bad = Kayla has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present335
1	Kayla	Kayla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	said	say	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	Borgias	Borgia	PROPN	NNPS	Number=Plur	7	nsubj	_	_
7	chuckle	chuckle	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Guy ever listen to Brian?
# sentence_bad = Guy should ever listen to Brian.
# two_prefix_prefix_good = Should Guy
# two_prefix_prefix_bad = Guy should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present336
1	Guy	guy	NOUN	NN	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	listen	listen	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	Brian	Brian	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Charles ever wear a hat?
# sentence_bad = Charles could ever wear a hat.
# two_prefix_prefix_good = Could Charles
# two_prefix_prefix_bad = Charles could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present337
1	Charles	Charles	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wear	wear	VERB	VB	VerbForm=Inf	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	hat	hat	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Rachelle ever believed some newspaper article to disagree?
# sentence_bad = Rachelle has ever believed some newspaper article to disagree.
# two_prefix_prefix_good = Has Rachelle
# two_prefix_prefix_bad = Rachelle has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present338
1	Rachelle	Rachelle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	believed	believe	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	7	det	_	_
6	newspaper	newspaper	NOUN	NN	Number=Sing	7	compound	_	_
7	article	article	NOUN	NN	Number=Sing	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	disagree	disagree	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Samuel ever stretch?
# sentence_bad = Samuel should ever stretch.
# two_prefix_prefix_good = Should Samuel
# two_prefix_prefix_bad = Samuel should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present339
1	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	stretch	stretch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did the doctor ever beg the university to bore Vincent?
# sentence_bad = The doctor did ever beg the university to bore Vincent.
# two_prefix_prefix_good = Did the doctor
# two_prefix_prefix_bad = The doctor did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present340
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	doctor	doctor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	beg	beg	VERB	VB	VerbForm=Inf	0	root	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
7	university	university	NOUN	NN	Number=Sing	5	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	bore	bore	VERB	VB	VerbForm=Inf	5	xcomp	_	_
10	Vincent	Vincent	PROPN	NNP	Number=Sing	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had George ever died?
# sentence_bad = George had ever died.
# two_prefix_prefix_good = Had George
# two_prefix_prefix_bad = George had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present341
1	George	George	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	died	die	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would some wheelbarrow ever shatter?
# sentence_bad = Some wheelbarrow would ever shatter.
# two_prefix_prefix_good = Would some wheelbarrow
# two_prefix_prefix_bad = Some wheelbarrow would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present342
1	Some	some	DET	DT	_	2	det	_	_
2	wheelbarrow	wheelbarrow	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shatter	shatter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should some ice ever melt?
# sentence_bad = Some ice should ever melt.
# two_prefix_prefix_good = Should some ice
# two_prefix_prefix_bad = Some ice should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present343
1	Some	some	DET	DT	_	2	det	_	_
2	ice	ice	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	melt	melt	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might this jacket ever twist?
# sentence_bad = This jacket might ever twist.
# two_prefix_prefix_good = Might this jacket
# two_prefix_prefix_bad = This jacket might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present344
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	jacket	jacket	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	twist	twist	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Rebecca ever driven to some closet?
# sentence_bad = Rebecca has ever driven to some closet.
# two_prefix_prefix_good = Has Rebecca
# two_prefix_prefix_bad = Rebecca has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present345
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	driven	drive	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	ADP	IN	_	7	case	_	_
6	some	some	DET	DT	_	7	det	_	_
7	closet	closet	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Mark ever climbed down this mountain?
# sentence_bad = Mark had ever climbed down this mountain.
# two_prefix_prefix_good = Had Mark
# two_prefix_prefix_bad = Mark had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present346
1	Mark	Mark	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	climbed	climb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	down	down	ADP	IN	_	7	case	_	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	mountain	mountain	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Lisa ever joked around?
# sentence_bad = Lisa has ever joked around.
# two_prefix_prefix_good = Has Lisa
# two_prefix_prefix_bad = Lisa has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present347
1	Lisa	Lisa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	joked	joke	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could a candle ever dim?
# sentence_bad = A candle could ever dim.
# two_prefix_prefix_good = Could a candle
# two_prefix_prefix_bad = A candle could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present348
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	candle	candle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	dim	dim	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will all adults ever stretch?
# sentence_bad = All adults will ever stretch.
# two_prefix_prefix_good = Will all adults
# two_prefix_prefix_bad = All adults will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present349
1	All	all	DET	DT	_	2	det	_	_
2	adults	adult	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stretch	stretch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have the waiters ever praised Julia?
# sentence_bad = The waiters have ever praised Julia.
# two_prefix_prefix_good = Have the waiters
# two_prefix_prefix_bad = The waiters have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present350
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	waiters	waiter	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	praised	praise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Julia	Julia	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have some icicles ever vaporized?
# sentence_bad = Some icicles have ever vaporized.
# two_prefix_prefix_good = Have some icicles
# two_prefix_prefix_bad = Some icicles have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present351
1	Some	some	DET	DT	_	2	det	_	_
2	icicles	icicle	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	vaporized	vaporize	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Deanna ever clean most gloves?
# sentence_bad = Deanna would ever clean most gloves.
# two_prefix_prefix_good = Would Deanna
# two_prefix_prefix_bad = Deanna would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present352
1	Deanna	Deanna	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	clean	clean	VERB	VB	VerbForm=Inf	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	gloves	glove	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has a mushroom ever charred?
# sentence_bad = A mushroom has ever charred.
# two_prefix_prefix_good = Has a mushroom
# two_prefix_prefix_bad = A mushroom has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present353
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	mushroom	mushroom	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	charred	char	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Vanessa ever commission Connie to escape?
# sentence_bad = Vanessa will ever commission Connie to escape.
# two_prefix_prefix_good = Will Vanessa
# two_prefix_prefix_bad = Vanessa will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present354
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	commission	commission	VERB	VB	VerbForm=Inf	0	root	_	_
5	Connie	Connie	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	escape	escape	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that art gallery ever existed?
# sentence_bad = That art gallery had ever existed.
# two_prefix_prefix_good = Had that art gallery
# two_prefix_prefix_bad = That art gallery had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present355
1	That	that	DET	DT	Number=Sing|PronType=Dem	3	det	_	_
2	art	art	NOUN	NN	Number=Sing	3	compound	_	_
3	gallery	gallery	NOUN	NN	Number=Sing	6	nsubj	_	_
4	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	ever	ever	ADV	RB	_	6	advmod	_	_
6	existed	exist	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
7	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Has Victoria ever spun around?
# sentence_bad = Victoria has ever spun around.
# two_prefix_prefix_good = Has Victoria
# two_prefix_prefix_bad = Victoria has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present356
1	Victoria	Victoria	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	spun	spun	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Jane ever compel Lissa to answer?
# sentence_bad = Jane would ever compel Lissa to answer.
# two_prefix_prefix_good = Would Jane
# two_prefix_prefix_bad = Jane would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present357
1	Jane	Jane	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compel	compel	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lissa	Lissa	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	answer	answer	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would every patient ever explain everything?
# sentence_bad = Every patient would ever explain everything.
# two_prefix_prefix_good = Would every patient
# two_prefix_prefix_bad = Every patient would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present358
1	Every	every	DET	DT	_	2	det	_	_
2	patient	patient	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6	everything	everything	PRON	NN	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did the mouths ever stun Jesus?
# sentence_bad = The mouths did ever stun Jesus.
# two_prefix_prefix_good = Did the mouths
# two_prefix_prefix_bad = The mouths did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present359
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	mouths	mouth	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stun	stun	VERB	VB	VerbForm=Inf	0	root	_	_
6	Jesus	Jesus	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Tara ever stretched?
# sentence_bad = Tara has ever stretched.
# two_prefix_prefix_good = Has Tara
# two_prefix_prefix_bad = Tara has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present360
1	Tara	Tara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	stretched	stretch	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Kristin ever yearn to remember a teacher?
# sentence_bad = Kristin will ever yearn to remember a teacher.
# two_prefix_prefix_good = Will Kristin
# two_prefix_prefix_bad = Kristin will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present361
1	Kristin	Kristin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	yearn	yearn	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	remember	remember	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	_	_
8	teacher	teacher	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Richard ever pass the hill?
# sentence_bad = Richard can ever pass the hill.
# two_prefix_prefix_good = Can Richard
# two_prefix_prefix_bad = Richard can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present362
1	Richard	Richard	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	pass	pass	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	hill	hill	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Jodi ever cooked?
# sentence_bad = Jodi has ever cooked.
# two_prefix_prefix_good = Has Jodi
# two_prefix_prefix_bad = Jodi has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present363
1	Jodi	Jodi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cooked	cook	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has this dress ever crumpled?
# sentence_bad = This dress has ever crumpled.
# two_prefix_prefix_good = Has this dress
# two_prefix_prefix_bad = This dress has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present364
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	dress	dress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	crumpled	crumple	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Kimberley ever disturbed a lot of teenagers?
# sentence_bad = Kimberley has ever disturbed a lot of teenagers.
# two_prefix_prefix_good = Has Kimberley
# two_prefix_prefix_bad = Kimberley has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present365
1	Kimberley	Kimberley	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disturbed	disturb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	lot	lot	NOUN	NN	Number=Sing	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	teenagers	teenager	NOUN	NNS	Number=Plur	6	nmod	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Danielle ever appeared to fire Theresa?
# sentence_bad = Danielle has ever appeared to fire Theresa.
# two_prefix_prefix_good = Has Danielle
# two_prefix_prefix_bad = Danielle has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present366
1	Danielle	Danielle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	appeared	appear	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	fire	fire	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Theresa	Theresa	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would some actors ever benefit?
# sentence_bad = Some actors would ever benefit.
# two_prefix_prefix_good = Would some actors
# two_prefix_prefix_bad = Some actors would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present367
1	Some	some	DET	DT	_	2	det	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	benefit	benefit	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Heidi ever sneezed?
# sentence_bad = Heidi has ever sneezed.
# two_prefix_prefix_good = Has Heidi
# two_prefix_prefix_bad = Heidi has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present368
1	Heidi	Heidi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sneezed	sneeze	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Candice ever tried to hurt Tara?
# sentence_bad = Candice had ever tried to hurt Tara.
# two_prefix_prefix_good = Had Candice
# two_prefix_prefix_bad = Candice had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present369
1	Candice	Candice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	tried	try	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	hurt	hurt	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Tara	Tara	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Gary ever confused some cashier?
# sentence_bad = Gary had ever confused some cashier.
# two_prefix_prefix_good = Had Gary
# two_prefix_prefix_bad = Gary had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present370
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	confused	confuse	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	cashier	cashier	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Aaron ever exercise?
# sentence_bad = Aaron could ever exercise.
# two_prefix_prefix_good = Could Aaron
# two_prefix_prefix_bad = Aaron could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present371
1	Aaron	Aaron	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	exercise	exercise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Dawn ever yearn to worry Joseph?
# sentence_bad = Dawn should ever yearn to worry Joseph.
# two_prefix_prefix_good = Should Dawn
# two_prefix_prefix_bad = Dawn should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present372
1	Dawn	Dawn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	yearn	yearn	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	worry	worry	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Joseph	Joseph	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Cindy ever leave?
# sentence_bad = Cindy can ever leave.
# two_prefix_prefix_good = Can Cindy
# two_prefix_prefix_bad = Cindy can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present373
1	Cindy	Cindy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	leave	leave	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Margaret ever hated Jill?
# sentence_bad = Margaret has ever hated Jill.
# two_prefix_prefix_good = Has Margaret
# two_prefix_prefix_bad = Margaret has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present374
1	Margaret	Margaret	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hated	hate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Jill	Jill	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Elizabeth ever implore every nephew of Karen to disgust that pedestrian?
# sentence_bad = Elizabeth could ever implore every nephew of Karen to disgust that pedestrian.
# two_prefix_prefix_good = Could Elizabeth
# two_prefix_prefix_bad = Elizabeth could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present375
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	implore	implore	VERB	VB	VerbForm=Inf	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	nephew	nephew	NOUN	NN	Number=Sing	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	Karen	Karen	PROPN	NNP	Number=Sing	6	nmod	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	disgust	disgust	VERB	VB	VerbForm=Inf	4	xcomp	_	_
11	that	that	DET	DT	Number=Sing|PronType=Dem	12	det	_	_
12	pedestrian	pedestrian	NOUN	NN	Number=Sing	10	obj	_	SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some legislature ever testified?
# sentence_bad = Some legislature had ever testified.
# two_prefix_prefix_good = Had some legislature
# two_prefix_prefix_bad = Some legislature had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present376
1	Some	some	DET	DT	_	2	det	_	_
2	legislature	legislature	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	testified	testify	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had most organizations ever collaborated?
# sentence_bad = Most organizations had ever collaborated.
# two_prefix_prefix_good = Had most organizations
# two_prefix_prefix_bad = Most organizations had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present377
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	organizations	organization	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	collaborated	collaborate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have the Impressionists ever benefited?
# sentence_bad = The Impressionists have ever benefited.
# two_prefix_prefix_good = Have the Impressionists
# two_prefix_prefix_bad = The Impressionists have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present378
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Impressionists	Impressionist	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	benefited	benefit	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Thomas ever alarm Tammy?
# sentence_bad = Thomas can ever alarm Tammy.
# two_prefix_prefix_good = Can Thomas
# two_prefix_prefix_bad = Thomas can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present379
1	Thomas	Thomas	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	alarm	alarm	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tammy	Tammy	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the Clintons ever forfeited?
# sentence_bad = The Clintons had ever forfeited.
# two_prefix_prefix_good = Had the Clintons
# two_prefix_prefix_bad = The Clintons had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present380
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Clintons	Clinton	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	forfeited	forfeit	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Kristen ever joke around?
# sentence_bad = Kristen might ever joke around.
# two_prefix_prefix_good = Might Kristen
# two_prefix_prefix_bad = Kristen might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present381
1	Kristen	Kristen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	joke	joke	VERB	VB	VerbForm=Inf	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can the socks ever crumple?
# sentence_bad = The socks can ever crumple.
# two_prefix_prefix_good = Can the socks
# two_prefix_prefix_bad = The socks can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present382
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	socks	sock	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	crumple	crumple	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Brian ever fall asleep?
# sentence_bad = Brian does ever fall asleep.
# two_prefix_prefix_good = Does Brian
# two_prefix_prefix_bad = Brian does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present383
1	Brian	Brian	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	_
5	asleep	asleep	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Gerald ever break the computer?
# sentence_bad = Gerald would ever break the computer.
# two_prefix_prefix_good = Would Gerald
# two_prefix_prefix_bad = Gerald would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present384
1	Gerald	Gerald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	break	break	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	computer	computer	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the rice ever burned?
# sentence_bad = The rice had ever burned.
# two_prefix_prefix_good = Had the rice
# two_prefix_prefix_bad = The rice had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present385
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	rice	rice	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	burned	burn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Marla ever departed?
# sentence_bad = Marla has ever departed.
# two_prefix_prefix_good = Has Marla
# two_prefix_prefix_bad = Marla has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present386
1	Marla	Marla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	departed	depart	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would an adult ever cough?
# sentence_bad = An adult would ever cough.
# two_prefix_prefix_good = Would an adult
# two_prefix_prefix_bad = An adult would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present387
1	An	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	adult	adult	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cough	cough	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have a lot of governments ever pressed people's contractor to mess up these glasses?
# sentence_bad = A lot of governments have ever pressed people's contractor to mess up these glasses.
# two_prefix_prefix_good = Have a lot of governments
# two_prefix_prefix_bad = A lot of governments have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present388
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	governments	government	NOUN	NNS	Number=Plur	2	nmod	_	_
5	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	pressed	press	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8-9	people's	_	_	_	_	_	_	_	_
8	people	people	NOUN	NNS	Number=Plur	10	nmod:poss	_	_
9	's	's	PART	POS	_	8	case	_	_
10	contractor	contractor	NOUN	NN	Number=Sing	7	obj	_	_
11	to	to	PART	TO	_	12	mark	_	_
12	mess	mess	VERB	VB	VerbForm=Inf	7	xcomp	_	_
13	up	up	ADP	RP	_	12	compound:prt	_	_
14	these	this	DET	DT	Number=Plur|PronType=Dem	15	det	_	_
15	glasses	glass	NOUN	NNS	Number=Plur	12	obj	_	SpaceAfter=No
16	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Could Matt ever scream?
# sentence_bad = Matt could ever scream.
# two_prefix_prefix_good = Could Matt
# two_prefix_prefix_bad = Matt could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present389
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	scream	scream	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Carmen ever hurt these guys?
# sentence_bad = Carmen can ever hurt these guys.
# two_prefix_prefix_good = Can Carmen
# two_prefix_prefix_bad = Carmen can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present390
1	Carmen	Carmen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hurt	hurt	VERB	VB	VerbForm=Inf	0	root	_	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	guys	guy	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Martin ever walk through most art galleries?
# sentence_bad = Martin will ever walk through most art galleries.
# two_prefix_prefix_good = Will Martin
# two_prefix_prefix_bad = Martin will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present391
1	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	walk	walk	VERB	VB	VerbForm=Inf	0	root	_	_
5	through	through	ADP	IN	_	8	case	_	_
6	most	most	ADJ	JJS	Degree=Sup	8	amod	_	_
7	art	art	NOUN	NN	Number=Sing	8	compound	_	_
8	galleries	gallery	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Alicia ever wonder what might drop?
# sentence_bad = Alicia did ever wonder what might drop.
# two_prefix_prefix_good = Did Alicia
# two_prefix_prefix_bad = Alicia did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present392
1	Alicia	Alicia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wonder	wonder	VERB	VB	VerbForm=Inf	0	root	_	_
5	what	what	PRON	WP	PronType=Int	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	drop	drop	VERB	VB	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that shawl ever folded?
# sentence_bad = That shawl had ever folded.
# two_prefix_prefix_good = Had that shawl
# two_prefix_prefix_bad = That shawl had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present393
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	shawl	shawl	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	folded	fold	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should doors ever close?
# sentence_bad = Doors should ever close.
# two_prefix_prefix_good = Should doors
# two_prefix_prefix_bad = Doors should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present394
1	Doors	door	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	close	close	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can William ever bring every truck?
# sentence_bad = William can ever bring every truck.
# two_prefix_prefix_good = Can William
# two_prefix_prefix_bad = William can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present395
1	William	William	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bring	bring	VERB	VB	VerbForm=Inf	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	truck	truck	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will that newspaper article ever fall?
# sentence_bad = That newspaper article will ever fall.
# two_prefix_prefix_good = Will that newspaper article
# two_prefix_prefix_bad = That newspaper article will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present396
1	That	that	DET	DT	Number=Sing|PronType=Dem	3	det	_	_
2	newspaper	newspaper	NOUN	NN	Number=Sing	3	compound	_	_
3	article	article	NOUN	NN	Number=Sing	6	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	ever	ever	ADV	RB	_	6	advmod	_	_
6	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
7	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Could Maria ever observe every cashier?
# sentence_bad = Maria could ever observe every cashier.
# two_prefix_prefix_good = Could Maria
# two_prefix_prefix_bad = Maria could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present397
1	Maria	Maria	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	observe	observe	VERB	VB	VerbForm=Inf	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	cashier	cashier	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should many people ever depart?
# sentence_bad = Many people should ever depart.
# two_prefix_prefix_good = Should many people
# two_prefix_prefix_bad = Many people should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present398
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	people	people	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	depart	depart	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Richard ever impressed Michael?
# sentence_bad = Richard had ever impressed Michael.
# two_prefix_prefix_good = Had Richard
# two_prefix_prefix_bad = Richard had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present399
1	Richard	Richard	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	impressed	impress	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Michael	Michael	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Linda ever cared for Patrick?
# sentence_bad = Linda has ever cared for Patrick.
# two_prefix_prefix_good = Has Linda
# two_prefix_prefix_bad = Linda has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present400
1	Linda	Linda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cared	care	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	Patrick	Patrick	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Claire ever bake?
# sentence_bad = Claire should ever bake.
# two_prefix_prefix_good = Should Claire
# two_prefix_prefix_bad = Claire should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present401
1	Claire	Claire	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bake	bake	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Cynthia ever entice Eva to scan some story?
# sentence_bad = Cynthia might ever entice Eva to scan some story.
# two_prefix_prefix_good = Might Cynthia
# two_prefix_prefix_bad = Cynthia might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present402
1	Cynthia	Cynthia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	entice	entice	VERB	VB	VerbForm=Inf	0	root	_	_
5	Eva	Eva	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	scan	scan	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	some	some	DET	DT	_	9	det	_	_
9	story	story	NOUN	NN	Number=Sing	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Eric ever alarm these universities?
# sentence_bad = Eric did ever alarm these universities.
# two_prefix_prefix_good = Did Eric
# two_prefix_prefix_bad = Eric did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present403
1	Eric	Eric	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	alarm	alarm	VERB	VB	VerbForm=Inf	0	root	_	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	universities	university	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Karla ever questioned Noah?
# sentence_bad = Karla has ever questioned Noah.
# two_prefix_prefix_good = Has Karla
# two_prefix_prefix_bad = Karla has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present404
1	Karla	Karla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	questioned	question	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Noah	Noah	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Donald ever persuade some actors' father to cheer?
# sentence_bad = Donald could ever persuade some actors' father to cheer.
# two_prefix_prefix_good = Could Donald
# two_prefix_prefix_bad = Donald could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present405
1	Donald	Donald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	persuade	persuade	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6-7	actors'	_	_	_	_	_	_	_	_
6	actors	actor	NOUN	NNS	Number=Plur	8	nmod:poss	_	_
7	'	's	PART	POS	_	6	case	_	_
8	father	father	NOUN	NN	Number=Sing	4	obj	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	cheer	cheer	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Tanya ever needed a lot of commentaries to disagree with those waitresses?
# sentence_bad = Tanya has ever needed a lot of commentaries to disagree with those waitresses.
# two_prefix_prefix_good = Has Tanya
# two_prefix_prefix_bad = Tanya has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present406
1	Tanya	Tanya	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	needed	need	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	lot	lot	NOUN	NN	Number=Sing	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	commentaries	commentary	NOUN	NNS	Number=Plur	6	nmod	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	disagree	disagree	VERB	VB	VerbForm=Inf	4	advcl	_	_
11	with	with	ADP	IN	_	13	case	_	_
12	those	that	DET	DT	Number=Plur|PronType=Dem	13	det	_	_
13	waitresses	waitress	NOUN	NNS	Number=Plur	10	obl	_	SpaceAfter=No
14	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have all coats ever twirled?
# sentence_bad = All coats have ever twirled.
# two_prefix_prefix_good = Have all coats
# two_prefix_prefix_bad = All coats have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present407
1	All	all	DET	DT	_	2	det	_	_
2	coats	coat	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	twirled	twirl	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Claire ever regret banks aren't cooperating?
# sentence_bad = Claire does ever regret banks aren't cooperating.
# two_prefix_prefix_good = Does Claire
# two_prefix_prefix_bad = Claire does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present408
1	Claire	Claire	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	regret	regret	VERB	VB	VerbForm=Inf	0	root	_	_
5	banks	bank	NOUN	NNS	Number=Plur	8	nsubj	_	_
6-7	aren't	_	_	_	_	_	_	_	_
6	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	cooperating	cooperate	VERB	VBG	Tense=Pres|VerbForm=Part	4	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Spain ever reply?
# sentence_bad = Spain should ever reply.
# two_prefix_prefix_good = Should Spain
# two_prefix_prefix_bad = Spain should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present409
1	Spain	Spain	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	reply	reply	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had pants ever shrunk?
# sentence_bad = Pants had ever shrunk.
# two_prefix_prefix_good = Had pants
# two_prefix_prefix_bad = Pants had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present410
1	Pants	pant	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	shrunk	shrink	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Samantha ever remember what won't alarm many associations?
# sentence_bad = Samantha should ever remember what won't alarm many associations.
# two_prefix_prefix_good = Should Samantha
# two_prefix_prefix_bad = Samantha should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present411
1	Samantha	Samantha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remember	remember	VERB	VB	VerbForm=Inf	0	root	_	_
5	what	what	PRON	WP	PronType=Int	4	obj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	alarm	alarm	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	many	many	ADJ	JJ	Degree=Pos	10	amod	_	_
10	associations	association	NOUN	NNS	Number=Plur	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have some doctors ever shouted?
# sentence_bad = Some doctors have ever shouted.
# two_prefix_prefix_good = Have some doctors
# two_prefix_prefix_bad = Some doctors have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present412
1	Some	some	DET	DT	_	2	det	_	_
2	doctors	doctor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shouted	shout	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Dan ever joked around?
# sentence_bad = Dan had ever joked around.
# two_prefix_prefix_good = Had Dan
# two_prefix_prefix_bad = Dan had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present413
1	Dan	Dan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	joked	joke	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Pamela ever sat down?
# sentence_bad = Pamela had ever sat down.
# two_prefix_prefix_good = Had Pamela
# two_prefix_prefix_bad = Pamela had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present414
1	Pamela	Pamela	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sat	sit	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	down	down	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Chad ever press Tara's lawyer to donate?
# sentence_bad = Chad might ever press Tara's lawyer to donate.
# two_prefix_prefix_good = Might Chad
# two_prefix_prefix_bad = Chad might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present415
1	Chad	Chad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	press	press	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Tara's	_	_	_	_	_	_	_	_
5	Tara	Tara	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	lawyer	lawyer	NOUN	NN	Number=Sing	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	donate	donate	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Karen ever drop by some hospital?
# sentence_bad = Karen would ever drop by some hospital.
# two_prefix_prefix_good = Would Karen
# two_prefix_prefix_bad = Karen would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present416
1	Karen	Karen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	drop	drop	VERB	VB	VerbForm=Inf	0	root	_	_
5	by	by	ADP	IN	_	7	case	_	_
6	some	some	DET	DT	_	7	det	_	_
7	hospital	hospital	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Benjamin ever complain?
# sentence_bad = Benjamin should ever complain.
# two_prefix_prefix_good = Should Benjamin
# two_prefix_prefix_bad = Benjamin should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present417
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	complain	complain	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should some senator ever bother to heal Russell?
# sentence_bad = Some senator should ever bother to heal Russell.
# two_prefix_prefix_good = Should some senator
# two_prefix_prefix_bad = Some senator should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present418
1	Some	some	DET	DT	_	2	det	_	_
2	senator	senator	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bother	bother	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	heal	heal	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	Russell	Russell	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Vincent ever grin?
# sentence_bad = Vincent will ever grin.
# two_prefix_prefix_good = Will Vincent
# two_prefix_prefix_bad = Vincent will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present419
1	Vincent	Vincent	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	grin	grin	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would this patient ever argue?
# sentence_bad = This patient would ever argue.
# two_prefix_prefix_good = Would this patient
# two_prefix_prefix_bad = This patient would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present420
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	patient	patient	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	argue	argue	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Mary ever seen?
# sentence_bad = Mary has ever seen.
# two_prefix_prefix_good = Has Mary
# two_prefix_prefix_bad = Mary has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present421
1	Mary	Mary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	seen	see	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Chad ever murmur?
# sentence_bad = Chad would ever murmur.
# two_prefix_prefix_good = Would Chad
# two_prefix_prefix_bad = Chad would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present422
1	Chad	Chad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	murmur	murmur	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Ruth ever vanish?
# sentence_bad = Ruth should ever vanish.
# two_prefix_prefix_good = Should Ruth
# two_prefix_prefix_bad = Ruth should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present423
1	Ruth	Ruth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	vanish	vanish	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Raymond ever known Laura?
# sentence_bad = Raymond has ever known Laura.
# two_prefix_prefix_good = Has Raymond
# two_prefix_prefix_bad = Raymond has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present424
1	Raymond	Raymond	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	known	know	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Laura	Laura	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will those turtles ever irritate Walter?
# sentence_bad = Those turtles will ever irritate Walter.
# two_prefix_prefix_good = Will those turtles
# two_prefix_prefix_bad = Those turtles will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present425
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	turtles	turtle	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	irritate	irritate	VERB	VB	VerbForm=Inf	0	root	_	_
6	Walter	Walter	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can a cashier ever heal Teresa?
# sentence_bad = A cashier can ever heal Teresa.
# two_prefix_prefix_good = Can a cashier
# two_prefix_prefix_bad = A cashier can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present426
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	cashier	cashier	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	heal	heal	VERB	VB	VerbForm=Inf	0	root	_	_
6	Teresa	Teresa	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has a company ever concealed who visit some museums?
# sentence_bad = A company has ever concealed who visit some museums.
# two_prefix_prefix_good = Has a company
# two_prefix_prefix_bad = A company has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present427
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	company	company	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	concealed	conceal	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	who	who	PRON	WP	PronType=Rel	7	nsubj	_	_
7	visit	visit	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	some	some	DET	DT	_	9	det	_	_
9	museums	museum	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might the eye ever close?
# sentence_bad = The eye might ever close.
# two_prefix_prefix_good = Might the eye
# two_prefix_prefix_bad = The eye might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present428
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	eye	eye	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	close	close	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had the mirror ever cracked?
# sentence_bad = The mirror had ever cracked.
# two_prefix_prefix_good = Had the mirror
# two_prefix_prefix_bad = The mirror had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present429
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	mirror	mirror	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cracked	crack	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had some painting ever looked like Pamela?
# sentence_bad = Some painting had ever looked like Pamela.
# two_prefix_prefix_good = Had some painting
# two_prefix_prefix_bad = Some painting had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present430
1	Some	some	DET	DT	_	2	det	_	_
2	painting	painting	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	looked	look	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	like	like	ADP	IN	_	7	case	_	_
7	Pamela	Pamela	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Patrick ever investigate Bruce?
# sentence_bad = Patrick could ever investigate Bruce.
# two_prefix_prefix_good = Could Patrick
# two_prefix_prefix_bad = Patrick could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present431
1	Patrick	Patrick	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	investigate	investigate	VERB	VB	VerbForm=Inf	0	root	_	_
5	Bruce	Bruce	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that gate ever flung open?
# sentence_bad = That gate had ever flung open.
# two_prefix_prefix_good = Had that gate
# two_prefix_prefix_bad = That gate had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present432
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	gate	gate	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	flung	fling	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	open	open	ADJ	JJ	Degree=Pos	5	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Derek ever complain?
# sentence_bad = Derek will ever complain.
# two_prefix_prefix_good = Will Derek
# two_prefix_prefix_bad = Derek will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present433
1	Derek	Derek	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	complain	complain	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would some skateboards ever fall apart?
# sentence_bad = Some skateboards would ever fall apart.
# two_prefix_prefix_good = Would some skateboards
# two_prefix_prefix_bad = Some skateboards would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present434
1	Some	some	DET	DT	_	2	det	_	_
2	skateboards	skateboard	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	_
6	apart	apart	ADV	RB	_	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could a driver ever talk to Laura?
# sentence_bad = A driver could ever talk to Laura.
# two_prefix_prefix_good = Could a driver
# two_prefix_prefix_bad = A driver could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present435
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	driver	driver	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	talk	talk	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	Laura	Laura	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Cheryl ever praise Laura?
# sentence_bad = Cheryl might ever praise Laura.
# two_prefix_prefix_good = Might Cheryl
# two_prefix_prefix_bad = Cheryl might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present436
1	Cheryl	Cheryl	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	praise	praise	VERB	VB	VerbForm=Inf	0	root	_	_
5	Laura	Laura	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Joseph ever known Tamara?
# sentence_bad = Joseph had ever known Tamara.
# two_prefix_prefix_good = Had Joseph
# two_prefix_prefix_bad = Joseph had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present437
1	Joseph	Joseph	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	known	know	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Tamara	Tamara	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does some blouse ever warp?
# sentence_bad = Some blouse does ever warp.
# two_prefix_prefix_good = Does some blouse
# two_prefix_prefix_bad = Some blouse does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present438
1	Some	some	DET	DT	_	2	det	_	_
2	blouse	blouse	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	warp	warp	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did every carriage ever drop?
# sentence_bad = Every carriage did ever drop.
# two_prefix_prefix_good = Did every carriage
# two_prefix_prefix_bad = Every carriage did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present439
1	Every	every	DET	DT	_	2	det	_	_
2	carriage	carriage	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	drop	drop	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Sharon ever embarrassed Paul?
# sentence_bad = Sharon had ever embarrassed Paul.
# two_prefix_prefix_good = Had Sharon
# two_prefix_prefix_bad = Sharon had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present440
1	Sharon	Sharon	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	embarrassed	embarrass	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Paul	Paul	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Amelia ever propose to disappear?
# sentence_bad = Amelia does ever propose to disappear.
# two_prefix_prefix_good = Does Amelia
# two_prefix_prefix_bad = Amelia does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present441
1	Amelia	Amelia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	propose	propose	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	disappear	disappear	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Karla ever pressed Rose to irritate Nicole?
# sentence_bad = Karla had ever pressed Rose to irritate Nicole.
# two_prefix_prefix_good = Had Karla
# two_prefix_prefix_bad = Karla had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present442
1	Karla	Karla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	pressed	press	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Rose	Rose	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	irritate	irritate	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	Nicole	Nicole	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have all spotlights ever appeared?
# sentence_bad = All spotlights have ever appeared.
# two_prefix_prefix_good = Have all spotlights
# two_prefix_prefix_bad = All spotlights have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present443
1	All	all	DET	DT	_	2	det	_	_
2	spotlights	spotlight	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	appeared	appear	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Ellen ever hunted?
# sentence_bad = Ellen had ever hunted.
# two_prefix_prefix_good = Had Ellen
# two_prefix_prefix_bad = Ellen had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present444
1	Ellen	Ellen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hunted	hunt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will the waiters ever find Tanya to concur?
# sentence_bad = The waiters will ever find Tanya to concur.
# two_prefix_prefix_good = Will the waiters
# two_prefix_prefix_bad = The waiters will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present445
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	waiters	waiter	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	find	find	VERB	VB	VerbForm=Inf	0	root	_	_
6	Tanya	Tanya	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	concur	concur	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has the convertible ever resembled paintings?
# sentence_bad = The convertible has ever resembled paintings.
# two_prefix_prefix_good = Has the convertible
# two_prefix_prefix_bad = The convertible has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present446
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	convertible	convertible	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	resembled	resemble	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	paintings	painting	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Jason ever astounded some children?
# sentence_bad = Jason has ever astounded some children.
# two_prefix_prefix_good = Has Jason
# two_prefix_prefix_bad = Jason has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present447
1	Jason	Jason	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	astounded	astound	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	children	child	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Steven ever propose to disgust Jason?
# sentence_bad = Steven would ever propose to disgust Jason.
# two_prefix_prefix_good = Would Steven
# two_prefix_prefix_bad = Steven would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present448
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	propose	propose	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	disgust	disgust	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Jason	Jason	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had most trucks ever turned?
# sentence_bad = Most trucks had ever turned.
# two_prefix_prefix_good = Had most trucks
# two_prefix_prefix_bad = Most trucks had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present449
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	trucks	truck	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	turned	turn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Daniel ever doubted Alexander hadn't hired Melanie?
# sentence_bad = Daniel had ever doubted Alexander hadn't hired Melanie.
# two_prefix_prefix_good = Had Daniel
# two_prefix_prefix_bad = Daniel had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present450
1	Daniel	Daniel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	doubted	doubt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Alexander	Alexander	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	hadn't	_	_	_	_	_	_	_	_
6	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	hired	hire	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
9	Melanie	Melanie	PROPN	NNP	Number=Sing	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Andrew ever cheered?
# sentence_bad = Andrew has ever cheered.
# two_prefix_prefix_good = Has Andrew
# two_prefix_prefix_bad = Andrew has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present451
1	Andrew	Andrew	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cheered	cheer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has every person ever regretted a lot of guys stretch?
# sentence_bad = Every person has ever regretted a lot of guys stretch.
# two_prefix_prefix_good = Has every person
# two_prefix_prefix_bad = Every person has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present452
1	Every	every	DET	DT	_	2	det	_	_
2	person	person	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	regretted	regret	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	lot	lot	NOUN	NN	Number=Sing	5	obj	_	_
8	of	of	ADP	IN	_	9	case	_	_
9	guys	guy	NOUN	NNS	Number=Plur	7	nmod	_	_
10	stretch	stretch	NOUN	NN	Number=Sing	5	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Veronica ever hunt?
# sentence_bad = Veronica might ever hunt.
# two_prefix_prefix_good = Might Veronica
# two_prefix_prefix_bad = Veronica might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present453
1	Veronica	Veronica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hunt	hunt	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has that screen ever faded?
# sentence_bad = That screen has ever faded.
# two_prefix_prefix_good = Has that screen
# two_prefix_prefix_bad = That screen has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present454
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	screen	screen	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	faded	fade	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Erin ever play?
# sentence_bad = Erin would ever play.
# two_prefix_prefix_good = Would Erin
# two_prefix_prefix_bad = Erin would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present455
1	Erin	Erin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	play	play	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Aaron ever compromise?
# sentence_bad = Aaron might ever compromise.
# two_prefix_prefix_good = Might Aaron
# two_prefix_prefix_bad = Aaron might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present456
1	Aaron	Aaron	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compromise	compromise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have those vases ever shattered?
# sentence_bad = Those vases have ever shattered.
# two_prefix_prefix_good = Have those vases
# two_prefix_prefix_bad = Those vases have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present457
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	vases	vase	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shattered	shatter	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Sally ever needed to respect Carl?
# sentence_bad = Sally has ever needed to respect Carl.
# two_prefix_prefix_good = Has Sally
# two_prefix_prefix_bad = Sally has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present458
1	Sally	Sally	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	needed	need	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	respect	respect	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Carl	Carl	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that hat ever frayed?
# sentence_bad = That hat had ever frayed.
# two_prefix_prefix_good = Had that hat
# two_prefix_prefix_bad = That hat had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present459
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	hat	hat	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	frayed	fray	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Elizabeth ever wanted Amanda to paint?
# sentence_bad = Elizabeth had ever wanted Amanda to paint.
# two_prefix_prefix_good = Had Elizabeth
# two_prefix_prefix_bad = Elizabeth had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present460
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wanted	want	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Amanda	Amanda	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	paint	paint	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can every waiter ever urge Sharon to stun every organization?
# sentence_bad = Every waiter can ever urge Sharon to stun every organization.
# two_prefix_prefix_good = Can every waiter
# two_prefix_prefix_bad = Every waiter can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present461
1	Every	every	DET	DT	_	2	det	_	_
2	waiter	waiter	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	urge	urge	VERB	VB	VerbForm=Inf	0	root	_	_
6	Sharon	Sharon	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	stun	stun	VERB	VB	VerbForm=Inf	5	xcomp	_	_
9	every	every	DET	DT	_	10	det	_	_
10	organization	organization	NOUN	NN	Number=Sing	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Vanessa ever concurred?
# sentence_bad = Vanessa had ever concurred.
# two_prefix_prefix_good = Had Vanessa
# two_prefix_prefix_bad = Vanessa had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present462
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	concurred	concur	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Vanessa ever dared every teenager's ex-husband to reference some book?
# sentence_bad = Vanessa has ever dared every teenager's ex-husband to reference some book.
# two_prefix_prefix_good = Has Vanessa
# two_prefix_prefix_bad = Vanessa has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present463
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dared	dare	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6-7	teenager's	_	_	_	_	_	_	_	_
6	teenager	teenager	NOUN	NN	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	ex-husband	ex-husband	NOUN	NN	Number=Sing	4	obj	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	reference	reference	VERB	VB	VerbForm=Inf	4	xcomp	_	_
11	some	some	DET	DT	_	12	det	_	_
12	book	book	NOUN	NN	Number=Sing	10	obj	_	SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some waitresses ever swallowed?
# sentence_bad = Some waitresses had ever swallowed.
# two_prefix_prefix_good = Had some waitresses
# two_prefix_prefix_bad = Some waitresses had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present464
1	Some	some	DET	DT	_	2	det	_	_
2	waitresses	waitress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	swallowed	swallow	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Sara ever bring the gate?
# sentence_bad = Sara does ever bring the gate.
# two_prefix_prefix_good = Does Sara
# two_prefix_prefix_bad = Sara does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present465
1	Sara	Sara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bring	bring	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	gate	gate	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have a lot of dogs ever aggravated students?
# sentence_bad = A lot of dogs have ever aggravated students.
# two_prefix_prefix_good = Have a lot of dogs
# two_prefix_prefix_bad = A lot of dogs have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present466
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	dogs	dog	NOUN	NNS	Number=Plur	2	nmod	_	_
5	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	aggravated	aggravate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8	students	student	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Should Judy ever sigh?
# sentence_bad = Judy should ever sigh.
# two_prefix_prefix_good = Should Judy
# two_prefix_prefix_bad = Judy should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present467
1	Judy	Judy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sigh	sigh	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Jeffrey ever wonder who was yawning?
# sentence_bad = Jeffrey did ever wonder who was yawning.
# two_prefix_prefix_good = Did Jeffrey
# two_prefix_prefix_bad = Jeffrey did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present468
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wonder	wonder	VERB	VB	VerbForm=Inf	0	root	_	_
5	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
6	was	be	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	yawning	yawn	VERB	VBG	Tense=Pres|VerbForm=Part	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Regina ever disappear?
# sentence_bad = Regina could ever disappear.
# two_prefix_prefix_good = Could Regina
# two_prefix_prefix_bad = Regina could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present469
1	Regina	Regina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disappear	disappear	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will all teachers ever boast about Benjamin?
# sentence_bad = All teachers will ever boast about Benjamin.
# two_prefix_prefix_good = Will all teachers
# two_prefix_prefix_bad = All teachers will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present470
1	All	all	DET	DT	_	2	det	_	_
2	teachers	teacher	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	boast	boast	VERB	VB	VerbForm=Inf	0	root	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	Benjamin	Benjamin	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Frank ever hire most people?
# sentence_bad = Frank will ever hire most people.
# two_prefix_prefix_good = Will Frank
# two_prefix_prefix_bad = Frank will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present471
1	Frank	Frank	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hire	hire	VERB	VB	VerbForm=Inf	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	people	people	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Martin ever find out who wept?
# sentence_bad = Martin can ever find out who wept.
# two_prefix_prefix_good = Can Martin
# two_prefix_prefix_bad = Martin can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present472
1	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	find	find	VERB	VB	VerbForm=Inf	0	root	_	_
5	out	out	ADP	RP	_	4	compound:prt	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	wept	weep	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should these teachers ever protest?
# sentence_bad = These teachers should ever protest.
# two_prefix_prefix_good = Should these teachers
# two_prefix_prefix_bad = These teachers should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present473
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	teachers	teacher	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	protest	protest	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Gregory ever loved Diane?
# sentence_bad = Gregory had ever loved Diane.
# two_prefix_prefix_good = Had Gregory
# two_prefix_prefix_bad = Gregory had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present474
1	Gregory	Gregory	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	loved	love	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Diane	Diane	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Alice ever advised Stacey to answer?
# sentence_bad = Alice has ever advised Stacey to answer.
# two_prefix_prefix_good = Has Alice
# two_prefix_prefix_bad = Alice has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present475
1	Alice	Alice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	advised	advise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Stacey	Stacey	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	answer	answer	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Eva ever observe Carl?
# sentence_bad = Eva did ever observe Carl.
# two_prefix_prefix_good = Did Eva
# two_prefix_prefix_bad = Eva did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present476
1	Eva	Eva	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	observe	observe	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carl	Carl	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Valerie ever insulted Melanie?
# sentence_bad = Valerie had ever insulted Melanie.
# two_prefix_prefix_good = Had Valerie
# two_prefix_prefix_bad = Valerie had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present477
1	Valerie	Valerie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	insulted	insult	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Melanie	Melanie	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had this guest ever seen most libraries?
# sentence_bad = This guest had ever seen most libraries.
# two_prefix_prefix_good = Had this guest
# two_prefix_prefix_bad = This guest had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present478
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	guest	guest	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	seen	see	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	most	most	ADJ	JJS	Degree=Sup	7	amod	_	_
7	libraries	library	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Tiffany ever grinned?
# sentence_bad = Tiffany has ever grinned.
# two_prefix_prefix_good = Has Tiffany
# two_prefix_prefix_bad = Tiffany has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present479
1	Tiffany	Tiffany	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	grinned	grin	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Deborah ever leave?
# sentence_bad = Deborah can ever leave.
# two_prefix_prefix_good = Can Deborah
# two_prefix_prefix_bad = Deborah can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present480
1	Deborah	Deborah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	leave	leave	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Veronica ever thought about a lot of tomatoes?
# sentence_bad = Veronica has ever thought about a lot of tomatoes.
# two_prefix_prefix_good = Has Veronica
# two_prefix_prefix_bad = Veronica has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present481
1	Veronica	Veronica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	thought	think	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	about	about	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	lot	lot	NOUN	NN	Number=Sing	4	obl	_	_
8	of	of	ADP	IN	_	9	case	_	_
9	tomatoes	tomato	NOUN	NNS	Number=Plur	7	nmod	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has a wheelbarrow ever turned?
# sentence_bad = A wheelbarrow has ever turned.
# two_prefix_prefix_good = Has a wheelbarrow
# two_prefix_prefix_bad = A wheelbarrow has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present482
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	wheelbarrow	wheelbarrow	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	turned	turn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can the teachers ever think about what falls apart?
# sentence_bad = The teachers can ever think about what falls apart.
# two_prefix_prefix_good = Can the teachers
# two_prefix_prefix_bad = The teachers can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present483
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	teachers	teacher	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
6	about	about	SCONJ	IN	_	8	mark	_	_
7	what	what	PRON	WP	PronType=Int	8	nsubj	_	_
8	falls	fall	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	advcl	_	_
9	apart	apart	ADV	RB	_	8	advmod	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Catherine ever hunted?
# sentence_bad = Catherine has ever hunted.
# two_prefix_prefix_good = Has Catherine
# two_prefix_prefix_bad = Catherine has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present484
1	Catherine	Catherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hunted	hunt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Timothy ever think about a movie theater?
# sentence_bad = Timothy will ever think about a movie theater.
# two_prefix_prefix_good = Will Timothy
# two_prefix_prefix_bad = Timothy will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present485
1	Timothy	Timothy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	about	about	ADP	IN	_	8	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	_	_
7	movie	movie	NOUN	NN	Number=Sing	8	compound	_	_
8	theater	theater	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Liam ever passed the mall?
# sentence_bad = Liam has ever passed the mall.
# two_prefix_prefix_good = Has Liam
# two_prefix_prefix_bad = Liam has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present486
1	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	passed	pass	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	mall	mall	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that chicken ever blackened?
# sentence_bad = That chicken had ever blackened.
# two_prefix_prefix_good = Had that chicken
# two_prefix_prefix_bad = That chicken had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present487
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	chicken	chicken	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	blackened	blacken	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Stephen ever stretch?
# sentence_bad = Stephen might ever stretch.
# two_prefix_prefix_good = Might Stephen
# two_prefix_prefix_bad = Stephen might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present488
1	Stephen	Stephen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	stretch	stretch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will many waiters ever train?
# sentence_bad = Many waiters will ever train.
# two_prefix_prefix_good = Will many waiters
# two_prefix_prefix_bad = Many waiters will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present489
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	waiters	waiter	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	train	train	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Claire ever go fishing?
# sentence_bad = Claire can ever go fishing.
# two_prefix_prefix_good = Can Claire
# two_prefix_prefix_bad = Claire can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present490
1	Claire	Claire	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	go	go	VERB	VB	VerbForm=Inf	0	root	_	_
5	fishing	fish	VERB	VBG	VerbForm=Ger	4	xcomp	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Vincent ever convinced Dennis to swallow?
# sentence_bad = Vincent had ever convinced Dennis to swallow.
# two_prefix_prefix_good = Had Vincent
# two_prefix_prefix_bad = Vincent had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present491
1	Vincent	Vincent	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	convinced	convince	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Dennis	Dennis	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	swallow	swallow	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can many patients ever disagree?
# sentence_bad = Many patients can ever disagree.
# two_prefix_prefix_good = Can many patients
# two_prefix_prefix_bad = Many patients can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present492
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	patients	patient	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disagree	disagree	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would most convertibles ever crash?
# sentence_bad = Most convertibles would ever crash.
# two_prefix_prefix_good = Would most convertibles
# two_prefix_prefix_bad = Most convertibles would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present493
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	convertibles	convertible	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	crash	crash	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Gary ever performed?
# sentence_bad = Gary had ever performed.
# two_prefix_prefix_good = Had Gary
# two_prefix_prefix_bad = Gary had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present494
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	performed	perform	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Alan ever irritate a lot of waitresses?
# sentence_bad = Alan does ever irritate a lot of waitresses.
# two_prefix_prefix_good = Does Alan
# two_prefix_prefix_bad = Alan does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present495
1	Alan	Alan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	irritate	irritate	VERB	VB	VerbForm=Inf	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	lot	lot	NOUN	NN	Number=Sing	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	waitresses	waitress	NOUN	NNS	Number=Plur	6	nmod	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Wendy ever regret Lisa ascends some slope?
# sentence_bad = Wendy can ever regret Lisa ascends some slope.
# two_prefix_prefix_good = Can Wendy
# two_prefix_prefix_bad = Wendy can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present496
1	Wendy	Wendy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	regret	regret	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lisa	Lisa	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	ascends	ascend	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	some	some	DET	DT	_	8	det	_	_
8	slope	slope	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Edward ever laugh?
# sentence_bad = Edward could ever laugh.
# two_prefix_prefix_good = Could Edward
# two_prefix_prefix_bad = Edward could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present497
1	Edward	Edward	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	laugh	laugh	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Sandra ever win?
# sentence_bad = Sandra might ever win.
# two_prefix_prefix_good = Might Sandra
# two_prefix_prefix_bad = Sandra might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present498
1	Sandra	Sandra	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	win	win	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Anne ever prod Steve's teacher to whisper?
# sentence_bad = Anne does ever prod Steve's teacher to whisper.
# two_prefix_prefix_good = Does Anne
# two_prefix_prefix_bad = Anne does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present499
1	Anne	Anne	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prod	prod	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Steve's	_	_	_	_	_	_	_	_
5	Steve	Steve	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	teacher	teacher	NOUN	NN	Number=Sing	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	whisper	whisper	VERB	VB	VerbForm=Inf	4	advcl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had most ladders ever astounded Martin?
# sentence_bad = Most ladders had ever astounded Martin.
# two_prefix_prefix_good = Had most ladders
# two_prefix_prefix_bad = Most ladders had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present500
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	ladders	ladder	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	astounded	astound	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Martin	Martin	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had most legislatures ever coped?
# sentence_bad = Most legislatures had ever coped.
# two_prefix_prefix_good = Had most legislatures
# two_prefix_prefix_bad = Most legislatures had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present501
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	legislatures	legislature	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	coped	cope	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has some light ever dimmed?
# sentence_bad = Some light has ever dimmed.
# two_prefix_prefix_good = Has some light
# two_prefix_prefix_bad = Some light has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present502
1	Some	some	DET	DT	_	2	det	_	_
2	light	light	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	dimmed	dim	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might a lot of pedestrians ever reunite?
# sentence_bad = A lot of pedestrians might ever reunite.
# two_prefix_prefix_good = Might a lot of pedestrians
# two_prefix_prefix_bad = A lot of pedestrians might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present503
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	pedestrians	pedestrian	NOUN	NNS	Number=Plur	2	nmod	_	_
5	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	reunite	reunite	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Can drivers ever disagree with Aaron?
# sentence_bad = Drivers can ever disagree with Aaron.
# two_prefix_prefix_good = Can drivers
# two_prefix_prefix_bad = Drivers can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present504
1	Drivers	driver	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disagree	disagree	VERB	VB	VerbForm=Inf	0	root	_	_
5	with	with	ADP	IN	_	6	case	_	_
6	Aaron	Aaron	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had those dresses ever twisted?
# sentence_bad = Those dresses had ever twisted.
# two_prefix_prefix_good = Had those dresses
# two_prefix_prefix_bad = Those dresses had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present505
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	dresses	dress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	twisted	twist	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would a lot of socks ever crumple?
# sentence_bad = A lot of socks would ever crumple.
# two_prefix_prefix_good = Would a lot of socks
# two_prefix_prefix_bad = A lot of socks would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present506
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	socks	sock	NOUN	NNS	Number=Plur	2	nmod	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	crumple	crumple	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Would some hospital ever press Mitchell's classmates to insult that high school?
# sentence_bad = Some hospital would ever press Mitchell's classmates to insult that high school.
# two_prefix_prefix_good = Would some hospital
# two_prefix_prefix_bad = Some hospital would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present507
1	Some	some	DET	DT	_	2	det	_	_
2	hospital	hospital	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	press	press	VERB	VB	VerbForm=Inf	0	root	_	_
6-7	Mitchell's	_	_	_	_	_	_	_	_
6	Mitchell	Mitchell	PROPN	NNP	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	classmates	classmate	NOUN	NNS	Number=Plur	5	obj	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	insult	insult	VERB	VB	VerbForm=Inf	5	advcl	_	_
11	that	that	DET	DT	Number=Sing|PronType=Dem	13	det	_	_
12	high	high	ADJ	JJ	Degree=Pos	13	amod	_	_
13	school	school	NOUN	NN	Number=Sing	10	obj	_	SpaceAfter=No
14	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Elizabeth ever fix many mirrors?
# sentence_bad = Elizabeth might ever fix many mirrors.
# two_prefix_prefix_good = Might Elizabeth
# two_prefix_prefix_bad = Elizabeth might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present508
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	fix	fix	VERB	VB	VerbForm=Inf	0	root	_	_
5	many	many	ADJ	JJ	Degree=Pos	6	amod	_	_
6	mirrors	mirror	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Victoria ever considered those carriages to turn?
# sentence_bad = Victoria has ever considered those carriages to turn.
# two_prefix_prefix_good = Has Victoria
# two_prefix_prefix_bad = Victoria has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present509
1	Victoria	Victoria	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	considered	consider	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	those	that	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	carriages	carriage	NOUN	NNS	Number=Plur	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	turn	turn	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could bikes ever stop?
# sentence_bad = Bikes could ever stop.
# two_prefix_prefix_good = Could bikes
# two_prefix_prefix_bad = Bikes could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present510
1	Bikes	bike	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	stop	stop	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the Lutherans ever retaliated?
# sentence_bad = The Lutherans had ever retaliated.
# two_prefix_prefix_good = Had the Lutherans
# two_prefix_prefix_bad = The Lutherans had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present511
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Lutherans	Lutheran	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	retaliated	retaliate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should those pants ever flatten?
# sentence_bad = Those pants should ever flatten.
# two_prefix_prefix_good = Should those pants
# two_prefix_prefix_bad = Those pants should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present512
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	pants	pant	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	flatten	flatten	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Sonia ever astounded Amelia?
# sentence_bad = Sonia has ever astounded Amelia.
# two_prefix_prefix_good = Has Sonia
# two_prefix_prefix_bad = Sonia has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present513
1	Sonia	Sonia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	astounded	astound	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Amelia	Amelia	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did the forks ever shatter?
# sentence_bad = The forks did ever shatter.
# two_prefix_prefix_good = Did the forks
# two_prefix_prefix_bad = The forks did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present514
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	forks	fork	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shatter	shatter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Alice ever revealed Laura?
# sentence_bad = Alice has ever revealed Laura.
# two_prefix_prefix_good = Has Alice
# two_prefix_prefix_bad = Alice has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present515
1	Alice	Alice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	revealed	reveal	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Laura	Laura	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Andrea ever spur that cashier to alarm Gregory?
# sentence_bad = Andrea might ever spur that cashier to alarm Gregory.
# two_prefix_prefix_good = Might Andrea
# two_prefix_prefix_bad = Andrea might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present516
1	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	spur	spur	VERB	VB	VerbForm=Inf	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	cashier	cashier	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	alarm	alarm	VERB	VB	VerbForm=Inf	4	xcomp	_	_
9	Gregory	Gregory	PROPN	NNP	Number=Sing	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have some men ever examined plays?
# sentence_bad = Some men have ever examined plays.
# two_prefix_prefix_good = Have some men
# two_prefix_prefix_bad = Some men have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present517
1	Some	some	DET	DT	_	2	det	_	_
2	men	man	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	examined	examine	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	plays	play	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Holly ever waved?
# sentence_bad = Holly had ever waved.
# two_prefix_prefix_good = Had Holly
# two_prefix_prefix_bad = Holly had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present518
1	Holly	Holly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	waved	wave	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Patricia ever weep?
# sentence_bad = Patricia does ever weep.
# two_prefix_prefix_good = Does Patricia
# two_prefix_prefix_bad = Patricia does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present519
1	Patricia	Patricia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	weep	weep	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Jerry ever exercised?
# sentence_bad = Jerry had ever exercised.
# two_prefix_prefix_good = Had Jerry
# two_prefix_prefix_bad = Jerry had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present520
1	Jerry	Jerry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	exercised	exercise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that mirror ever looked like every picture?
# sentence_bad = That mirror had ever looked like every picture.
# two_prefix_prefix_good = Had that mirror
# two_prefix_prefix_bad = That mirror had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present521
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	mirror	mirror	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	looked	look	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	like	like	ADP	IN	_	8	case	_	_
7	every	every	DET	DT	_	8	det	_	_
8	picture	picture	NOUN	NN	Number=Sing	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Carol ever question Jeffrey?
# sentence_bad = Carol would ever question Jeffrey.
# two_prefix_prefix_good = Would Carol
# two_prefix_prefix_bad = Carol would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present522
1	Carol	Carol	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	question	question	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some teachers ever departed?
# sentence_bad = Some teachers had ever departed.
# two_prefix_prefix_good = Had some teachers
# two_prefix_prefix_bad = Some teachers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present523
1	Some	some	DET	DT	_	2	det	_	_
2	teachers	teacher	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	departed	depart	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Melinda ever resemble some picture?
# sentence_bad = Melinda should ever resemble some picture.
# two_prefix_prefix_good = Should Melinda
# two_prefix_prefix_bad = Melinda should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present524
1	Melinda	Melinda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	resemble	resemble	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	picture	picture	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would a cup ever tip over?
# sentence_bad = A cup would ever tip over.
# two_prefix_prefix_good = Would a cup
# two_prefix_prefix_bad = A cup would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present525
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	cup	cup	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	tip	tip	VERB	VB	VerbForm=Inf	0	root	_	_
6	over	over	ADP	RP	_	5	compound:prt	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have some legislatures ever conferred?
# sentence_bad = Some legislatures have ever conferred.
# two_prefix_prefix_good = Have some legislatures
# two_prefix_prefix_bad = Some legislatures have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present526
1	Some	some	DET	DT	_	2	det	_	_
2	legislatures	legislature	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	conferred	confer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Carla ever bother Michelle?
# sentence_bad = Carla does ever bother Michelle.
# two_prefix_prefix_good = Does Carla
# two_prefix_prefix_bad = Carla does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present527
1	Carla	Carla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bother	bother	VERB	VB	VerbForm=Inf	0	root	_	_
5	Michelle	Michelle	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should this teacher ever dare Jason to yell?
# sentence_bad = This teacher should ever dare Jason to yell.
# two_prefix_prefix_good = Should this teacher
# two_prefix_prefix_bad = This teacher should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present528
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	teacher	teacher	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	dare	dare	VERB	VB	VerbForm=Inf	0	root	_	_
6	Jason	Jason	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	yell	yell	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Gregory ever hate Victoria?
# sentence_bad = Gregory might ever hate Victoria.
# two_prefix_prefix_good = Might Gregory
# two_prefix_prefix_bad = Gregory might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present529
1	Gregory	Gregory	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hate	hate	VERB	VB	VerbForm=Inf	0	root	_	_
5	Victoria	Victoria	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Beth ever tempted Carol to win?
# sentence_bad = Beth had ever tempted Carol to win.
# two_prefix_prefix_good = Had Beth
# two_prefix_prefix_bad = Beth had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present530
1	Beth	Beth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	tempted	tempt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Carol	Carol	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	win	win	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might the teenagers ever divorce?
# sentence_bad = The teenagers might ever divorce.
# two_prefix_prefix_good = Might the teenagers
# two_prefix_prefix_bad = The teenagers might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present531
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	teenagers	teenager	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	divorce	divorce	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Raymond ever scratched?
# sentence_bad = Raymond had ever scratched.
# two_prefix_prefix_good = Had Raymond
# two_prefix_prefix_bad = Raymond had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present532
1	Raymond	Raymond	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	scratched	scratch	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Kristen ever dare this customer to smile?
# sentence_bad = Kristen should ever dare this customer to smile.
# two_prefix_prefix_good = Should Kristen
# two_prefix_prefix_bad = Kristen should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present533
1	Kristen	Kristen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dare	dare	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	customer	customer	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	smile	smile	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has a man ever watched Judy?
# sentence_bad = A man has ever watched Judy.
# two_prefix_prefix_good = Has a man
# two_prefix_prefix_bad = A man has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present534
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	watched	watch	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Judy	Judy	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Susan ever yearned to litter?
# sentence_bad = Susan had ever yearned to litter.
# two_prefix_prefix_good = Had Susan
# two_prefix_prefix_bad = Susan had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present535
1	Susan	Susan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	yearned	yearn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	litter	litter	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Gerald ever protested?
# sentence_bad = Gerald had ever protested.
# two_prefix_prefix_good = Had Gerald
# two_prefix_prefix_bad = Gerald had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present536
1	Gerald	Gerald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	protested	protest	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might all carts ever accelerate?
# sentence_bad = All carts might ever accelerate.
# two_prefix_prefix_good = Might all carts
# two_prefix_prefix_bad = All carts might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present537
1	All	all	DET	DT	_	2	det	_	_
2	carts	cart	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	accelerate	accelerate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Clyde ever changed?
# sentence_bad = Clyde has ever changed.
# two_prefix_prefix_good = Has Clyde
# two_prefix_prefix_bad = Clyde has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present538
1	Clyde	Clyde	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	changed	change	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Alice ever murmured?
# sentence_bad = Alice has ever murmured.
# two_prefix_prefix_good = Has Alice
# two_prefix_prefix_bad = Alice has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present539
1	Alice	Alice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	murmured	murmur	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some lakes ever vaporized?
# sentence_bad = Some lakes had ever vaporized.
# two_prefix_prefix_good = Had some lakes
# two_prefix_prefix_bad = Some lakes had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present540
1	Some	some	DET	DT	_	2	det	_	_
2	lakes	lake	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	vaporized	vaporize	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Katherine ever discovered the men?
# sentence_bad = Katherine has ever discovered the men.
# two_prefix_prefix_good = Has Katherine
# two_prefix_prefix_bad = Katherine has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present541
1	Katherine	Katherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discovered	discover	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	men	man	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have the Impressionists ever reacted?
# sentence_bad = The Impressionists have ever reacted.
# two_prefix_prefix_good = Have the Impressionists
# two_prefix_prefix_bad = The Impressionists have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present542
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Impressionists	Impressionist	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reacted	react	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might a man ever spin around?
# sentence_bad = A man might ever spin around.
# two_prefix_prefix_good = Might a man
# two_prefix_prefix_bad = A man might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present543
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	spin	spin	VERB	VB	VerbForm=Inf	0	root	_	_
6	around	around	ADV	RB	_	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Beth ever spun around?
# sentence_bad = Beth has ever spun around.
# two_prefix_prefix_good = Has Beth
# two_prefix_prefix_bad = Beth has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present544
1	Beth	Beth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	spun	spun	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Becca ever gone to a lot of banks?
# sentence_bad = Becca had ever gone to a lot of banks.
# two_prefix_prefix_good = Had Becca
# two_prefix_prefix_bad = Becca had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present545
1	Becca	Becca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	gone	go	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	lot	lot	NOUN	NN	Number=Sing	4	obl	_	_
8	of	of	ADP	IN	_	9	case	_	_
9	banks	bank	NOUN	NNS	Number=Plur	7	nmod	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Rachelle ever proven to play?
# sentence_bad = Rachelle had ever proven to play.
# two_prefix_prefix_good = Had Rachelle
# two_prefix_prefix_bad = Rachelle had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present546
1	Rachelle	Rachelle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	proven	prove	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	play	play	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had that chair ever shattered?
# sentence_bad = That chair had ever shattered.
# two_prefix_prefix_good = Had that chair
# two_prefix_prefix_bad = That chair had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present547
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	chair	chair	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shattered	shatter	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should all skirts ever stretch?
# sentence_bad = All skirts should ever stretch.
# two_prefix_prefix_good = Should all skirts
# two_prefix_prefix_bad = All skirts should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present548
1	All	all	DET	DT	_	2	det	_	_
2	skirts	skirt	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stretch	stretch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could this icicle ever evaporate?
# sentence_bad = This icicle could ever evaporate.
# two_prefix_prefix_good = Could this icicle
# two_prefix_prefix_bad = This icicle could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present549
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	icicle	icicle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	evaporate	evaporate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Martin ever escaped?
# sentence_bad = Martin had ever escaped.
# two_prefix_prefix_good = Had Martin
# two_prefix_prefix_bad = Martin had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present550
1	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escaped	escape	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can the woman ever cook?
# sentence_bad = The woman can ever cook.
# two_prefix_prefix_good = Can the woman
# two_prefix_prefix_bad = The woman can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present551
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cook	cook	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Diana ever ascended most stairs?
# sentence_bad = Diana has ever ascended most stairs.
# two_prefix_prefix_good = Has Diana
# two_prefix_prefix_bad = Diana has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present552
1	Diana	Diana	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	ascended	ascend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	stairs	stair	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would a scarf ever stretch?
# sentence_bad = A scarf would ever stretch.
# two_prefix_prefix_good = Would a scarf
# two_prefix_prefix_bad = A scarf would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present553
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	scarf	scarf	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stretch	stretch	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Danielle ever remembered who shrugs?
# sentence_bad = Danielle had ever remembered who shrugs.
# two_prefix_prefix_good = Had Danielle
# two_prefix_prefix_bad = Danielle had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present554
1	Danielle	Danielle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remembered	remember	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	who	who	PRON	WP	PronType=Int	6	nsubj	_	_
6	shrugs	shrug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have these coats ever shrunk?
# sentence_bad = These coats have ever shrunk.
# two_prefix_prefix_good = Have these coats
# two_prefix_prefix_bad = These coats have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present555
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	coats	coat	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shrunk	shrink	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could this student ever shout?
# sentence_bad = This student could ever shout.
# two_prefix_prefix_good = Could this student
# two_prefix_prefix_bad = This student could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present556
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	student	student	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shout	shout	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had all icicles ever bothered Renee?
# sentence_bad = All icicles had ever bothered Renee.
# two_prefix_prefix_good = Had all icicles
# two_prefix_prefix_bad = All icicles had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present557
1	All	all	DET	DT	_	2	det	_	_
2	icicles	icicle	PROPN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Renee	Renee	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Cheryl ever escape from Laura?
# sentence_bad = Cheryl will ever escape from Laura.
# two_prefix_prefix_good = Will Cheryl
# two_prefix_prefix_bad = Cheryl will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present558
1	Cheryl	Cheryl	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escape	escape	VERB	VB	VerbForm=Inf	0	root	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	Laura	Laura	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had every legislature ever yearned to embarrass a university?
# sentence_bad = Every legislature had ever yearned to embarrass a university.
# two_prefix_prefix_good = Had every legislature
# two_prefix_prefix_bad = Every legislature had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present559
1	Every	every	DET	DT	_	2	det	_	_
2	legislature	legislature	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	yearned	yearn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	embarrass	embarrass	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	_	_
9	university	university	NOUN	NN	Number=Sing	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has some unicycle ever stopped?
# sentence_bad = Some unicycle has ever stopped.
# two_prefix_prefix_good = Has some unicycle
# two_prefix_prefix_bad = Some unicycle has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present560
1	Some	some	DET	DT	_	2	det	_	_
2	unicycle	unicycle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stopped	stop	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had the cashiers ever appeared to buy those newspaper articles?
# sentence_bad = The cashiers had ever appeared to buy those newspaper articles.
# two_prefix_prefix_good = Had the cashiers
# two_prefix_prefix_bad = The cashiers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present561
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	cashiers	cashier	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	appeared	appear	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	buy	buy	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	those	that	DET	DT	Number=Plur|PronType=Dem	10	det	_	_
9	newspaper	newspaper	NOUN	NN	Number=Sing	10	compound	_	_
10	articles	article	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Helen ever move?
# sentence_bad = Helen will ever move.
# two_prefix_prefix_good = Will Helen
# two_prefix_prefix_bad = Helen will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present562
1	Helen	Helen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	move	move	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had a girl ever telephoned?
# sentence_bad = A girl had ever telephoned.
# two_prefix_prefix_good = Had a girl
# two_prefix_prefix_bad = A girl had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present563
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	girl	girl	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	telephoned	telephone	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Judy ever wear most scarves?
# sentence_bad = Judy did ever wear most scarves.
# two_prefix_prefix_good = Did Judy
# two_prefix_prefix_bad = Judy did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present564
1	Judy	Judy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wear	wear	VERB	VB	VerbForm=Inf	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	scarves	scarve	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Wendy ever learn who is going fishing?
# sentence_bad = Wendy could ever learn who is going fishing.
# two_prefix_prefix_good = Could Wendy
# two_prefix_prefix_bad = Wendy could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present565
1	Wendy	Wendy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	learn	learn	VERB	VB	VerbForm=Inf	0	root	_	_
5	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
6	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	going	go	VERB	VBG	Tense=Pres|VerbForm=Part	4	ccomp	_	_
8	fishing	fish	VERB	VBG	VerbForm=Ger	7	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Steven ever stun Brad?
# sentence_bad = Steven did ever stun Brad.
# two_prefix_prefix_good = Did Steven
# two_prefix_prefix_bad = Steven did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present566
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	stun	stun	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brad	Brad	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Patrick ever see?
# sentence_bad = Patrick would ever see.
# two_prefix_prefix_good = Would Patrick
# two_prefix_prefix_bad = Patrick would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present567
1	Patrick	Patrick	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	see	see	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Jacqueline ever fall asleep?
# sentence_bad = Jacqueline did ever fall asleep.
# two_prefix_prefix_good = Did Jacqueline
# two_prefix_prefix_bad = Jacqueline did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present568
1	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	_
5	asleep	asleep	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has that patient ever departed?
# sentence_bad = That patient has ever departed.
# two_prefix_prefix_good = Has that patient
# two_prefix_prefix_bad = That patient has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present569
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	patient	patient	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	departed	depart	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have these associations ever forgotten about who isn't finding Angela?
# sentence_bad = These associations have ever forgotten about who isn't finding Angela.
# two_prefix_prefix_good = Have these associations
# two_prefix_prefix_bad = These associations have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present570
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	associations	association	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	forgotten	forget	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	about	about	SCONJ	IN	_	10	mark	_	_
7	who	who	PRON	WP	PronType=Int	10	nsubj	_	_
8-9	isn't	_	_	_	_	_	_	_	_
8	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	finding	find	VERB	VBG	Tense=Pres|VerbForm=Part	5	advcl	_	_
11	Angela	Angela	PROPN	NNP	Number=Sing	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might James ever forget who confer?
# sentence_bad = James might ever forget who confer.
# two_prefix_prefix_good = Might James
# two_prefix_prefix_bad = James might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present571
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forget	forget	VERB	VB	VerbForm=Inf	0	root	_	_
5	who	who	PRON	WP	PronType=Int	6	nsubj	_	_
6	confer	confer	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Victoria ever lied?
# sentence_bad = Victoria has ever lied.
# two_prefix_prefix_good = Has Victoria
# two_prefix_prefix_bad = Victoria has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present572
1	Victoria	Victoria	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	lied	lie	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Natalie ever escape?
# sentence_bad = Natalie will ever escape.
# two_prefix_prefix_good = Will Natalie
# two_prefix_prefix_bad = Natalie will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present573
1	Natalie	Natalie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escape	escape	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Becky ever preferred those cashiers to confuse a lot of senators?
# sentence_bad = Becky had ever preferred those cashiers to confuse a lot of senators.
# two_prefix_prefix_good = Had Becky
# two_prefix_prefix_bad = Becky had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present574
1	Becky	Becky	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	preferred	prefer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	those	that	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	cashiers	cashier	NOUN	NNS	Number=Plur	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	confuse	confuse	VERB	VB	VerbForm=Inf	4	advcl	_	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	_	_
10	lot	lot	NOUN	NN	Number=Sing	8	obj	_	_
11	of	of	ADP	IN	_	12	case	_	_
12	senators	senator	NOUN	NNS	Number=Plur	10	nmod	_	SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might a committee ever conspire?
# sentence_bad = A committee might ever conspire.
# two_prefix_prefix_good = Might a committee
# two_prefix_prefix_bad = A committee might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present575
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	committee	committee	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	conspire	conspire	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Rhonda ever scanned the commentaries?
# sentence_bad = Rhonda had ever scanned the commentaries.
# two_prefix_prefix_good = Had Rhonda
# two_prefix_prefix_bad = Rhonda had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present576
1	Rhonda	Rhonda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	scanned	scan	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	commentaries	commentary	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Paul ever described Bradley?
# sentence_bad = Paul has ever described Bradley.
# two_prefix_prefix_good = Has Paul
# two_prefix_prefix_bad = Paul has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present577
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	described	describe	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Bradley	Bradley	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might pedestrians ever embrace?
# sentence_bad = Pedestrians might ever embrace.
# two_prefix_prefix_good = Might pedestrians
# two_prefix_prefix_bad = Pedestrians might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present578
1	Pedestrians	pedestrian	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	embrace	embrace	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would most libraries ever manage to protest?
# sentence_bad = Most libraries would ever manage to protest.
# two_prefix_prefix_good = Would most libraries
# two_prefix_prefix_bad = Most libraries would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present579
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	libraries	library	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	manage	manage	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	protest	protest	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Kristen ever argued?
# sentence_bad = Kristen has ever argued.
# two_prefix_prefix_good = Has Kristen
# two_prefix_prefix_bad = Kristen has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present580
1	Kristen	Kristen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argued	argue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would the Borgias ever swallow?
# sentence_bad = The Borgias would ever swallow.
# two_prefix_prefix_good = Would the Borgias
# two_prefix_prefix_bad = The Borgias would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present581
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Borgias	Borgia	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	swallow	swallow	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Curtis ever predict many hills to aggravate Richard?
# sentence_bad = Curtis can ever predict many hills to aggravate Richard.
# two_prefix_prefix_good = Can Curtis
# two_prefix_prefix_bad = Curtis can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present582
1	Curtis	Curtis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	predict	predict	VERB	VB	VerbForm=Inf	0	root	_	_
5	many	many	ADJ	JJ	Degree=Pos	6	amod	_	_
6	hills	hill	NOUN	NNS	Number=Plur	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	aggravate	aggravate	VERB	VB	VerbForm=Inf	4	advcl	_	_
9	Richard	Richard	PROPN	NNP	Number=Sing	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have most boys ever regretted David intends to dislike documentaries?
# sentence_bad = Most boys have ever regretted David intends to dislike documentaries.
# two_prefix_prefix_good = Have most boys
# two_prefix_prefix_bad = Most boys have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present583
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	boys	boy	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	regretted	regret	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	David	David	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	intends	intend	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	dislike	dislike	VERB	VB	VerbForm=Inf	7	xcomp	_	_
10	documentaries	documentary	NOUN	NNS	Number=Plur	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had all girls ever commissioned Carl to come here?
# sentence_bad = All girls had ever commissioned Carl to come here.
# two_prefix_prefix_good = Had all girls
# two_prefix_prefix_bad = All girls had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present584
1	All	all	DET	DT	_	2	det	_	_
2	girls	girl	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	commissioned	commission	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Carl	Carl	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	come	come	VERB	VB	VerbForm=Inf	5	xcomp	_	_
9	here	here	ADV	RB	PronType=Dem	8	advmod	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did that doctor ever notice Amy?
# sentence_bad = That doctor did ever notice Amy.
# two_prefix_prefix_good = Did that doctor
# two_prefix_prefix_bad = That doctor did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present585
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	doctor	doctor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	notice	notice	VERB	VB	VerbForm=Inf	0	root	_	_
6	Amy	Amy	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would William ever mutter?
# sentence_bad = William would ever mutter.
# two_prefix_prefix_good = Would William
# two_prefix_prefix_bad = William would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present586
1	William	William	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	mutter	mutter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has the river ever frozen?
# sentence_bad = The river has ever frozen.
# two_prefix_prefix_good = Has the river
# two_prefix_prefix_bad = The river has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present587
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	river	river	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	frozen	freeze	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can many schools ever clash?
# sentence_bad = Many schools can ever clash.
# two_prefix_prefix_good = Can many schools
# two_prefix_prefix_bad = Many schools can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present588
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	schools	school	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	clash	clash	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Jill ever looked to dry?
# sentence_bad = Jill has ever looked to dry.
# two_prefix_prefix_good = Has Jill
# two_prefix_prefix_bad = Jill has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present589
1	Jill	Jill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	looked	look	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	dry	dry	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Vincent ever hire Brett?
# sentence_bad = Vincent should ever hire Brett.
# two_prefix_prefix_good = Should Vincent
# two_prefix_prefix_bad = Vincent should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present590
1	Vincent	Vincent	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hire	hire	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brett	Brett	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Kimberley ever hide?
# sentence_bad = Kimberley would ever hide.
# two_prefix_prefix_good = Would Kimberley
# two_prefix_prefix_bad = Kimberley would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present591
1	Kimberley	Kimberley	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hide	hide	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Anna ever like Stacy?
# sentence_bad = Anna can ever like Stacy.
# two_prefix_prefix_good = Can Anna
# two_prefix_prefix_bad = Anna can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present592
1	Anna	Anna	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	like	like	VERB	VB	VerbForm=Inf	0	root	_	_
5	Stacy	Stacy	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Sharon ever long to tour this glacier?
# sentence_bad = Sharon would ever long to tour this glacier.
# two_prefix_prefix_good = Would Sharon
# two_prefix_prefix_bad = Sharon would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present593
1	Sharon	Sharon	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	long	long	ADV	JJ	Degree=Pos	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	tour	tour	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	this	this	DET	DT	Number=Sing|PronType=Dem	8	det	_	_
8	glacier	glacier	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Tammy ever escaped?
# sentence_bad = Tammy has ever escaped.
# two_prefix_prefix_good = Has Tammy
# two_prefix_prefix_bad = Tammy has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present594
1	Tammy	Tammy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escaped	escape	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Danielle ever admired the computers?
# sentence_bad = Danielle had ever admired the computers.
# two_prefix_prefix_good = Had Danielle
# two_prefix_prefix_bad = Danielle had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present595
1	Danielle	Danielle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	admired	admire	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	computers	computer	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could those organizations ever succeed?
# sentence_bad = Those organizations could ever succeed.
# two_prefix_prefix_good = Could those organizations
# two_prefix_prefix_bad = Those organizations could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present596
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	organizations	organization	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	succeed	succeed	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Holly ever continued to break that computer?
# sentence_bad = Holly has ever continued to break that computer.
# two_prefix_prefix_good = Has Holly
# two_prefix_prefix_bad = Holly has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present597
1	Holly	Holly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	continued	continue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	break	break	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	that	that	DET	DT	Number=Sing|PronType=Dem	8	det	_	_
8	computer	computer	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will the Lutherans ever laugh?
# sentence_bad = The Lutherans will ever laugh.
# two_prefix_prefix_good = Will the Lutherans
# two_prefix_prefix_bad = The Lutherans will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present598
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Lutherans	Lutheran	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	laugh	laugh	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has every waiter ever said some guys stretch?
# sentence_bad = Every waiter has ever said some guys stretch.
# two_prefix_prefix_good = Has every waiter
# two_prefix_prefix_bad = Every waiter has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present599
1	Every	every	DET	DT	_	2	det	_	_
2	waiter	waiter	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	said	say	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	some	some	DET	DT	_	8	det	_	_
7	guys	guy	NOUN	NNS	Number=Plur	8	compound	_	_
8	stretch	stretch	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Rodney ever investigated who have disappeared?
# sentence_bad = Rodney had ever investigated who have disappeared.
# two_prefix_prefix_good = Had Rodney
# two_prefix_prefix_bad = Rodney had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present600
1	Rodney	Rodney	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	investigated	investigate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
6	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	disappeared	disappear	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had most teachers ever flirted?
# sentence_bad = Most teachers had ever flirted.
# two_prefix_prefix_good = Had most teachers
# two_prefix_prefix_bad = Most teachers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present601
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	teachers	teacher	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	flirted	flirt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should those doctors ever approve?
# sentence_bad = Those doctors should ever approve.
# two_prefix_prefix_good = Should those doctors
# two_prefix_prefix_bad = Those doctors should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present602
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	doctors	doctor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	approve	approve	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Joseph ever litter?
# sentence_bad = Joseph will ever litter.
# two_prefix_prefix_good = Will Joseph
# two_prefix_prefix_bad = Joseph will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present603
1	Joseph	Joseph	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	litter	litter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do many adults ever force Sabrina's fathers to debate?
# sentence_bad = Many adults do ever force Sabrina's fathers to debate.
# two_prefix_prefix_good = Do many adults
# two_prefix_prefix_bad = Many adults do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present604
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	adults	adult	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	force	force	VERB	VB	VerbForm=Inf	0	root	_	_
6-7	Sabrina's	_	_	_	_	_	_	_	_
6	Sabrina	Sabrina	PROPN	NNP	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	fathers	father	NOUN	NNS	Number=Plur	5	obj	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	debate	debate	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did a doctor ever ascend that mountain?
# sentence_bad = A doctor did ever ascend that mountain.
# two_prefix_prefix_good = Did a doctor
# two_prefix_prefix_bad = A doctor did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present605
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	doctor	doctor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	ascend	ascend	VERB	VB	VerbForm=Inf	0	root	_	_
6	that	that	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	mountain	mountain	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will boys ever collaborate?
# sentence_bad = Boys will ever collaborate.
# two_prefix_prefix_good = Will boys
# two_prefix_prefix_bad = Boys will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present606
1	Boys	boy	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	collaborate	collaborate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Rodney ever distracted Katherine?
# sentence_bad = Rodney has ever distracted Katherine.
# two_prefix_prefix_good = Has Rodney
# two_prefix_prefix_bad = Rodney has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present607
1	Rodney	Rodney	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	distracted	distract	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Katherine	Katherine	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Dana ever boycotted that legislature?
# sentence_bad = Dana had ever boycotted that legislature.
# two_prefix_prefix_good = Had Dana
# two_prefix_prefix_bad = Dana had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present608
1	Dana	Dana	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boycotted	boycot	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	legislature	legislature	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Michael ever hidden that gate?
# sentence_bad = Michael had ever hidden that gate.
# two_prefix_prefix_good = Had Michael
# two_prefix_prefix_bad = Michael had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present609
1	Michael	Michael	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hidden	hide	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	gate	gate	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did every cup ever chip?
# sentence_bad = Every cup did ever chip.
# two_prefix_prefix_good = Did every cup
# two_prefix_prefix_bad = Every cup did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present610
1	Every	every	DET	DT	_	2	det	_	_
2	cup	cup	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	chip	chip	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Bill ever forget Tonya?
# sentence_bad = Bill would ever forget Tonya.
# two_prefix_prefix_good = Would Bill
# two_prefix_prefix_bad = Bill would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present611
1	Bill	Bill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forget	forget	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tonya	Tonya	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had this woman ever explored a college campus?
# sentence_bad = This woman had ever explored a college campus.
# two_prefix_prefix_good = Had this woman
# two_prefix_prefix_bad = This woman had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present612
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	explored	explore	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	_	_
7	college	college	NOUN	NN	Number=Sing	8	compound	_	_
8	campus	campus	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Randolf ever climbed up the mountain?
# sentence_bad = Randolf had ever climbed up the mountain.
# two_prefix_prefix_good = Had Randolf
# two_prefix_prefix_bad = Randolf had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present613
1	Randolf	Randolf	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	climbed	climb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	up	up	ADP	IN	_	7	case	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
7	mountain	mountain	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Susan ever protested?
# sentence_bad = Susan has ever protested.
# two_prefix_prefix_good = Has Susan
# two_prefix_prefix_bad = Susan has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present614
1	Susan	Susan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	protested	protest	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Tina ever leave?
# sentence_bad = Tina does ever leave.
# two_prefix_prefix_good = Does Tina
# two_prefix_prefix_bad = Tina does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present615
1	Tina	Tina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	leave	leave	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did those waiters ever get a job?
# sentence_bad = Those waiters did ever get a job.
# two_prefix_prefix_good = Did those waiters
# two_prefix_prefix_bad = Those waiters did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present616
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	waiters	waiter	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	get	get	VERB	VB	VerbForm=Inf	0	root	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	job	job	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Amelia ever exercise?
# sentence_bad = Amelia does ever exercise.
# two_prefix_prefix_good = Does Amelia
# two_prefix_prefix_bad = Amelia does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present617
1	Amelia	Amelia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	exercise	exercise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might a pedestrian ever talk about Becca?
# sentence_bad = A pedestrian might ever talk about Becca.
# two_prefix_prefix_good = Might a pedestrian
# two_prefix_prefix_bad = A pedestrian might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present618
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	pedestrian	pedestrian	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	talk	talk	VERB	VB	VerbForm=Inf	0	root	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	Becca	Becca	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have many students ever shrugged?
# sentence_bad = Many students have ever shrugged.
# two_prefix_prefix_good = Have many students
# two_prefix_prefix_bad = Many students have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present619
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	students	student	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shrugged	shrug	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had William ever imagined Colleen hadn't bothered Marcus?
# sentence_bad = William had ever imagined Colleen hadn't bothered Marcus.
# two_prefix_prefix_good = Had William
# two_prefix_prefix_bad = William had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present620
1	William	William	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	imagined	imagine	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Colleen	Colleen	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	hadn't	_	_	_	_	_	_	_	_
6	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
9	Marcus	Marcus	PROPN	NNP	Number=Sing	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Amanda ever proven to turn?
# sentence_bad = Amanda has ever proven to turn.
# two_prefix_prefix_good = Has Amanda
# two_prefix_prefix_bad = Amanda has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present621
1	Amanda	Amanda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	proven	prove	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	turn	turn	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Carlos ever obligated Rodney to wash?
# sentence_bad = Carlos had ever obligated Rodney to wash.
# two_prefix_prefix_good = Had Carlos
# two_prefix_prefix_bad = Carlos had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present622
1	Carlos	Carlos	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	obligated	obligate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Rodney	Rodney	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	wash	wash	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did coats ever flatten?
# sentence_bad = Coats did ever flatten.
# two_prefix_prefix_good = Did coats
# two_prefix_prefix_bad = Coats did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present623
1	Coats	coat	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	flatten	flatten	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Candice ever describe Robert?
# sentence_bad = Candice can ever describe Robert.
# two_prefix_prefix_good = Can Candice
# two_prefix_prefix_bad = Candice can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present624
1	Candice	Candice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	describe	describe	VERB	VB	VerbForm=Inf	0	root	_	_
5	Robert	Robert	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Rachelle ever watched a lot of pedestrians?
# sentence_bad = Rachelle had ever watched a lot of pedestrians.
# two_prefix_prefix_good = Had Rachelle
# two_prefix_prefix_bad = Rachelle had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present625
1	Rachelle	Rachelle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	watched	watch	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	lot	lot	NOUN	NN	Number=Sing	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	pedestrians	pedestrian	NOUN	NNS	Number=Plur	6	nmod	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should the broccoli ever blacken?
# sentence_bad = The broccoli should ever blacken.
# two_prefix_prefix_good = Should the broccoli
# two_prefix_prefix_bad = The broccoli should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present626
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	broccoli	broccoli	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	blacken	blacken	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Carrie ever commissioned the niece of Frank to climb up many mountains?
# sentence_bad = Carrie has ever commissioned the niece of Frank to climb up many mountains.
# two_prefix_prefix_good = Has Carrie
# two_prefix_prefix_bad = Carrie has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present627
1	Carrie	Carrie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	commissioned	commission	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	niece	niece	NOUN	NN	Number=Sing	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	Frank	Frank	PROPN	NNP	Number=Sing	6	nmod	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	climb	climb	VERB	VB	VerbForm=Inf	4	xcomp	_	_
11	up	up	ADP	RP	_	10	compound:prt	_	_
12	many	many	ADJ	JJ	Degree=Pos	13	amod	_	_
13	mountains	mountain	NOUN	NNS	Number=Plur	10	obj	_	SpaceAfter=No
14	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Tiffany ever shouted?
# sentence_bad = Tiffany had ever shouted.
# two_prefix_prefix_good = Had Tiffany
# two_prefix_prefix_bad = Tiffany had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present628
1	Tiffany	Tiffany	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	shouted	shout	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Nicole ever seemed to profit?
# sentence_bad = Nicole has ever seemed to profit.
# two_prefix_prefix_good = Has Nicole
# two_prefix_prefix_bad = Nicole has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present629
1	Nicole	Nicole	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	seemed	seem	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	profit	profit	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Marla ever embarrassed all men?
# sentence_bad = Marla had ever embarrassed all men.
# two_prefix_prefix_good = Had Marla
# two_prefix_prefix_bad = Marla had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present630
1	Marla	Marla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	embarrassed	embarrass	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	all	all	DET	DT	_	6	det	_	_
6	men	man	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will many jackets ever vanish?
# sentence_bad = Many jackets will ever vanish.
# two_prefix_prefix_good = Will many jackets
# two_prefix_prefix_bad = Many jackets will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present631
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	jackets	jacket	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	vanish	vanish	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had many drivers ever obligated the girl to confuse Steve?
# sentence_bad = Many drivers had ever obligated the girl to confuse Steve.
# two_prefix_prefix_good = Had many drivers
# two_prefix_prefix_bad = Many drivers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present632
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	drivers	driver	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	obligated	obligate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
7	girl	girl	NOUN	NN	Number=Sing	5	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	confuse	confuse	VERB	VB	VerbForm=Inf	5	xcomp	_	_
10	Steve	Steve	PROPN	NNP	Number=Sing	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Rachel ever remember what can close?
# sentence_bad = Rachel would ever remember what can close.
# two_prefix_prefix_good = Would Rachel
# two_prefix_prefix_bad = Rachel would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present633
1	Rachel	Rachel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remember	remember	VERB	VB	VerbForm=Inf	0	root	_	_
5	what	what	PRON	WP	PronType=Int	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	close	close	VERB	VB	VerbForm=Inf	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Beverly ever argue?
# sentence_bad = Beverly can ever argue.
# two_prefix_prefix_good = Can Beverly
# two_prefix_prefix_bad = Beverly can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present634
1	Beverly	Beverly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	argue	argue	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Dan ever try to scare Derek?
# sentence_bad = Dan does ever try to scare Derek.
# two_prefix_prefix_good = Does Dan
# two_prefix_prefix_bad = Dan does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present635
1	Dan	Dan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	try	try	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	scare	scare	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Derek	Derek	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do those forks ever crack?
# sentence_bad = Those forks do ever crack.
# two_prefix_prefix_good = Do those forks
# two_prefix_prefix_bad = Those forks do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present636
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	forks	fork	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	crack	crack	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Edward ever shock a lot of universities?
# sentence_bad = Edward did ever shock a lot of universities.
# two_prefix_prefix_good = Did Edward
# two_prefix_prefix_bad = Edward did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present637
1	Edward	Edward	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	shock	shock	VERB	VB	VerbForm=Inf	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	lot	lot	NOUN	NN	Number=Sing	4	obj	_	_
7	of	of	ADP	IN	_	8	case	_	_
8	universities	university	NOUN	NNS	Number=Plur	6	nmod	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Jason ever complained?
# sentence_bad = Jason had ever complained.
# two_prefix_prefix_good = Had Jason
# two_prefix_prefix_bad = Jason had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present638
1	Jason	Jason	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	complained	complain	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Monica ever laugh?
# sentence_bad = Monica could ever laugh.
# two_prefix_prefix_good = Could Monica
# two_prefix_prefix_bad = Monica could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present639
1	Monica	Monica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	laugh	laugh	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can every woman ever vanish?
# sentence_bad = Every woman can ever vanish.
# two_prefix_prefix_good = Can every woman
# two_prefix_prefix_bad = Every woman can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present640
1	Every	every	DET	DT	_	2	det	_	_
2	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	vanish	vanish	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Margaret ever seemed to scare Spain?
# sentence_bad = Margaret had ever seemed to scare Spain.
# two_prefix_prefix_good = Had Margaret
# two_prefix_prefix_bad = Margaret had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present641
1	Margaret	Margaret	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	seemed	seem	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	scare	scare	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Spain	Spain	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Galileo ever spurred Vincent to walk through a lot of public parks?
# sentence_bad = Galileo has ever spurred Vincent to walk through a lot of public parks.
# two_prefix_prefix_good = Has Galileo
# two_prefix_prefix_bad = Galileo has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present642
1	Galileo	Galileo	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	spurred	spur	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Vincent	Vincent	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	walk	walk	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	through	through	ADP	IN	_	10	case	_	_
9	a	a	DET	DT	Definite=Ind|PronType=Art	10	det	_	_
10	lot	lot	NOUN	NN	Number=Sing	7	obl	_	_
11	of	of	ADP	IN	_	13	case	_	_
12	public	public	ADJ	JJ	Degree=Pos	13	amod	_	_
13	parks	park	NOUN	NNS	Number=Plur	10	nmod	_	SpaceAfter=No
14	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Diana ever remembered the lady?
# sentence_bad = Diana has ever remembered the lady.
# two_prefix_prefix_good = Has Diana
# two_prefix_prefix_bad = Diana has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present643
1	Diana	Diana	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remembered	remember	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	lady	lady	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has this legislature ever cooperated?
# sentence_bad = This legislature has ever cooperated.
# two_prefix_prefix_good = Has this legislature
# two_prefix_prefix_bad = This legislature has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present644
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	legislature	legislature	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cooperated	cooperate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had the Borgias ever bored the Lutherans?
# sentence_bad = The Borgias had ever bored the Lutherans.
# two_prefix_prefix_good = Had the Borgias
# two_prefix_prefix_bad = The Borgias had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present645
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Borgias	Borgia	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bored	bore	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
7	Lutherans	Lutheran	PROPN	NNPS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Barbara ever appear to vaporize?
# sentence_bad = Barbara did ever appear to vaporize.
# two_prefix_prefix_good = Did Barbara
# two_prefix_prefix_bad = Barbara did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present646
1	Barbara	Barbara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	appear	appear	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	vaporize	vaporize	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Kenneth ever complained?
# sentence_bad = Kenneth has ever complained.
# two_prefix_prefix_good = Has Kenneth
# two_prefix_prefix_bad = Kenneth has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present647
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	complained	complain	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could most waitresses ever talk to a patient?
# sentence_bad = Most waitresses could ever talk to a patient.
# two_prefix_prefix_good = Could most waitresses
# two_prefix_prefix_bad = Most waitresses could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present648
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	waitresses	waitress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	talk	talk	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	ADP	IN	_	8	case	_	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	_	_
8	patient	patient	NOUN	NN	Number=Sing	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had these teenagers ever responded?
# sentence_bad = These teenagers had ever responded.
# two_prefix_prefix_good = Had these teenagers
# two_prefix_prefix_bad = These teenagers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present649
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	teenagers	teenager	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	responded	respond	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will those candles ever fall?
# sentence_bad = Those candles will ever fall.
# two_prefix_prefix_good = Will those candles
# two_prefix_prefix_bad = Those candles will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present650
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	candles	candle	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did these actors ever compete?
# sentence_bad = These actors did ever compete.
# two_prefix_prefix_good = Did these actors
# two_prefix_prefix_bad = These actors did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present651
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	compete	compete	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has the glacier ever melted?
# sentence_bad = The glacier has ever melted.
# two_prefix_prefix_good = Has the glacier
# two_prefix_prefix_bad = The glacier has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present652
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	glacier	glacier	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	melted	melt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Deborah ever joke around?
# sentence_bad = Deborah can ever joke around.
# two_prefix_prefix_good = Can Deborah
# two_prefix_prefix_bad = Deborah can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present653
1	Deborah	Deborah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	joke	joke	VERB	VB	VerbForm=Inf	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did a lot of waiters ever confer?
# sentence_bad = A lot of waiters did ever confer.
# two_prefix_prefix_good = Did a lot of waiters
# two_prefix_prefix_bad = A lot of waiters did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present654
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	waiters	waiter	NOUN	NNS	Number=Plur	2	nmod	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	confer	confer	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Did some river ever freeze?
# sentence_bad = Some river did ever freeze.
# two_prefix_prefix_good = Did some river
# two_prefix_prefix_bad = Some river did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present655
1	Some	some	DET	DT	_	2	det	_	_
2	river	river	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	freeze	freeze	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Jeffrey ever bother to question Cynthia?
# sentence_bad = Jeffrey did ever bother to question Cynthia.
# two_prefix_prefix_good = Did Jeffrey
# two_prefix_prefix_bad = Jeffrey did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present656
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bother	bother	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	question	question	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	Cynthia	Cynthia	PROPN	NNP	Number=Sing	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did many waitresses ever embrace?
# sentence_bad = Many waitresses did ever embrace.
# two_prefix_prefix_good = Did many waitresses
# two_prefix_prefix_bad = Many waitresses did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present657
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	waitresses	waitress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	embrace	embrace	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have some pictures ever disappeared?
# sentence_bad = Some pictures have ever disappeared.
# two_prefix_prefix_good = Have some pictures
# two_prefix_prefix_bad = Some pictures have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present658
1	Some	some	DET	DT	_	2	det	_	_
2	pictures	picture	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disappeared	disappear	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Florence ever remembered some adults?
# sentence_bad = Florence had ever remembered some adults.
# two_prefix_prefix_good = Had Florence
# two_prefix_prefix_bad = Florence had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present659
1	Florence	Florence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	remembered	remember	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	adults	adult	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could all shirts ever tighten?
# sentence_bad = All shirts could ever tighten.
# two_prefix_prefix_good = Could all shirts
# two_prefix_prefix_bad = All shirts could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present660
1	All	all	DET	DT	_	2	det	_	_
2	shirts	shirt	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	tighten	tighten	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had a lot of boys ever argued?
# sentence_bad = A lot of boys had ever argued.
# two_prefix_prefix_good = Had a lot of boys
# two_prefix_prefix_bad = A lot of boys had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present661
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	boys	boy	NOUN	NNS	Number=Plur	2	nmod	_	_
5	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	argued	argue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Could Kimberley ever hug every waiter?
# sentence_bad = Kimberley could ever hug every waiter.
# two_prefix_prefix_good = Could Kimberley
# two_prefix_prefix_bad = Kimberley could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present662
1	Kimberley	Kimberley	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hug	hug	VERB	VB	VerbForm=Inf	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	waiter	waiter	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Patricia ever boycott most companies?
# sentence_bad = Patricia should ever boycott most companies.
# two_prefix_prefix_good = Should Patricia
# two_prefix_prefix_bad = Patricia should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present663
1	Patricia	Patricia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boycott	boycott	VERB	VB	VerbForm=Inf	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	companies	company	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Sabrina ever praised the newspaper articles?
# sentence_bad = Sabrina has ever praised the newspaper articles.
# two_prefix_prefix_good = Has Sabrina
# two_prefix_prefix_bad = Sabrina has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present664
1	Sabrina	Sabrina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	praised	praise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
6	newspaper	newspaper	NOUN	NN	Number=Sing	7	compound	_	_
7	articles	article	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some vase ever chipped?
# sentence_bad = Some vase had ever chipped.
# two_prefix_prefix_good = Had some vase
# two_prefix_prefix_bad = Some vase had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present665
1	Some	some	DET	DT	_	2	det	_	_
2	vase	vase	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	chipped	chip	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had a lot of vases ever annoyed Paul?
# sentence_bad = A lot of vases had ever annoyed Paul.
# two_prefix_prefix_good = Had a lot of vases
# two_prefix_prefix_bad = A lot of vases had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present666
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	vases	vase	NOUN	NNS	Number=Plur	2	nmod	_	_
5	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	annoyed	annoy	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8	Paul	Paul	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Does Rose ever compromise?
# sentence_bad = Rose does ever compromise.
# two_prefix_prefix_good = Does Rose
# two_prefix_prefix_bad = Rose does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present667
1	Rose	Rose	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compromise	compromise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could that driver ever ask Andrea's handymen to escape from Donald?
# sentence_bad = That driver could ever ask Andrea's handymen to escape from Donald.
# two_prefix_prefix_good = Could that driver
# two_prefix_prefix_bad = That driver could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present668
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	driver	driver	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	ask	ask	VERB	VB	VerbForm=Inf	0	root	_	_
6-7	Andrea's	_	_	_	_	_	_	_	_
6	Andrea	Andrea	PROPN	NNP	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	handymen	handymen	NOUN	NN	Number=Sing	5	obj	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	escape	escape	VERB	VB	VerbForm=Inf	5	advcl	_	_
11	from	from	ADP	IN	_	12	case	_	_
12	Donald	Donald	PROPN	NNP	Number=Sing	10	obl	_	SpaceAfter=No
13	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had every couch ever cracked?
# sentence_bad = Every couch had ever cracked.
# two_prefix_prefix_good = Had every couch
# two_prefix_prefix_bad = Every couch had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present669
1	Every	every	DET	DT	_	2	det	_	_
2	couch	couch	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cracked	crack	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Grace ever criticize Susan?
# sentence_bad = Grace will ever criticize Susan.
# two_prefix_prefix_good = Will Grace
# two_prefix_prefix_bad = Grace will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present670
1	Grace	Grace	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	criticize	criticize	VERB	VB	VerbForm=Inf	0	root	_	_
5	Susan	Susan	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Emily ever neglected to sneeze?
# sentence_bad = Emily has ever neglected to sneeze.
# two_prefix_prefix_good = Has Emily
# two_prefix_prefix_bad = Emily has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present671
1	Emily	Emily	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	neglected	neglect	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	sneeze	sneeze	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Janice ever push Jessica to kiss Diane?
# sentence_bad = Janice might ever push Jessica to kiss Diane.
# two_prefix_prefix_good = Might Janice
# two_prefix_prefix_bad = Janice might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present672
1	Janice	Janice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	push	push	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jessica	Jessica	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	kiss	kiss	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	Diane	Diane	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Suzanne ever laughed?
# sentence_bad = Suzanne had ever laughed.
# two_prefix_prefix_good = Had Suzanne
# two_prefix_prefix_bad = Suzanne had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present673
1	Suzanne	Suzanne	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	laughed	laugh	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Rhonda ever left Kimberley?
# sentence_bad = Rhonda had ever left Kimberley.
# two_prefix_prefix_good = Had Rhonda
# two_prefix_prefix_bad = Rhonda had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present674
1	Rhonda	Rhonda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	left	leave	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Kimberley	Kimberley	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Pamela ever reveal Jodi?
# sentence_bad = Pamela will ever reveal Jodi.
# two_prefix_prefix_good = Will Pamela
# two_prefix_prefix_bad = Pamela will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present675
1	Pamela	Pamela	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	reveal	reveal	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jodi	Jodi	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Bruce ever compromise?
# sentence_bad = Bruce should ever compromise.
# two_prefix_prefix_good = Should Bruce
# two_prefix_prefix_bad = Bruce should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present676
1	Bruce	Bruce	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compromise	compromise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some bananas ever annoyed Melinda?
# sentence_bad = Some bananas had ever annoyed Melinda.
# two_prefix_prefix_good = Had some bananas
# two_prefix_prefix_bad = Some bananas had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present677
1	Some	some	DET	DT	_	2	det	_	_
2	bananas	banana	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	annoyed	annoy	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Melinda	Melinda	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Do these organizations ever appreciate Becca?
# sentence_bad = These organizations do ever appreciate Becca.
# two_prefix_prefix_good = Do these organizations
# two_prefix_prefix_bad = These organizations do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present678
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	organizations	organization	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	appreciate	appreciate	VERB	VB	VerbForm=Inf	0	root	_	_
6	Becca	Becca	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did this cucumber ever ripen?
# sentence_bad = This cucumber did ever ripen.
# two_prefix_prefix_good = Did this cucumber
# two_prefix_prefix_bad = This cucumber did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present679
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	cucumber	cucumber	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	ripen	ripen	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did the jackets ever loosen?
# sentence_bad = The jackets did ever loosen.
# two_prefix_prefix_good = Did the jackets
# two_prefix_prefix_bad = The jackets did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present680
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	jackets	jacket	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	loosen	loosen	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Tracy ever explain Stacey changes?
# sentence_bad = Tracy will ever explain Stacey changes.
# two_prefix_prefix_good = Will Tracy
# two_prefix_prefix_bad = Tracy will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present681
1	Tracy	Tracy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Stacey	Stacey	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	changes	change	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will those waitresses ever go to some hills?
# sentence_bad = Those waitresses will ever go to some hills.
# two_prefix_prefix_good = Will those waitresses
# two_prefix_prefix_bad = Those waitresses will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present682
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	waitresses	waitress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	go	go	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	ADP	IN	_	8	case	_	_
7	some	some	DET	DT	_	8	det	_	_
8	hills	hill	NOUN	NNS	Number=Plur	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might every dress ever shrink?
# sentence_bad = Every dress might ever shrink.
# two_prefix_prefix_good = Might every dress
# two_prefix_prefix_bad = Every dress might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present683
1	Every	every	DET	DT	_	2	det	_	_
2	dress	dress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shrink	shrink	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Gina ever disappear?
# sentence_bad = Gina would ever disappear.
# two_prefix_prefix_good = Would Gina
# two_prefix_prefix_bad = Gina would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present684
1	Gina	Gina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disappear	disappear	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Jill ever hired Gina?
# sentence_bad = Jill had ever hired Gina.
# two_prefix_prefix_good = Had Jill
# two_prefix_prefix_bad = Jill had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present685
1	Jill	Jill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hired	hire	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Gina	Gina	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Tammy ever discovered girls to chat?
# sentence_bad = Tammy has ever discovered girls to chat.
# two_prefix_prefix_good = Has Tammy
# two_prefix_prefix_bad = Tammy has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present686
1	Tammy	Tammy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discovered	discover	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	girls	girl	NOUN	NNS	Number=Plur	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	chat	chat	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had women ever fought?
# sentence_bad = Women had ever fought.
# two_prefix_prefix_good = Had women
# two_prefix_prefix_bad = Women had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present687
1	Women	woman	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	fought	fight	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should the school ever collaborate?
# sentence_bad = The school should ever collaborate.
# two_prefix_prefix_good = Should the school
# two_prefix_prefix_bad = The school should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present688
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	school	school	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	collaborate	collaborate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had a lot of women ever walked through some public park?
# sentence_bad = A lot of women had ever walked through some public park.
# two_prefix_prefix_good = Had a lot of women
# two_prefix_prefix_bad = A lot of women had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present689
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	women	woman	NOUN	NNS	Number=Plur	2	nmod	_	_
5	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	walked	walk	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8	through	through	ADP	IN	_	11	case	_	_
9	some	some	DET	DT	_	11	det	_	_
10	public	public	ADJ	JJ	Degree=Pos	11	amod	_	_
11	park	park	NOUN	NN	Number=Sing	7	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Will Dawn ever scan some newspaper article?
# sentence_bad = Dawn will ever scan some newspaper article.
# two_prefix_prefix_good = Will Dawn
# two_prefix_prefix_bad = Dawn will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present690
1	Dawn	Dawn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	scan	scan	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	7	det	_	_
6	newspaper	newspaper	NOUN	NN	Number=Sing	7	compound	_	_
7	article	article	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have the plates ever slipped?
# sentence_bad = The plates have ever slipped.
# two_prefix_prefix_good = Have the plates
# two_prefix_prefix_bad = The plates have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present691
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	plates	plate	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	slipped	slip	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Eva ever sung?
# sentence_bad = Eva had ever sung.
# two_prefix_prefix_good = Had Eva
# two_prefix_prefix_bad = Eva had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present692
1	Eva	Eva	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sung	sing	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Margaret ever imagine Catherine has visited Winston Churchill?
# sentence_bad = Margaret did ever imagine Catherine has visited Winston Churchill.
# two_prefix_prefix_good = Did Margaret
# two_prefix_prefix_bad = Margaret did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present693
1	Margaret	Margaret	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Catherine	Catherine	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	visited	visit	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
8	Winston	Winston	PROPN	NNP	Number=Sing	7	obj	_	_
9	Churchill	Churchill	PROPN	NNP	Number=Sing	8	flat	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had those girls ever drunk?
# sentence_bad = Those girls had ever drunk.
# two_prefix_prefix_good = Had those girls
# two_prefix_prefix_bad = Those girls had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present694
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	girls	girl	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	drunk	drink	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Scott ever escape from Maria?
# sentence_bad = Scott should ever escape from Maria.
# two_prefix_prefix_good = Should Scott
# two_prefix_prefix_bad = Scott should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present695
1	Scott	Scott	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escape	escape	VERB	VB	VerbForm=Inf	0	root	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	Maria	Maria	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Daniel ever compromise?
# sentence_bad = Daniel will ever compromise.
# two_prefix_prefix_good = Will Daniel
# two_prefix_prefix_bad = Daniel will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present696
1	Daniel	Daniel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compromise	compromise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should many actors ever exercise?
# sentence_bad = Many actors should ever exercise.
# two_prefix_prefix_good = Should many actors
# two_prefix_prefix_bad = Many actors should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present697
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	exercise	exercise	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Nancy ever chuckled?
# sentence_bad = Nancy had ever chuckled.
# two_prefix_prefix_good = Had Nancy
# two_prefix_prefix_bad = Nancy had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present698
1	Nancy	Nancy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	chuckled	chuckle	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will museums ever communicate?
# sentence_bad = Museums will ever communicate.
# two_prefix_prefix_good = Will museums
# two_prefix_prefix_bad = Museums will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present699
1	Museums	museum	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	communicate	communicate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Carlos ever climb down a hill?
# sentence_bad = Carlos can ever climb down a hill.
# two_prefix_prefix_good = Can Carlos
# two_prefix_prefix_bad = Carlos can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present700
1	Carlos	Carlos	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	climb	climb	VERB	VB	VerbForm=Inf	0	root	_	_
5	down	down	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	hill	hill	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has a casserole ever charred?
# sentence_bad = A casserole has ever charred.
# two_prefix_prefix_good = Has a casserole
# two_prefix_prefix_bad = A casserole has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present701
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	casserole	casserole	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	charred	char	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Linda ever talk about a hill?
# sentence_bad = Linda will ever talk about a hill.
# two_prefix_prefix_good = Will Linda
# two_prefix_prefix_bad = Linda will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present702
1	Linda	Linda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	talk	talk	VERB	VB	VerbForm=Inf	0	root	_	_
5	about	about	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	hill	hill	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Stacey ever thought some universities have conspired?
# sentence_bad = Stacey had ever thought some universities have conspired.
# two_prefix_prefix_good = Had Stacey
# two_prefix_prefix_bad = Stacey had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present703
1	Stacey	Stacey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	thought	think	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	universities	university	NOUN	NNS	Number=Plur	8	nsubj	_	_
7	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
8	conspired	conspire	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Laurie ever studied?
# sentence_bad = Laurie had ever studied.
# two_prefix_prefix_good = Had Laurie
# two_prefix_prefix_bad = Laurie had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present704
1	Laurie	Laurie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	studied	study	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have all bikes ever slipped?
# sentence_bad = All bikes have ever slipped.
# two_prefix_prefix_good = Have all bikes
# two_prefix_prefix_bad = All bikes have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present705
1	All	all	DET	DT	_	2	det	_	_
2	bikes	bike	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	slipped	slip	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Helen ever dislike those dancers?
# sentence_bad = Helen did ever dislike those dancers.
# two_prefix_prefix_good = Did Helen
# two_prefix_prefix_bad = Helen did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present706
1	Helen	Helen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dislike	dislike	VERB	VB	VerbForm=Inf	0	root	_	_
5	those	that	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	dancers	dancer	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did a lot of boys ever testify?
# sentence_bad = A lot of boys did ever testify.
# two_prefix_prefix_good = Did a lot of boys
# two_prefix_prefix_bad = A lot of boys did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present707
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	boys	boy	NOUN	NNS	Number=Plur	2	nmod	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	testify	testify	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Have some teenagers ever interacted?
# sentence_bad = Some teenagers have ever interacted.
# two_prefix_prefix_good = Have some teenagers
# two_prefix_prefix_bad = Some teenagers have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present708
1	Some	some	DET	DT	_	2	det	_	_
2	teenagers	teenager	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	interacted	interact	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Becca ever yearn to come here?
# sentence_bad = Becca will ever yearn to come here.
# two_prefix_prefix_good = Will Becca
# two_prefix_prefix_bad = Becca will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present709
1	Becca	Becca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	yearn	yearn	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	come	come	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	here	here	ADV	RB	PronType=Dem	6	advmod	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have a lot of pedestrians ever bothered to drink?
# sentence_bad = A lot of pedestrians have ever bothered to drink.
# two_prefix_prefix_good = Have a lot of pedestrians
# two_prefix_prefix_bad = A lot of pedestrians have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present710
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	pedestrians	pedestrian	NOUN	NNS	Number=Plur	2	nmod	_	_
5	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	drink	drink	VERB	VB	VerbForm=Inf	7	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Did these guests ever divorce?
# sentence_bad = These guests did ever divorce.
# two_prefix_prefix_good = Did these guests
# two_prefix_prefix_bad = These guests did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present711
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	guests	guest	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	divorce	divorce	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Lawrence ever work with Kathleen?
# sentence_bad = Lawrence would ever work with Kathleen.
# two_prefix_prefix_good = Would Lawrence
# two_prefix_prefix_bad = Lawrence would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present712
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	work	work	VERB	VB	VerbForm=Inf	0	root	_	_
5	with	with	ADP	IN	_	6	case	_	_
6	Kathleen	Kathleen	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can an actress ever expect Bradley to fall?
# sentence_bad = An actress can ever expect Bradley to fall.
# two_prefix_prefix_good = Can an actress
# two_prefix_prefix_bad = An actress can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present713
1	An	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	expect	expect	VERB	VB	VerbForm=Inf	0	root	_	_
6	Bradley	Bradley	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	fall	fall	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has the icicle ever evaporated?
# sentence_bad = The icicle has ever evaporated.
# two_prefix_prefix_good = Has the icicle
# two_prefix_prefix_bad = The icicle has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present714
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	icicle	icicle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	evaporated	evaporate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Tanya ever get fired?
# sentence_bad = Tanya does ever get fired.
# two_prefix_prefix_good = Does Tanya
# two_prefix_prefix_bad = Tanya does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present715
1	Tanya	Tanya	PROPN	NNP	Number=Sing	5	nsubj:pass	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
3	ever	ever	ADV	RB	_	5	advmod	_	_
4	get	get	AUX	VB	VerbForm=Inf	5	aux:pass	_	_
5	fired	fire	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should the associations ever succeed?
# sentence_bad = The associations should ever succeed.
# two_prefix_prefix_good = Should the associations
# two_prefix_prefix_bad = The associations should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present716
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	associations	association	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	succeed	succeed	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Kevin ever think all waiters shouldn't hide away?
# sentence_bad = Kevin will ever think all waiters shouldn't hide away.
# two_prefix_prefix_good = Will Kevin
# two_prefix_prefix_bad = Kevin will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present717
1	Kevin	Kevin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	all	all	DET	DT	_	6	det	_	_
6	waiters	waiter	NOUN	NNS	Number=Plur	9	nsubj	_	_
7-8	shouldn't	_	_	_	_	_	_	_	_
7	should	should	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	hide	hide	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	away	away	ADV	RB	_	9	advmod	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will the skateboards ever steer?
# sentence_bad = The skateboards will ever steer.
# two_prefix_prefix_good = Will the skateboards
# two_prefix_prefix_bad = The skateboards will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present718
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	skateboards	skateboard	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	steer	steer	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Wayne ever manage to laugh?
# sentence_bad = Wayne will ever manage to laugh.
# two_prefix_prefix_good = Will Wayne
# two_prefix_prefix_bad = Wayne will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present719
1	Wayne	Wayne	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	manage	manage	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	laugh	laugh	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does the waitress ever reveal what talked about most banks?
# sentence_bad = The waitress does ever reveal what talked about most banks.
# two_prefix_prefix_good = Does the waitress
# two_prefix_prefix_bad = The waitress does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present720
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	waitress	waitress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reveal	reveal	VERB	VB	VerbForm=Inf	0	root	_	_
6	what	what	PRON	WP	PronType=Int	5	obj	_	_
7	talked	talk	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	acl:relcl	_	_
8	about	about	ADP	IN	_	10	case	_	_
9	most	most	ADJ	JJS	Degree=Sup	10	amod	_	_
10	banks	bank	NOUN	NNS	Number=Plur	7	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Jerry ever considered Christina to salute?
# sentence_bad = Jerry had ever considered Christina to salute.
# two_prefix_prefix_good = Had Jerry
# two_prefix_prefix_bad = Jerry had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present721
1	Jerry	Jerry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	considered	consider	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Christina	Christina	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	salute	salute	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Martha ever arrive at Spain?
# sentence_bad = Martha does ever arrive at Spain.
# two_prefix_prefix_good = Does Martha
# two_prefix_prefix_bad = Martha does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present722
1	Martha	Martha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	arrive	arrive	VERB	VB	VerbForm=Inf	0	root	_	_
5	at	at	ADP	IN	_	6	case	_	_
6	Spain	Spain	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Angela ever discover who has fired Dana?
# sentence_bad = Angela does ever discover who has fired Dana.
# two_prefix_prefix_good = Does Angela
# two_prefix_prefix_bad = Angela does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present723
1	Angela	Angela	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discover	discover	VERB	VB	VerbForm=Inf	0	root	_	_
5	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
6	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	fired	fire	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
8	Dana	Dana	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Bethany ever slumped over?
# sentence_bad = Bethany had ever slumped over.
# two_prefix_prefix_good = Had Bethany
# two_prefix_prefix_bad = Bethany had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present724
1	Bethany	Bethany	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	slumped	slump	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	over	over	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Ronald ever escaped from every grocery store?
# sentence_bad = Ronald had ever escaped from every grocery store.
# two_prefix_prefix_good = Had Ronald
# two_prefix_prefix_bad = Ronald had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present725
1	Ronald	Ronald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escaped	escape	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	from	from	ADP	IN	_	8	case	_	_
6	every	every	DET	DT	_	8	det	_	_
7	grocery	grocery	NOUN	NN	Number=Sing	8	compound	_	_
8	store	store	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Susan ever imagined these customers discover who are realizing who can't obligate Natalie to drive to this mall?
# sentence_bad = Susan had ever imagined these customers discover who are realizing who can't obligate Natalie to drive to this mall.
# two_prefix_prefix_good = Had Susan
# two_prefix_prefix_bad = Susan had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present726
1	Susan	Susan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	imagined	imagine	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	customers	customer	NOUN	NNS	Number=Plur	4	obj	_	_
7	discover	discover	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	who	who	PRON	WP	PronType=Int	10	nsubj	_	_
9	are	be	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	10	aux	_	_
10	realizing	realize	VERB	VBG	Tense=Pres|VerbForm=Part	7	ccomp	_	_
11	who	who	PRON	WP	PronType=Int	14	nsubj	_	_
12-13	can't	_	_	_	_	_	_	_	_
12	ca	can	AUX	MD	VerbForm=Fin	14	aux	_	_
13	n't	not	PART	RB	_	14	advmod	_	_
14	obligate	obligate	VERB	VB	VerbForm=Inf	10	ccomp	_	_
15	Natalie	Natalie	PROPN	NNP	Number=Sing	14	obj	_	_
16	to	to	PART	TO	_	17	mark	_	_
17	drive	drive	VERB	VB	VerbForm=Inf	14	xcomp	_	_
18	to	to	ADP	IN	_	20	case	_	_
19	this	this	DET	DT	Number=Sing|PronType=Dem	20	det	_	_
20	mall	mall	NOUN	NN	Number=Sing	17	obl	_	SpaceAfter=No
21	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Margaret ever longed to wear some dresses?
# sentence_bad = Margaret had ever longed to wear some dresses.
# two_prefix_prefix_good = Had Margaret
# two_prefix_prefix_bad = Margaret had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present727
1	Margaret	Margaret	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	longed	long	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	wear	wear	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	some	some	DET	DT	_	8	det	_	_
8	dresses	dress	NOUN	NNS	Number=Plur	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do these cashiers ever communicate?
# sentence_bad = These cashiers do ever communicate.
# two_prefix_prefix_good = Do these cashiers
# two_prefix_prefix_bad = These cashiers do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present728
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	cashiers	cashier	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	communicate	communicate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have the girls ever distracted Cindy?
# sentence_bad = The girls have ever distracted Cindy.
# two_prefix_prefix_good = Have the girls
# two_prefix_prefix_bad = The girls have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present729
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	girls	girl	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	distracted	distract	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Cindy	Cindy	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had some river ever condensed?
# sentence_bad = Some river had ever condensed.
# two_prefix_prefix_good = Had some river
# two_prefix_prefix_bad = Some river had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present730
1	Some	some	DET	DT	_	2	det	_	_
2	river	river	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	condensed	condense	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had the Clintons ever worked hard?
# sentence_bad = The Clintons had ever worked hard.
# two_prefix_prefix_good = Had the Clintons
# two_prefix_prefix_bad = The Clintons had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present731
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Clintons	Clinton	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	worked	work	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	hard	hard	ADV	RB	Degree=Pos	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Sonia ever walk through a college campus?
# sentence_bad = Sonia did ever walk through a college campus.
# two_prefix_prefix_good = Did Sonia
# two_prefix_prefix_bad = Sonia did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present732
1	Sonia	Sonia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	walk	walk	VERB	VB	VerbForm=Inf	0	root	_	_
5	through	through	ADP	IN	_	8	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	_	_
7	college	college	NOUN	NN	Number=Sing	8	compound	_	_
8	campus	campus	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Stacey ever concur?
# sentence_bad = Stacey can ever concur.
# two_prefix_prefix_good = Can Stacey
# two_prefix_prefix_bad = Stacey can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present733
1	Stacey	Stacey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	concur	concur	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Tara ever saluted?
# sentence_bad = Tara had ever saluted.
# two_prefix_prefix_good = Had Tara
# two_prefix_prefix_bad = Tara had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present734
1	Tara	Tara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	saluted	salute	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did that shirt ever exist?
# sentence_bad = That shirt did ever exist.
# two_prefix_prefix_good = Did that shirt
# two_prefix_prefix_bad = That shirt did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present735
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	shirt	shirt	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	exist	exist	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Alexander ever hugged Stacey?
# sentence_bad = Alexander had ever hugged Stacey.
# two_prefix_prefix_good = Had Alexander
# two_prefix_prefix_bad = Alexander had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present736
1	Alexander	Alexander	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hugged	hug	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Stacey	Stacey	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Beth ever hide?
# sentence_bad = Beth did ever hide.
# two_prefix_prefix_good = Did Beth
# two_prefix_prefix_bad = Beth did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present737
1	Beth	Beth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hide	hide	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the driver ever fallen asleep?
# sentence_bad = The driver had ever fallen asleep.
# two_prefix_prefix_good = Had the driver
# two_prefix_prefix_bad = The driver had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present738
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	driver	driver	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fallen	fall	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	asleep	asleep	ADV	RB	_	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did some river ever melt?
# sentence_bad = Some river did ever melt.
# two_prefix_prefix_good = Did some river
# two_prefix_prefix_bad = Some river did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present739
1	Some	some	DET	DT	_	2	det	_	_
2	river	river	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	melt	melt	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had teachers ever descended all steps?
# sentence_bad = Teachers had ever descended all steps.
# two_prefix_prefix_good = Had teachers
# two_prefix_prefix_bad = Teachers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present740
1	Teachers	teacher	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	descended	descend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	all	all	DET	DT	_	6	det	_	_
6	steps	step	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had those cups ever cracked?
# sentence_bad = Those cups had ever cracked.
# two_prefix_prefix_good = Had those cups
# two_prefix_prefix_bad = Those cups had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present741
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	cups	cup	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cracked	crack	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will the hats ever soak?
# sentence_bad = The hats will ever soak.
# two_prefix_prefix_good = Will the hats
# two_prefix_prefix_bad = The hats will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present742
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	hats	hat	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	soak	soak	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will Mary ever upset Margaret?
# sentence_bad = Mary will ever upset Margaret.
# two_prefix_prefix_good = Will Mary
# two_prefix_prefix_bad = Mary will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present743
1	Mary	Mary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	upset	upset	VERB	VB	VerbForm=Inf	0	root	_	_
5	Margaret	Margaret	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Andrew ever donated?
# sentence_bad = Andrew had ever donated.
# two_prefix_prefix_good = Had Andrew
# two_prefix_prefix_bad = Andrew had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present744
1	Andrew	Andrew	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	donated	donate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Brenda ever hate Christopher?
# sentence_bad = Brenda will ever hate Christopher.
# two_prefix_prefix_good = Will Brenda
# two_prefix_prefix_bad = Brenda will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present745
1	Brenda	Brenda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hate	hate	VERB	VB	VerbForm=Inf	0	root	_	_
5	Christopher	Christopher	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can these people ever concur?
# sentence_bad = These people can ever concur.
# two_prefix_prefix_good = Can these people
# two_prefix_prefix_bad = These people can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present746
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	people	people	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	concur	concur	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Sonia ever hidden away?
# sentence_bad = Sonia has ever hidden away.
# two_prefix_prefix_good = Has Sonia
# two_prefix_prefix_bad = Sonia has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present747
1	Sonia	Sonia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hidden	hide	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	away	away	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Gina ever played?
# sentence_bad = Gina has ever played.
# two_prefix_prefix_good = Has Gina
# two_prefix_prefix_bad = Gina has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present748
1	Gina	Gina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	played	play	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has that person ever listened to Anna?
# sentence_bad = That person has ever listened to Anna.
# two_prefix_prefix_good = Has that person
# two_prefix_prefix_bad = That person has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present749
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	person	person	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	listened	listen	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	Anna	Anna	PROPN	NNP	Number=Sing	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Dawn ever exit hills?
# sentence_bad = Dawn should ever exit hills.
# two_prefix_prefix_good = Should Dawn
# two_prefix_prefix_bad = Dawn should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present750
1	Dawn	Dawn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	exit	exit	VERB	VB	VerbForm=Inf	0	root	_	_
5	hills	hill	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do the legislatures ever reveal who force Daniel to study?
# sentence_bad = The legislatures do ever reveal who force Daniel to study.
# two_prefix_prefix_good = Do the legislatures
# two_prefix_prefix_bad = The legislatures do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present751
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	legislatures	legislature	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reveal	reveal	VERB	VB	VerbForm=Inf	0	root	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	force	force	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	Daniel	Daniel	PROPN	NNP	Number=Sing	7	obj	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	study	study	VERB	VB	VerbForm=Inf	7	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Keith ever explained every plane was accelerating?
# sentence_bad = Keith has ever explained every plane was accelerating.
# two_prefix_prefix_good = Has Keith
# two_prefix_prefix_bad = Keith has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present752
1	Keith	Keith	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	explained	explain	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	plane	plane	NOUN	NN	Number=Sing	8	nsubj	_	_
7	was	be	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
8	accelerating	accelerate	VERB	VBG	Tense=Pres|VerbForm=Part	4	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Alan ever litter?
# sentence_bad = Alan might ever litter.
# two_prefix_prefix_good = Might Alan
# two_prefix_prefix_bad = Alan might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present753
1	Alan	Alan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	litter	litter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can unicycles ever chip?
# sentence_bad = Unicycles can ever chip.
# two_prefix_prefix_good = Can unicycles
# two_prefix_prefix_bad = Unicycles can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present754
1	Unicycles	unicycle	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	chip	chip	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Gregory ever wish to confuse that boy?
# sentence_bad = Gregory could ever wish to confuse that boy.
# two_prefix_prefix_good = Could Gregory
# two_prefix_prefix_bad = Gregory could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present755
1	Gregory	Gregory	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wish	wish	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	confuse	confuse	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	that	that	DET	DT	Number=Sing|PronType=Dem	8	det	_	_
8	boy	boy	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Heidi ever known an actor?
# sentence_bad = Heidi had ever known an actor.
# two_prefix_prefix_good = Had Heidi
# two_prefix_prefix_bad = Heidi had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present756
1	Heidi	Heidi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	known	know	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	an	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	actor	actor	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should these men ever reveal this child?
# sentence_bad = These men should ever reveal this child.
# two_prefix_prefix_good = Should these men
# two_prefix_prefix_bad = These men should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present757
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	men	man	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	reveal	reveal	VERB	VB	VerbForm=Inf	0	root	_	_
6	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	child	child	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will this legislature ever boast?
# sentence_bad = This legislature will ever boast.
# two_prefix_prefix_good = Will this legislature
# two_prefix_prefix_bad = This legislature will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present758
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	legislature	legislature	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	boast	boast	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Tamara ever entice Debra to go fishing?
# sentence_bad = Tamara could ever entice Debra to go fishing.
# two_prefix_prefix_good = Could Tamara
# two_prefix_prefix_bad = Tamara could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present759
1	Tamara	Tamara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	entice	entice	VERB	VB	VerbForm=Inf	0	root	_	_
5	Debra	Debra	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	go	go	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	fishing	fish	VERB	VBG	VerbForm=Ger	7	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Becky ever ascertained Helen to drop by Harvard University?
# sentence_bad = Becky had ever ascertained Helen to drop by Harvard University.
# two_prefix_prefix_good = Had Becky
# two_prefix_prefix_bad = Becky had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present760
1	Becky	Becky	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	ascertained	ascertain	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Helen	Helen	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	drop	drop	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	by	by	ADP	IN	_	10	case	_	_
9	Harvard	Harvard	PROPN	NNP	Number=Sing	10	compound	_	_
10	University	University	PROPN	NNP	Number=Sing	7	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Lucille ever looked to hunt?
# sentence_bad = Lucille had ever looked to hunt.
# two_prefix_prefix_good = Had Lucille
# two_prefix_prefix_bad = Lucille had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present761
1	Lucille	Lucille	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	looked	look	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	hunt	hunt	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the ladies ever revealed that plate?
# sentence_bad = The ladies had ever revealed that plate.
# two_prefix_prefix_good = Had the ladies
# two_prefix_prefix_bad = The ladies had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present762
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	ladies	lady	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	revealed	reveal	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	that	that	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	plate	plate	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Jill ever imagine Tamara won't encourage Alan's father to get fired?
# sentence_bad = Jill might ever imagine Tamara won't encourage Alan's father to get fired.
# two_prefix_prefix_good = Might Jill
# two_prefix_prefix_bad = Jill might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present763
1	Jill	Jill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tamara	Tamara	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	encourage	encourage	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9-10	Alan's	_	_	_	_	_	_	_	_
9	Alan	Alan	PROPN	NNP	Number=Sing	11	nmod:poss	_	_
10	's	's	PART	POS	_	9	case	_	_
11	father	father	NOUN	NN	Number=Sing	8	obj	_	_
12	to	to	PART	TO	_	14	mark	_	_
13	get	get	AUX	VB	VerbForm=Inf	14	aux:pass	_	_
14	fired	fire	VERB	VBN	Tense=Past|VerbForm=Part|Voice=Pass	8	xcomp	_	SpaceAfter=No
15	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Paula ever escape?
# sentence_bad = Paula could ever escape.
# two_prefix_prefix_good = Could Paula
# two_prefix_prefix_bad = Paula could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present764
1	Paula	Paula	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escape	escape	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had those windows ever tipped over?
# sentence_bad = Those windows had ever tipped over.
# two_prefix_prefix_good = Had those windows
# two_prefix_prefix_bad = Those windows had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present765
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	windows	window	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	tipped	tip	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	over	over	ADV	RB	_	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has this rice ever upset Nicole?
# sentence_bad = This rice has ever upset Nicole.
# two_prefix_prefix_good = Has this rice
# two_prefix_prefix_bad = This rice has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present766
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	rice	rice	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	upset	upse	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Nicole	Nicole	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did this documentary ever worry Travis?
# sentence_bad = This documentary did ever worry Travis.
# two_prefix_prefix_good = Did this documentary
# two_prefix_prefix_bad = This documentary did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present767
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	documentary	documentary	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	worry	worry	VERB	VB	VerbForm=Inf	0	root	_	_
6	Travis	Travis	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Julia ever smile?
# sentence_bad = Julia can ever smile.
# two_prefix_prefix_good = Can Julia
# two_prefix_prefix_bad = Julia can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present768
1	Julia	Julia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	smile	smile	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Sally ever disturb that lady?
# sentence_bad = Sally could ever disturb that lady.
# two_prefix_prefix_good = Could Sally
# two_prefix_prefix_bad = Sally could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present769
1	Sally	Sally	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disturb	disturb	VERB	VB	VerbForm=Inf	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	lady	lady	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Lucille ever wept?
# sentence_bad = Lucille had ever wept.
# two_prefix_prefix_good = Had Lucille
# two_prefix_prefix_bad = Lucille had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present770
1	Lucille	Lucille	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wept	weep	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Elaine ever blinked?
# sentence_bad = Elaine has ever blinked.
# two_prefix_prefix_good = Has Elaine
# two_prefix_prefix_bad = Elaine has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present771
1	Elaine	Elaine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	blinked	blink	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Lissa ever broken some skateboards?
# sentence_bad = Lissa had ever broken some skateboards.
# two_prefix_prefix_good = Had Lissa
# two_prefix_prefix_bad = Lissa had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present772
1	Lissa	Lissa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	broken	break	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	skateboards	skateboard	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had these skirts ever frayed?
# sentence_bad = These skirts had ever frayed.
# two_prefix_prefix_good = Had these skirts
# two_prefix_prefix_bad = These skirts had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present773
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	skirts	skirt	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	frayed	fray	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Wayne ever bother to sneeze?
# sentence_bad = Wayne should ever bother to sneeze.
# two_prefix_prefix_good = Should Wayne
# two_prefix_prefix_bad = Wayne should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present774
1	Wayne	Wayne	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bother	bother	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	sneeze	sneeze	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has this man ever respected a lot of rivers?
# sentence_bad = This man has ever respected a lot of rivers.
# two_prefix_prefix_good = Has this man
# two_prefix_prefix_bad = This man has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present775
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	respected	respect	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	lot	lot	NOUN	NN	Number=Sing	5	obj	_	_
8	of	of	ADP	IN	_	9	case	_	_
9	rivers	river	NOUN	NNS	Number=Plur	7	nmod	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has every man ever bothered to listen to Lisa?
# sentence_bad = Every man has ever bothered to listen to Lisa.
# two_prefix_prefix_good = Has every man
# two_prefix_prefix_bad = Every man has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present776
1	Every	every	DET	DT	_	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	listen	listen	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	Lisa	Lisa	PROPN	NNP	Number=Sing	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Robert ever ascended every slope?
# sentence_bad = Robert had ever ascended every slope.
# two_prefix_prefix_good = Had Robert
# two_prefix_prefix_bad = Robert had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present777
1	Robert	Robert	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	ascended	ascend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	slope	slope	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Tiffany ever scream?
# sentence_bad = Tiffany can ever scream.
# two_prefix_prefix_good = Can Tiffany
# two_prefix_prefix_bad = Tiffany can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present778
1	Tiffany	Tiffany	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	scream	scream	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Beth ever persuaded Judy to learn?
# sentence_bad = Beth has ever persuaded Judy to learn.
# two_prefix_prefix_good = Has Beth
# two_prefix_prefix_bad = Beth has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present779
1	Beth	Beth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	persuaded	persuade	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Judy	Judy	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	learn	learn	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have these bikes ever cracked?
# sentence_bad = These bikes have ever cracked.
# two_prefix_prefix_good = Have these bikes
# two_prefix_prefix_bad = These bikes have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present780
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	bikes	bike	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cracked	crack	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Beverly ever healed Eric?
# sentence_bad = Beverly has ever healed Eric.
# two_prefix_prefix_good = Has Beverly
# two_prefix_prefix_bad = Beverly has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present781
1	Beverly	Beverly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	healed	heal	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Eric	Eric	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Stacy ever disappear?
# sentence_bad = Stacy could ever disappear.
# two_prefix_prefix_good = Could Stacy
# two_prefix_prefix_bad = Stacy could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present782
1	Stacy	Stacy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disappear	disappear	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Travis ever dare some teacher to arrive at every cafe?
# sentence_bad = Travis should ever dare some teacher to arrive at every cafe.
# two_prefix_prefix_good = Should Travis
# two_prefix_prefix_bad = Travis should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present783
1	Travis	Travis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dare	dare	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	teacher	teacher	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	arrive	arrive	VERB	VB	VerbForm=Inf	4	xcomp	_	_
9	at	at	ADP	IN	_	11	case	_	_
10	every	every	DET	DT	_	11	det	_	_
11	cafe	cafe	NOUN	NN	Number=Sing	8	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Jodi ever talk?
# sentence_bad = Jodi should ever talk.
# two_prefix_prefix_good = Should Jodi
# two_prefix_prefix_bad = Jodi should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present784
1	Jodi	Jodi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	talk	talk	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Martha ever joked around?
# sentence_bad = Martha had ever joked around.
# two_prefix_prefix_good = Had Martha
# two_prefix_prefix_bad = Martha had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present785
1	Martha	Martha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	joked	joke	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Randolf ever flee from Anna?
# sentence_bad = Randolf can ever flee from Anna.
# two_prefix_prefix_good = Can Randolf
# two_prefix_prefix_bad = Randolf can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present786
1	Randolf	Randolf	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	flee	flee	VERB	VB	VerbForm=Inf	0	root	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	Anna	Anna	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Veronica ever heal Melissa?
# sentence_bad = Veronica can ever heal Melissa.
# two_prefix_prefix_good = Can Veronica
# two_prefix_prefix_bad = Veronica can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present787
1	Veronica	Veronica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	heal	heal	VERB	VB	VerbForm=Inf	0	root	_	_
5	Melissa	Melissa	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could these drivers ever retaliate?
# sentence_bad = These drivers could ever retaliate.
# two_prefix_prefix_good = Could these drivers
# two_prefix_prefix_bad = These drivers could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present788
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	drivers	driver	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	retaliate	retaliate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Andrea ever discover Margaret to forget Patricia?
# sentence_bad = Andrea might ever discover Margaret to forget Patricia.
# two_prefix_prefix_good = Might Andrea
# two_prefix_prefix_bad = Andrea might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present789
1	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discover	discover	VERB	VB	VerbForm=Inf	0	root	_	_
5	Margaret	Margaret	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	forget	forget	VERB	VB	VerbForm=Inf	4	advcl	_	_
8	Patricia	Patricia	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will a sweater ever fray?
# sentence_bad = A sweater will ever fray.
# two_prefix_prefix_good = Will a sweater
# two_prefix_prefix_bad = A sweater will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present790
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	sweater	sweater	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fray	fray	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Melissa ever implored these offspring to distract Donald?
# sentence_bad = Melissa has ever implored these offspring to distract Donald.
# two_prefix_prefix_good = Has Melissa
# two_prefix_prefix_bad = Melissa has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present791
1	Melissa	Melissa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	implored	implore	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	these	this	DET	DT	Number=Plur|PronType=Dem	6	det	_	_
6	offspring	offspring	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	distract	distract	VERB	VB	VerbForm=Inf	4	xcomp	_	_
9	Donald	Donald	PROPN	NNP	Number=Sing	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Sherry ever dropped by all public parks?
# sentence_bad = Sherry had ever dropped by all public parks.
# two_prefix_prefix_good = Had Sherry
# two_prefix_prefix_bad = Sherry had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present792
1	Sherry	Sherry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dropped	drop	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	by	by	ADP	IN	_	8	case	_	_
6	all	all	DET	DT	_	8	det	_	_
7	public	public	ADJ	JJ	Degree=Pos	8	amod	_	_
8	parks	park	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have a lot of hats ever looked like every photograph?
# sentence_bad = A lot of hats have ever looked like every photograph.
# two_prefix_prefix_good = Have a lot of hats
# two_prefix_prefix_bad = A lot of hats have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present793
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	hats	hat	NOUN	NNS	Number=Plur	2	nmod	_	_
5	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	looked	look	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8	like	like	ADP	IN	_	10	case	_	_
9	every	every	DET	DT	_	10	det	_	_
10	photograph	photograph	NOUN	NN	Number=Sing	7	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Could Walter ever press Katherine to depart?
# sentence_bad = Walter could ever press Katherine to depart.
# two_prefix_prefix_good = Could Walter
# two_prefix_prefix_bad = Walter could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present794
1	Walter	Walter	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	press	press	VERB	VB	VerbForm=Inf	0	root	_	_
5	Katherine	Katherine	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	depart	depart	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Gregory ever prevent the boy from speaking up?
# sentence_bad = Gregory could ever prevent the boy from speaking up.
# two_prefix_prefix_good = Could Gregory
# two_prefix_prefix_bad = Gregory could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present795
1	Gregory	Gregory	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prevent	prevent	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	boy	boy	NOUN	NN	Number=Sing	4	obj	_	_
7	from	from	SCONJ	IN	_	8	mark	_	_
8	speaking	speak	VERB	VBG	VerbForm=Ger	4	advcl	_	_
9	up	up	ADP	RP	_	8	compound:prt	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can this icicle ever freeze?
# sentence_bad = This icicle can ever freeze.
# two_prefix_prefix_good = Can this icicle
# two_prefix_prefix_bad = This icicle can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present796
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	icicle	icicle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	freeze	freeze	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Adam ever compel this child to break the mirror?
# sentence_bad = Adam can ever compel this child to break the mirror.
# two_prefix_prefix_good = Can Adam
# two_prefix_prefix_bad = Adam can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present797
1	Adam	Adam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compel	compel	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	child	child	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	break	break	VERB	VB	VerbForm=Inf	4	xcomp	_	_
9	the	the	DET	DT	Definite=Def|PronType=Art	10	det	_	_
10	mirror	mirror	NOUN	NN	Number=Sing	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Theodore ever observe Jacqueline?
# sentence_bad = Theodore did ever observe Jacqueline.
# two_prefix_prefix_good = Did Theodore
# two_prefix_prefix_bad = Theodore did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present798
1	Theodore	Theodore	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	observe	observe	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do these bicycles ever stop?
# sentence_bad = These bicycles do ever stop.
# two_prefix_prefix_good = Do these bicycles
# two_prefix_prefix_bad = These bicycles do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present799
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	bicycles	bicycle	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	stop	stop	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Stacy ever confused Kristin?
# sentence_bad = Stacy had ever confused Kristin.
# two_prefix_prefix_good = Had Stacy
# two_prefix_prefix_bad = Stacy had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present800
1	Stacy	Stacy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	confused	confuse	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Kristin	Kristin	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Caroline ever think Douglas hadn't shrugged?
# sentence_bad = Caroline did ever think Douglas hadn't shrugged.
# two_prefix_prefix_good = Did Caroline
# two_prefix_prefix_bad = Caroline did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present801
1	Caroline	Caroline	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Douglas	Douglas	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	hadn't	_	_	_	_	_	_	_	_
6	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	shrugged	shrug	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Edward ever hidden?
# sentence_bad = Edward has ever hidden.
# two_prefix_prefix_good = Has Edward
# two_prefix_prefix_bad = Edward has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present802
1	Edward	Edward	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hidden	hide	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Christina ever come here?
# sentence_bad = Christina will ever come here.
# two_prefix_prefix_good = Will Christina
# two_prefix_prefix_bad = Christina will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present803
1	Christina	Christina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	come	come	VERB	VB	VerbForm=Inf	0	root	_	_
5	here	here	ADV	RB	PronType=Dem	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some spotlight ever dimmed?
# sentence_bad = Some spotlight had ever dimmed.
# two_prefix_prefix_good = Had some spotlight
# two_prefix_prefix_bad = Some spotlight had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present804
1	Some	some	DET	DT	_	2	det	_	_
2	spotlight	spotlight	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	dimmed	dim	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Amanda ever dislike that documentary?
# sentence_bad = Amanda did ever dislike that documentary.
# two_prefix_prefix_good = Did Amanda
# two_prefix_prefix_bad = Amanda did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present805
1	Amanda	Amanda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dislike	dislike	VERB	VB	VerbForm=Inf	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	documentary	documentary	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the guest ever tried to astound Deborah?
# sentence_bad = The guest had ever tried to astound Deborah.
# two_prefix_prefix_good = Had the guest
# two_prefix_prefix_bad = The guest had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present806
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	guest	guest	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	tried	try	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	astound	astound	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	Deborah	Deborah	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would dancers ever heal Kayla?
# sentence_bad = Dancers would ever heal Kayla.
# two_prefix_prefix_good = Would dancers
# two_prefix_prefix_bad = Dancers would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present807
1	Dancers	dancer	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	heal	heal	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kayla	Kayla	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Kenneth ever mess up the hospital?
# sentence_bad = Kenneth might ever mess up the hospital.
# two_prefix_prefix_good = Might Kenneth
# two_prefix_prefix_bad = Kenneth might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present808
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	mess	mess	VERB	VB	VerbForm=Inf	0	root	_	_
5	up	up	ADP	RP	_	4	compound:prt	_	_
6	the	the	DET	DT	Definite=Def|PronType=Art	7	det	_	_
7	hospital	hospital	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would most sketches ever bother Heather?
# sentence_bad = Most sketches would ever bother Heather.
# two_prefix_prefix_good = Would most sketches
# two_prefix_prefix_bad = Most sketches would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present809
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	sketches	sketch	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bother	bother	VERB	VB	VerbForm=Inf	0	root	_	_
6	Heather	Heather	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Tonya ever sneeze?
# sentence_bad = Tonya can ever sneeze.
# two_prefix_prefix_good = Can Tonya
# two_prefix_prefix_bad = Tonya can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present810
1	Tonya	Tonya	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sneeze	sneeze	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Sarah ever gone fishing?
# sentence_bad = Sarah has ever gone fishing.
# two_prefix_prefix_good = Has Sarah
# two_prefix_prefix_bad = Sarah has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present811
1	Sarah	Sarah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	gone	go	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	fishing	fish	VERB	VBG	VerbForm=Ger	4	xcomp	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might April ever find Sandra?
# sentence_bad = April might ever find Sandra.
# two_prefix_prefix_good = Might April
# two_prefix_prefix_bad = April might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present812
1	April	April	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	find	find	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sandra	Sandra	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some icicles ever evaporated?
# sentence_bad = Some icicles had ever evaporated.
# two_prefix_prefix_good = Had some icicles
# two_prefix_prefix_bad = Some icicles had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present813
1	Some	some	DET	DT	_	2	det	_	_
2	icicles	icicle	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	evaporated	evaporate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has an actress ever talked?
# sentence_bad = An actress has ever talked.
# two_prefix_prefix_good = Has an actress
# two_prefix_prefix_bad = An actress has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present814
1	An	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	talked	talk	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Linda ever waste away?
# sentence_bad = Linda might ever waste away.
# two_prefix_prefix_good = Might Linda
# two_prefix_prefix_bad = Linda might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present815
1	Linda	Linda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	waste	waste	VERB	VB	VerbForm=Inf	0	root	_	_
5	away	away	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Barbara ever brought the shoe?
# sentence_bad = Barbara has ever brought the shoe.
# two_prefix_prefix_good = Has Barbara
# two_prefix_prefix_bad = Barbara has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present816
1	Barbara	Barbara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	brought	bring	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	shoe	shoe	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Christina ever figure out who has messed up some glasses?
# sentence_bad = Christina does ever figure out who has messed up some glasses.
# two_prefix_prefix_good = Does Christina
# two_prefix_prefix_bad = Christina does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present817
1	Christina	Christina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	figure	figure	VERB	VB	VerbForm=Inf	0	root	_	_
5	out	out	ADP	RP	_	4	compound:prt	_	_
6	who	who	PRON	WP	PronType=Int	8	nsubj	_	_
7	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
8	messed	mess	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
9	up	up	ADP	RP	_	8	compound:prt	_	_
10	some	some	DET	DT	_	11	det	_	_
11	glasses	glass	NOUN	NNS	Number=Plur	8	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the Clintons ever competed?
# sentence_bad = The Clintons had ever competed.
# two_prefix_prefix_good = Had the Clintons
# two_prefix_prefix_bad = The Clintons had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present818
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Clintons	Clinton	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	competed	compete	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has this photograph ever worried Regina?
# sentence_bad = This photograph has ever worried Regina.
# two_prefix_prefix_good = Has this photograph
# two_prefix_prefix_bad = This photograph has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present819
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	photograph	photograph	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	worried	worry	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Regina	Regina	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Rebecca ever want to wash?
# sentence_bad = Rebecca would ever want to wash.
# two_prefix_prefix_good = Would Rebecca
# two_prefix_prefix_bad = Rebecca would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present820
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	want	want	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	wash	wash	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Beth ever die?
# sentence_bad = Beth did ever die.
# two_prefix_prefix_good = Did Beth
# two_prefix_prefix_bad = Beth did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present821
1	Beth	Beth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	die	die	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Elizabeth ever motivated Julie to impress Timothy?
# sentence_bad = Elizabeth has ever motivated Julie to impress Timothy.
# two_prefix_prefix_good = Has Elizabeth
# two_prefix_prefix_bad = Elizabeth has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present822
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	motivated	motivate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Julie	Julie	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	impress	impress	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	Timothy	Timothy	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Stephen ever smiled?
# sentence_bad = Stephen had ever smiled.
# two_prefix_prefix_good = Had Stephen
# two_prefix_prefix_bad = Stephen had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present823
1	Stephen	Stephen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	smiled	smile	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Keith ever boasted about Nina?
# sentence_bad = Keith has ever boasted about Nina.
# two_prefix_prefix_good = Has Keith
# two_prefix_prefix_bad = Keith has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present824
1	Keith	Keith	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boasted	boast	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	Nina	Nina	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would doctors ever cook?
# sentence_bad = Doctors would ever cook.
# two_prefix_prefix_good = Would doctors
# two_prefix_prefix_bad = Doctors would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present825
1	Doctors	doctor	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cook	cook	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should all women ever insult Russell?
# sentence_bad = All women should ever insult Russell.
# two_prefix_prefix_good = Should all women
# two_prefix_prefix_bad = All women should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present826
1	All	all	DET	DT	_	2	det	_	_
2	women	woman	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	insult	insult	VERB	VB	VerbForm=Inf	0	root	_	_
6	Russell	Russell	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have most dresses ever crumpled?
# sentence_bad = Most dresses have ever crumpled.
# two_prefix_prefix_good = Have most dresses
# two_prefix_prefix_bad = Most dresses have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present827
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	dresses	dress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	crumpled	crumple	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Karla ever continued to argue?
# sentence_bad = Karla has ever continued to argue.
# two_prefix_prefix_good = Has Karla
# two_prefix_prefix_bad = Karla has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present828
1	Karla	Karla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	continued	continue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	argue	argue	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should Mitchell ever write?
# sentence_bad = Mitchell should ever write.
# two_prefix_prefix_good = Should Mitchell
# two_prefix_prefix_bad = Mitchell should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present829
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	write	write	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do a lot of children ever date?
# sentence_bad = A lot of children do ever date.
# two_prefix_prefix_good = Do a lot of children
# two_prefix_prefix_bad = A lot of children do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present830
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	children	child	NOUN	NNS	Number=Plur	2	nmod	_	_
5	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	date	date	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
8	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Has Jerry ever loved Carla?
# sentence_bad = Jerry has ever loved Carla.
# two_prefix_prefix_good = Has Jerry
# two_prefix_prefix_bad = Jerry has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present831
1	Jerry	Jerry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	loved	love	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Carla	Carla	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could the actress ever clean that art gallery?
# sentence_bad = The actress could ever clean that art gallery.
# two_prefix_prefix_good = Could the actress
# two_prefix_prefix_bad = The actress could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present832
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	clean	clean	VERB	VB	VerbForm=Inf	0	root	_	_
6	that	that	DET	DT	Number=Sing|PronType=Dem	8	det	_	_
7	art	art	NOUN	NN	Number=Sing	8	compound	_	_
8	gallery	gallery	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Noah ever coughed?
# sentence_bad = Noah had ever coughed.
# two_prefix_prefix_good = Had Noah
# two_prefix_prefix_bad = Noah had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present833
1	Noah	Noah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	coughed	cough	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Mitchell ever chuckled?
# sentence_bad = Mitchell had ever chuckled.
# two_prefix_prefix_good = Had Mitchell
# two_prefix_prefix_bad = Mitchell had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present834
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	chuckled	chuckle	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had this actress ever descended those stairs?
# sentence_bad = This actress had ever descended those stairs.
# two_prefix_prefix_good = Had this actress
# two_prefix_prefix_bad = This actress had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present835
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	descended	descend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	those	that	DET	DT	Number=Plur|PronType=Dem	7	det	_	_
7	stairs	stair	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Elizabeth ever sold this public park?
# sentence_bad = Elizabeth has ever sold this public park.
# two_prefix_prefix_good = Has Elizabeth
# two_prefix_prefix_bad = Elizabeth has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present836
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sold	sell	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
6	public	public	ADJ	JJ	Degree=Pos	7	amod	_	_
7	park	park	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the Lutherans ever collaborated?
# sentence_bad = The Lutherans had ever collaborated.
# two_prefix_prefix_good = Had the Lutherans
# two_prefix_prefix_bad = The Lutherans had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present837
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Lutherans	Lutheran	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	collaborated	collaborate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Do most guests ever react?
# sentence_bad = Most guests do ever react.
# two_prefix_prefix_good = Do most guests
# two_prefix_prefix_bad = Most guests do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present838
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	guests	guest	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	react	react	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had this hamster ever bothered Meredith?
# sentence_bad = This hamster had ever bothered Meredith.
# two_prefix_prefix_good = Had this hamster
# two_prefix_prefix_bad = This hamster had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present839
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	hamster	hamster	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Meredith	Meredith	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Paula ever intended to run around the mall?
# sentence_bad = Paula had ever intended to run around the mall.
# two_prefix_prefix_good = Had Paula
# two_prefix_prefix_bad = Paula had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present840
1	Paula	Paula	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	intended	intend	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	run	run	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	around	around	ADP	IN	_	9	case	_	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	_	_
9	mall	mall	NOUN	NN	Number=Sing	6	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Patricia ever doubt the lights darken?
# sentence_bad = Patricia does ever doubt the lights darken.
# two_prefix_prefix_good = Does Patricia
# two_prefix_prefix_bad = Patricia does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present841
1	Patricia	Patricia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	doubt	doubt	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	lights	light	NOUN	NNS	Number=Plur	7	nsubj	_	_
7	darken	darken	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Matt ever read?
# sentence_bad = Matt might ever read.
# two_prefix_prefix_good = Might Matt
# two_prefix_prefix_bad = Matt might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present842
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	read	read	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Donald ever sung?
# sentence_bad = Donald has ever sung.
# two_prefix_prefix_good = Has Donald
# two_prefix_prefix_bad = Donald has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present843
1	Donald	Donald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sung	sing	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could a doctor ever know what looks like drawings?
# sentence_bad = A doctor could ever know what looks like drawings.
# two_prefix_prefix_good = Could a doctor
# two_prefix_prefix_bad = A doctor could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present844
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	doctor	doctor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	know	know	VERB	VB	VerbForm=Inf	0	root	_	_
6	what	what	PRON	WP	PronType=Int	5	obj	_	_
7	looks	look	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	acl:relcl	_	_
8	like	like	ADP	IN	_	9	case	_	_
9	drawings	drawing	NOUN	NNS	Number=Plur	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Emily ever resembled a print?
# sentence_bad = Emily had ever resembled a print.
# two_prefix_prefix_good = Had Emily
# two_prefix_prefix_bad = Emily had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present845
1	Emily	Emily	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	resembled	resemble	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	print	print	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Amy ever happen to lie?
# sentence_bad = Amy can ever happen to lie.
# two_prefix_prefix_good = Can Amy
# two_prefix_prefix_bad = Amy can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present846
1	Amy	Amy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	happen	happen	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	lie	lie	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Tracy ever investigate some waitress?
# sentence_bad = Tracy will ever investigate some waitress.
# two_prefix_prefix_good = Will Tracy
# two_prefix_prefix_bad = Tracy will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present847
1	Tracy	Tracy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	investigate	investigate	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	waitress	waitress	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Kathleen ever investigate Julie?
# sentence_bad = Kathleen does ever investigate Julie.
# two_prefix_prefix_good = Does Kathleen
# two_prefix_prefix_bad = Kathleen does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present848
1	Kathleen	Kathleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	investigate	investigate	VERB	VB	VerbForm=Inf	0	root	_	_
5	Julie	Julie	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had many shoes ever crumpled?
# sentence_bad = Many shoes had ever crumpled.
# two_prefix_prefix_good = Had many shoes
# two_prefix_prefix_bad = Many shoes had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present849
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	shoes	shoe	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	crumpled	crumple	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Denise ever run around some libraries?
# sentence_bad = Denise has ever run around some libraries.
# two_prefix_prefix_good = Has Denise
# two_prefix_prefix_bad = Denise has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present850
1	Denise	Denise	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	run	run	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	around	around	ADP	IN	_	7	case	_	_
6	some	some	DET	DT	_	7	det	_	_
7	libraries	library	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should the waiter ever have that slope?
# sentence_bad = The waiter should ever have that slope.
# two_prefix_prefix_good = Should the waiter
# two_prefix_prefix_bad = The waiter should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present851
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	waiter	waiter	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	have	have	VERB	VB	VerbForm=Inf	0	root	_	_
6	that	that	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	slope	slope	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Vanessa ever prevented many customers from arguing about Thomas?
# sentence_bad = Vanessa has ever prevented many customers from arguing about Thomas.
# two_prefix_prefix_good = Has Vanessa
# two_prefix_prefix_bad = Vanessa has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present852
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prevented	prevent	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	many	many	ADJ	JJ	Degree=Pos	6	amod	_	_
6	customers	customer	NOUN	NNS	Number=Plur	4	obj	_	_
7	from	from	SCONJ	IN	_	8	mark	_	_
8	arguing	argue	VERB	VBG	VerbForm=Ger	4	advcl	_	_
9	about	about	ADP	IN	_	10	case	_	_
10	Thomas	Thomas	PROPN	NNP	Number=Sing	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has this legislature ever argued?
# sentence_bad = This legislature has ever argued.
# two_prefix_prefix_good = Has this legislature
# two_prefix_prefix_bad = This legislature has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present853
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	legislature	legislature	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	argued	argue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should every man ever fall?
# sentence_bad = Every man should ever fall.
# two_prefix_prefix_good = Should every man
# two_prefix_prefix_bad = Every man should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present854
1	Every	every	DET	DT	_	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Jeffrey ever boast about John?
# sentence_bad = Jeffrey would ever boast about John.
# two_prefix_prefix_good = Would Jeffrey
# two_prefix_prefix_bad = Jeffrey would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present855
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boast	boast	VERB	VB	VerbForm=Inf	0	root	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	John	John	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can the popsicle ever evaporate?
# sentence_bad = The popsicle can ever evaporate.
# two_prefix_prefix_good = Can the popsicle
# two_prefix_prefix_bad = The popsicle can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present856
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	popsicle	popsicle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	evaporate	evaporate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Tamara ever murmured?
# sentence_bad = Tamara has ever murmured.
# two_prefix_prefix_good = Has Tamara
# two_prefix_prefix_bad = Tamara has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present857
1	Tamara	Tamara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	murmured	murmur	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might every patient ever want April to drive to this lake?
# sentence_bad = Every patient might ever want April to drive to this lake.
# two_prefix_prefix_good = Might every patient
# two_prefix_prefix_bad = Every patient might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present858
1	Every	every	DET	DT	_	2	det	_	_
2	patient	patient	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	want	want	VERB	VB	VerbForm=Inf	0	root	_	_
6	April	April	PROPN	NNP	Number=Sing	5	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	drive	drive	VERB	VB	VerbForm=Inf	5	xcomp	_	_
9	to	to	ADP	IN	_	11	case	_	_
10	this	this	DET	DT	Number=Sing|PronType=Dem	11	det	_	_
11	lake	lake	NOUN	NN	Number=Sing	8	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had the Borgias ever bothered every dancer?
# sentence_bad = The Borgias had ever bothered every dancer.
# two_prefix_prefix_good = Had the Borgias
# two_prefix_prefix_bad = The Borgias had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present859
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Borgias	Borgia	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	every	every	DET	DT	_	7	det	_	_
7	dancer	dancer	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will these eggplants ever shock Teresa?
# sentence_bad = These eggplants will ever shock Teresa.
# two_prefix_prefix_good = Will these eggplants
# two_prefix_prefix_bad = These eggplants will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present860
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	eggplants	eggplant	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shock	shock	VERB	VB	VerbForm=Inf	0	root	_	_
6	Teresa	Teresa	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had a plate ever shattered?
# sentence_bad = A plate had ever shattered.
# two_prefix_prefix_good = Had a plate
# two_prefix_prefix_bad = A plate had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present861
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	plate	plate	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shattered	shatter	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Dennis ever figured out what condense?
# sentence_bad = Dennis has ever figured out what condense.
# two_prefix_prefix_good = Has Dennis
# two_prefix_prefix_bad = Dennis has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present862
1	Dennis	Dennis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	figured	figure	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	out	out	ADP	RP	_	4	compound:prt	_	_
6	what	what	DET	WDT	PronType=Int	7	det	_	_
7	condense	condense	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might this rabbit ever wake up?
# sentence_bad = This rabbit might ever wake up.
# two_prefix_prefix_good = Might this rabbit
# two_prefix_prefix_bad = This rabbit might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present863
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	rabbit	rabbit	NOUN	NN	Number=Sing	5	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	wake	wake	VERB	VB	VerbForm=Inf	0	root	_	_
6	up	up	ADP	RP	_	5	compound:prt	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Debra ever thought about who remembers a lot of lakes?
# sentence_bad = Debra had ever thought about who remembers a lot of lakes.
# two_prefix_prefix_good = Had Debra
# two_prefix_prefix_bad = Debra had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present864
1	Debra	Debra	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	thought	think	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	about	about	SCONJ	IN	_	7	mark	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	advcl	_	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	_	_
9	lot	lot	NOUN	NN	Number=Sing	7	obj	_	_
10	of	of	ADP	IN	_	11	case	_	_
11	lakes	lake	NOUN	NNS	Number=Plur	9	nmod	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Clyde ever longed to weep?
# sentence_bad = Clyde has ever longed to weep.
# two_prefix_prefix_good = Has Clyde
# two_prefix_prefix_bad = Clyde has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present865
1	Clyde	Clyde	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	longed	long	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	weep	weep	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does some teacher ever scream?
# sentence_bad = Some teacher does ever scream.
# two_prefix_prefix_good = Does some teacher
# two_prefix_prefix_bad = Some teacher does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present866
1	Some	some	DET	DT	_	2	det	_	_
2	teacher	teacher	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	scream	scream	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Rachelle ever forgotten about who remembers Colleen?
# sentence_bad = Rachelle had ever forgotten about who remembers Colleen.
# two_prefix_prefix_good = Had Rachelle
# two_prefix_prefix_bad = Rachelle had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present867
1	Rachelle	Rachelle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	forgotten	forget	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	about	about	SCONJ	IN	_	7	mark	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	advcl	_	_
8	Colleen	Colleen	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has some glacier ever frozen?
# sentence_bad = Some glacier has ever frozen.
# two_prefix_prefix_good = Has some glacier
# two_prefix_prefix_bad = Some glacier has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present868
1	Some	some	DET	DT	_	2	det	_	_
2	glacier	glacier	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	frozen	freeze	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Sheila ever disturbed every senator?
# sentence_bad = Sheila has ever disturbed every senator.
# two_prefix_prefix_good = Has Sheila
# two_prefix_prefix_bad = Sheila has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present869
1	Sheila	Sheila	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	disturbed	disturb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	senator	senator	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Samantha ever play?
# sentence_bad = Samantha does ever play.
# two_prefix_prefix_good = Does Samantha
# two_prefix_prefix_bad = Samantha does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present870
1	Samantha	Samantha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	play	play	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did cars ever slip?
# sentence_bad = Cars did ever slip.
# two_prefix_prefix_good = Did cars
# two_prefix_prefix_bad = Cars did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present871
1	Cars	car	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	slip	slip	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Julia ever skated around a glacier?
# sentence_bad = Julia has ever skated around a glacier.
# two_prefix_prefix_good = Has Julia
# two_prefix_prefix_bad = Julia has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present872
1	Julia	Julia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	skated	skate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	around	around	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	glacier	glacier	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can this lake ever freeze?
# sentence_bad = This lake can ever freeze.
# two_prefix_prefix_good = Can this lake
# two_prefix_prefix_bad = This lake can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present873
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	lake	lake	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	freeze	freeze	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Suzanne ever cough?
# sentence_bad = Suzanne should ever cough.
# two_prefix_prefix_good = Should Suzanne
# two_prefix_prefix_bad = Suzanne should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present874
1	Suzanne	Suzanne	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cough	cough	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Andrea ever learned who hasn't hated Noah?
# sentence_bad = Andrea has ever learned who hasn't hated Noah.
# two_prefix_prefix_good = Has Andrea
# two_prefix_prefix_bad = Andrea has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present875
1	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	learned	learn	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	who	who	PRON	WP	PronType=Int	8	nsubj	_	_
6-7	hasn't	_	_	_	_	_	_	_	_
6	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	hated	hate	VERB	VBN	Tense=Past|VerbForm=Part	4	ccomp	_	_
9	Noah	Noah	PROPN	NNP	Number=Sing	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Daniel ever needed Rachelle to chuckle?
# sentence_bad = Daniel has ever needed Rachelle to chuckle.
# two_prefix_prefix_good = Has Daniel
# two_prefix_prefix_bad = Daniel has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present876
1	Daniel	Daniel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	needed	need	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Rachelle	Rachelle	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	chuckle	chuckle	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Peter ever washed?
# sentence_bad = Peter had ever washed.
# two_prefix_prefix_good = Had Peter
# two_prefix_prefix_bad = Peter had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present877
1	Peter	Peter	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	washed	wash	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Benjamin ever prompt Carrie to upset Suzanne?
# sentence_bad = Benjamin would ever prompt Carrie to upset Suzanne.
# two_prefix_prefix_good = Would Benjamin
# two_prefix_prefix_bad = Benjamin would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present878
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prompt	prompt	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carrie	Carrie	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	upset	upset	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	Suzanne	Suzanne	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has every woman ever climbed up some ladders?
# sentence_bad = Every woman has ever climbed up some ladders.
# two_prefix_prefix_good = Has every woman
# two_prefix_prefix_bad = Every woman has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present879
1	Every	every	DET	DT	_	2	det	_	_
2	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	climbed	climb	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	up	up	ADP	RP	_	5	compound:prt	_	_
7	some	some	DET	DT	_	8	det	_	_
8	ladders	ladder	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can Lucille ever drop by movie theaters?
# sentence_bad = Lucille can ever drop by movie theaters.
# two_prefix_prefix_good = Can Lucille
# two_prefix_prefix_bad = Lucille can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present880
1	Lucille	Lucille	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	drop	drop	VERB	VB	VerbForm=Inf	0	root	_	_
5	by	by	ADP	IN	_	7	case	_	_
6	movie	movie	NOUN	NN	Number=Sing	7	compound	_	_
7	theaters	theater	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had some actor ever loved Monet?
# sentence_bad = Some actor had ever loved Monet.
# two_prefix_prefix_good = Had some actor
# two_prefix_prefix_bad = Some actor had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present881
1	Some	some	DET	DT	_	2	det	_	_
2	actor	actor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	loved	love	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Monet	Monet	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will those doctors ever go to every restaurant?
# sentence_bad = Those doctors will ever go to every restaurant.
# two_prefix_prefix_good = Will those doctors
# two_prefix_prefix_bad = Those doctors will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present882
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	doctors	doctor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	go	go	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	ADP	IN	_	8	case	_	_
7	every	every	DET	DT	_	8	det	_	_
8	restaurant	restaurant	NOUN	NN	Number=Sing	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had many waiters ever worked hard?
# sentence_bad = Many waiters had ever worked hard.
# two_prefix_prefix_good = Had many waiters
# two_prefix_prefix_bad = Many waiters had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present883
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	waiters	waiter	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	worked	work	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	hard	hard	ADV	RB	Degree=Pos	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Connie ever prevented that fish from falling?
# sentence_bad = Connie had ever prevented that fish from falling.
# two_prefix_prefix_good = Had Connie
# two_prefix_prefix_bad = Connie had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present884
1	Connie	Connie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prevented	prevent	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	fish	fish	NOUN	NN	Number=Sing	4	obj	_	_
7	from	from	SCONJ	IN	_	8	mark	_	_
8	falling	fall	VERB	VBG	VerbForm=Ger	4	advcl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Sara ever smile?
# sentence_bad = Sara can ever smile.
# two_prefix_prefix_good = Can Sara
# two_prefix_prefix_bad = Sara can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present885
1	Sara	Sara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	smile	smile	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Craig ever managed to blink?
# sentence_bad = Craig has ever managed to blink.
# two_prefix_prefix_good = Has Craig
# two_prefix_prefix_bad = Craig has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present886
1	Craig	Craig	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	managed	manage	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	blink	blink	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Ronald ever explored most cafes?
# sentence_bad = Ronald has ever explored most cafes.
# two_prefix_prefix_good = Has Ronald
# two_prefix_prefix_bad = Ronald has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present887
1	Ronald	Ronald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	explored	explore	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	cafes	cafe	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had this hospital ever found out who hasn't shrugged?
# sentence_bad = This hospital had ever found out who hasn't shrugged.
# two_prefix_prefix_good = Had this hospital
# two_prefix_prefix_bad = This hospital had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present888
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	hospital	hospital	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	found	find	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	out	out	ADP	RP	_	5	compound:prt	_	_
7	who	who	PRON	WP	PronType=Int	10	nsubj	_	_
8-9	hasn't	_	_	_	_	_	_	_	_
8	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	shrugged	shrug	VERB	VBN	Tense=Past|VerbForm=Part	5	ccomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had every pedestrian ever obligated most cashiers to embrace?
# sentence_bad = Every pedestrian had ever obligated most cashiers to embrace.
# two_prefix_prefix_good = Had every pedestrian
# two_prefix_prefix_bad = Every pedestrian had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present889
1	Every	every	DET	DT	_	2	det	_	_
2	pedestrian	pedestrian	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	obligated	obligate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	most	most	ADJ	JJS	Degree=Sup	7	amod	_	_
7	cashiers	cashier	NOUN	NNS	Number=Plur	5	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	embrace	embrace	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Do some scarves ever look like a sketch?
# sentence_bad = Some scarves do ever look like a sketch.
# two_prefix_prefix_good = Do some scarves
# two_prefix_prefix_bad = Some scarves do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present890
1	Some	some	DET	DT	_	2	det	_	_
2	scarves	scarve	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	look	look	VERB	VB	VerbForm=Inf	0	root	_	_
6	like	like	ADP	IN	_	8	case	_	_
7	a	a	DET	DT	Definite=Ind|PronType=Art	8	det	_	_
8	sketch	sketch	NOUN	NN	Number=Sing	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Carol ever convinced Suzanne's electrician to cook?
# sentence_bad = Carol had ever convinced Suzanne's electrician to cook.
# two_prefix_prefix_good = Had Carol
# two_prefix_prefix_bad = Carol had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present891
1	Carol	Carol	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	convinced	convince	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5-6	Suzanne's	_	_	_	_	_	_	_	_
5	Suzanne	Suzanne	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	electrician	electrician	NOUN	NN	Number=Sing	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	cook	cook	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Monet ever found cats?
# sentence_bad = Monet has ever found cats.
# two_prefix_prefix_good = Has Monet
# two_prefix_prefix_bad = Monet has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present892
1	Monet	Monet	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	found	find	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	cats	cat	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had these hills ever fallen?
# sentence_bad = These hills had ever fallen.
# two_prefix_prefix_good = Had these hills
# two_prefix_prefix_bad = These hills had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present893
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	hills	hill	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fallen	fall	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would these guests ever divorce?
# sentence_bad = These guests would ever divorce.
# two_prefix_prefix_good = Would these guests
# two_prefix_prefix_bad = These guests would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present894
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	guests	guest	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	divorce	divorce	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can those waitresses ever correspond?
# sentence_bad = Those waitresses can ever correspond.
# two_prefix_prefix_good = Can those waitresses
# two_prefix_prefix_bad = Those waitresses can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present895
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	waitresses	waitress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	correspond	correspond	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Raymond ever discover Heidi?
# sentence_bad = Raymond did ever discover Heidi.
# two_prefix_prefix_good = Did Raymond
# two_prefix_prefix_bad = Raymond did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present896
1	Raymond	Raymond	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	discover	discover	VERB	VB	VerbForm=Inf	0	root	_	_
5	Heidi	Heidi	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Stephen ever nod?
# sentence_bad = Stephen does ever nod.
# two_prefix_prefix_good = Does Stephen
# two_prefix_prefix_bad = Stephen does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present897
1	Stephen	Stephen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	nod	nod	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Tanya ever compel Danielle to confuse Pamela?
# sentence_bad = Tanya might ever compel Danielle to confuse Pamela.
# two_prefix_prefix_good = Might Tanya
# two_prefix_prefix_bad = Tanya might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present898
1	Tanya	Tanya	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	compel	compel	VERB	VB	VerbForm=Inf	0	root	_	_
5	Danielle	Danielle	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	confuse	confuse	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	Pamela	Pamela	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can a boy ever wonder who said some banks encourage Bruce to stun Peter?
# sentence_bad = A boy can ever wonder who said some banks encourage Bruce to stun Peter.
# two_prefix_prefix_good = Can a boy
# two_prefix_prefix_bad = A boy can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present899
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	wonder	wonder	VERB	VB	VerbForm=Inf	0	root	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	said	say	VERB	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	ccomp	_	_
8	some	some	DET	DT	_	9	det	_	_
9	banks	bank	NOUN	NNS	Number=Plur	10	nsubj	_	_
10	encourage	encourage	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	7	ccomp	_	_
11	Bruce	Bruce	PROPN	NNP	Number=Sing	10	obj	_	_
12	to	to	PART	TO	_	13	mark	_	_
13	stun	stun	VERB	VB	VerbForm=Inf	10	xcomp	_	_
14	Peter	Peter	PROPN	NNP	Number=Sing	13	obj	_	SpaceAfter=No
15	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Erin ever waste away?
# sentence_bad = Erin did ever waste away.
# two_prefix_prefix_good = Did Erin
# two_prefix_prefix_bad = Erin did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present900
1	Erin	Erin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	waste	waste	VERB	VB	VerbForm=Inf	0	root	_	_
5	away	away	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Sherry ever prefer this coat to tighten?
# sentence_bad = Sherry could ever prefer this coat to tighten.
# two_prefix_prefix_good = Could Sherry
# two_prefix_prefix_bad = Sherry could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present901
1	Sherry	Sherry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prefer	prefer	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	coat	coat	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	tighten	tighten	VERB	VB	VerbForm=Inf	4	advcl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Stacey ever gone to Harvard University?
# sentence_bad = Stacey has ever gone to Harvard University.
# two_prefix_prefix_good = Has Stacey
# two_prefix_prefix_bad = Stacey has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present902
1	Stacey	Stacey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	gone	go	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	ADP	IN	_	7	case	_	_
6	Harvard	Harvard	PROPN	NNP	Number=Sing	7	compound	_	_
7	University	University	PROPN	NNP	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can Derek ever dare Tanya's oncologists to bring most forks?
# sentence_bad = Derek can ever dare Tanya's oncologists to bring most forks.
# two_prefix_prefix_good = Can Derek
# two_prefix_prefix_bad = Derek can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present903
1	Derek	Derek	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dare	dare	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Tanya's	_	_	_	_	_	_	_	_
5	Tanya	Tanya	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	oncologists	oncologist	NOUN	NNS	Number=Plur	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	bring	bring	VERB	VB	VerbForm=Inf	4	advcl	_	_
10	most	most	ADJ	JJS	Degree=Sup	11	amod	_	_
11	forks	fork	NOUN	NNS	Number=Plur	9	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Richard ever prompt Bruce's wife to compromise?
# sentence_bad = Richard might ever prompt Bruce's wife to compromise.
# two_prefix_prefix_good = Might Richard
# two_prefix_prefix_bad = Richard might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present904
1	Richard	Richard	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prompt	prompt	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Bruce's	_	_	_	_	_	_	_	_
5	Bruce	Bruce	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	wife	wife	NOUN	NN	Number=Sing	4	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	compromise	compromise	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Christina ever prevent Rachel from buying some turtles?
# sentence_bad = Christina could ever prevent Rachel from buying some turtles.
# two_prefix_prefix_good = Could Christina
# two_prefix_prefix_bad = Christina could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present905
1	Christina	Christina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	prevent	prevent	VERB	VB	VerbForm=Inf	0	root	_	_
5	Rachel	Rachel	PROPN	NNP	Number=Sing	4	obj	_	_
6	from	from	SCONJ	IN	_	7	mark	_	_
7	buying	buy	VERB	VBG	VerbForm=Ger	4	advcl	_	_
8	some	some	DET	DT	_	9	det	_	_
9	turtles	turtle	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could every lady ever flee from the waitresses?
# sentence_bad = Every lady could ever flee from the waitresses.
# two_prefix_prefix_good = Could every lady
# two_prefix_prefix_bad = Every lady could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present906
1	Every	every	DET	DT	_	2	det	_	_
2	lady	lady	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	flee	flee	VERB	VB	VerbForm=Inf	0	root	_	_
6	from	from	ADP	IN	_	8	case	_	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	_	_
8	waitresses	waitress	NOUN	NNS	Number=Plur	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can every shirt ever wrinkle?
# sentence_bad = Every shirt can ever wrinkle.
# two_prefix_prefix_good = Can every shirt
# two_prefix_prefix_bad = Every shirt can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present907
1	Every	every	DET	DT	_	2	det	_	_
2	shirt	shirt	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	wrinkle	wrinkle	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had some customers ever wanted every waitress to play?
# sentence_bad = Some customers had ever wanted every waitress to play.
# two_prefix_prefix_good = Had some customers
# two_prefix_prefix_bad = Some customers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present908
1	Some	some	DET	DT	_	2	det	_	_
2	customers	customer	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	wanted	want	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	every	every	DET	DT	_	7	det	_	_
7	waitress	waitress	NOUN	NN	Number=Sing	5	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	play	play	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would Kathleen ever hate Andrew?
# sentence_bad = Kathleen would ever hate Andrew.
# two_prefix_prefix_good = Would Kathleen
# two_prefix_prefix_bad = Kathleen would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present909
1	Kathleen	Kathleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hate	hate	VERB	VB	VerbForm=Inf	0	root	_	_
5	Andrew	Andrew	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Might Jennifer ever judge Liam to scan those documentaries?
# sentence_bad = Jennifer might ever judge Liam to scan those documentaries.
# two_prefix_prefix_good = Might Jennifer
# two_prefix_prefix_bad = Jennifer might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present910
1	Jennifer	Jennifer	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	judge	judge	VERB	VB	VerbForm=Inf	0	root	_	_
5	Liam	Liam	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	scan	scan	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	those	that	DET	DT	Number=Plur|PronType=Dem	9	det	_	_
9	documentaries	documentary	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can some senators ever skate around the hill?
# sentence_bad = Some senators can ever skate around the hill.
# two_prefix_prefix_good = Can some senators
# two_prefix_prefix_bad = Some senators can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present911
1	Some	some	DET	DT	_	2	det	_	_
2	senators	senator	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	skate	skate	VERB	VB	VerbForm=Inf	0	root	_	_
6	around	around	ADP	IN	_	8	case	_	_
7	the	the	DET	DT	Definite=Def|PronType=Art	8	det	_	_
8	hill	hill	NOUN	NN	Number=Sing	5	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will these associations ever conceal who might bother to scratch?
# sentence_bad = These associations will ever conceal who might bother to scratch.
# two_prefix_prefix_good = Will these associations
# two_prefix_prefix_bad = These associations will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present912
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	associations	association	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	0	root	_	_
6	who	who	PRON	WP	PronType=Int	8	nsubj	_	_
7	might	might	AUX	MD	VerbForm=Fin	8	aux	_	_
8	bother	bother	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	scratch	scratch	VERB	VB	VerbForm=Inf	8	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Edward ever referenced Tanya?
# sentence_bad = Edward had ever referenced Tanya.
# two_prefix_prefix_good = Had Edward
# two_prefix_prefix_bad = Edward had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present913
1	Edward	Edward	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	referenced	reference	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Tanya	Tanya	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Jill ever long to speak up?
# sentence_bad = Jill could ever long to speak up.
# two_prefix_prefix_good = Could Jill
# two_prefix_prefix_bad = Jill could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present914
1	Jill	Jill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	long	long	ADV	JJ	Degree=Pos	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	speak	speak	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	up	up	ADP	RP	_	6	compound:prt	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should every library ever collaborate?
# sentence_bad = Every library should ever collaborate.
# two_prefix_prefix_good = Should every library
# two_prefix_prefix_bad = Every library should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present915
1	Every	every	DET	DT	_	2	det	_	_
2	library	library	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	collaborate	collaborate	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Would every closet ever shut?
# sentence_bad = Every closet would ever shut.
# two_prefix_prefix_good = Would every closet
# two_prefix_prefix_bad = Every closet would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present916
1	Every	every	DET	DT	_	2	det	_	_
2	closet	closet	NOUN	NN	Number=Sing	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shut	shut	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has some actor ever written?
# sentence_bad = Some actor has ever written.
# two_prefix_prefix_good = Has some actor
# two_prefix_prefix_bad = Some actor has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present917
1	Some	some	DET	DT	_	2	det	_	_
2	actor	actor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	written	write	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Richard ever wanted a light to brighten?
# sentence_bad = Richard had ever wanted a light to brighten.
# two_prefix_prefix_good = Had Richard
# two_prefix_prefix_bad = Richard had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present918
1	Richard	Richard	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	wanted	want	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	light	light	NOUN	NN	Number=Sing	4	obj	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	brighten	brighten	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Adam ever skate around those glaciers?
# sentence_bad = Adam could ever skate around those glaciers.
# two_prefix_prefix_good = Could Adam
# two_prefix_prefix_bad = Adam could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present919
1	Adam	Adam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	skate	skate	VERB	VB	VerbForm=Inf	0	root	_	_
5	around	around	ADP	IN	_	7	case	_	_
6	those	that	DET	DT	Number=Plur|PronType=Dem	7	det	_	_
7	glaciers	glacier	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could most scarves ever fray?
# sentence_bad = Most scarves could ever fray.
# two_prefix_prefix_good = Could most scarves
# two_prefix_prefix_bad = Most scarves could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present920
1	Most	most	ADJ	JJS	Degree=Sup	2	amod	_	_
2	scarves	scarve	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fray	fray	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have some drivers ever observed Deborah?
# sentence_bad = Some drivers have ever observed Deborah.
# two_prefix_prefix_good = Have some drivers
# two_prefix_prefix_bad = Some drivers have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present921
1	Some	some	DET	DT	_	2	det	_	_
2	drivers	driver	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	observed	observe	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	Deborah	Deborah	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Naomi ever pressed Beth to confuse Veronica?
# sentence_bad = Naomi has ever pressed Beth to confuse Veronica.
# two_prefix_prefix_good = Has Naomi
# two_prefix_prefix_bad = Naomi has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present922
1	Naomi	Naomi	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	pressed	press	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Beth	Beth	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	confuse	confuse	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	Veronica	Veronica	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the shoe ever warped?
# sentence_bad = The shoe had ever warped.
# two_prefix_prefix_good = Had the shoe
# two_prefix_prefix_bad = The shoe had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present923
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	shoe	shoe	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	warped	warp	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can the waitresses ever mess up most malls?
# sentence_bad = The waitresses can ever mess up most malls.
# two_prefix_prefix_good = Can the waitresses
# two_prefix_prefix_bad = The waitresses can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present924
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	waitresses	waitress	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	mess	mess	VERB	VB	VerbForm=Inf	0	root	_	_
6	up	up	ADP	RP	_	5	compound:prt	_	_
7	most	most	ADJ	JJS	Degree=Sup	8	amod	_	_
8	malls	mall	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should many guys ever testify?
# sentence_bad = Many guys should ever testify.
# two_prefix_prefix_good = Should many guys
# two_prefix_prefix_bad = Many guys should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present925
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	guys	guy	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	testify	testify	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have those senators ever bothered to aggravate some waiters?
# sentence_bad = Those senators have ever bothered to aggravate some waiters.
# two_prefix_prefix_good = Have those senators
# two_prefix_prefix_bad = Those senators have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present926
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	senators	senator	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	aggravate	aggravate	VERB	VB	VerbForm=Inf	5	xcomp	_	_
8	some	some	DET	DT	_	9	det	_	_
9	waiters	waiter	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had malls ever resembled some prints?
# sentence_bad = Malls had ever resembled some prints.
# two_prefix_prefix_good = Had malls
# two_prefix_prefix_bad = Malls had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present927
1	Malls	mall	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	resembled	resemble	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	prints	print	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Rose ever escape?
# sentence_bad = Rose would ever escape.
# two_prefix_prefix_good = Would Rose
# two_prefix_prefix_bad = Rose would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present928
1	Rose	Rose	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	escape	escape	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has every lady ever known what is cracking?
# sentence_bad = Every lady has ever known what is cracking.
# two_prefix_prefix_good = Has every lady
# two_prefix_prefix_bad = Every lady has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present929
1	Every	every	DET	DT	_	2	det	_	_
2	lady	lady	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	known	know	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	what	what	PRON	WP	PronType=Int	5	obj	_	_
7	is	be	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
8	cracking	crack	VERB	VBG	Tense=Pres|VerbForm=Part	6	acl:relcl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Heather ever sing?
# sentence_bad = Heather could ever sing.
# two_prefix_prefix_good = Could Heather
# two_prefix_prefix_bad = Heather could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present930
1	Heather	Heather	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sing	sing	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Do those skateboards ever slip?
# sentence_bad = Those skateboards do ever slip.
# two_prefix_prefix_good = Do those skateboards
# two_prefix_prefix_bad = Those skateboards do
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present931
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	skateboards	skateboard	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	do	do	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	slip	slip	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Jennifer ever come here?
# sentence_bad = Jennifer has ever come here.
# two_prefix_prefix_good = Has Jennifer
# two_prefix_prefix_bad = Jennifer has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present932
1	Jennifer	Jennifer	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	come	come	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	here	here	ADV	RB	PronType=Dem	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Tracy ever cook?
# sentence_bad = Tracy did ever cook.
# two_prefix_prefix_good = Did Tracy
# two_prefix_prefix_bad = Tracy did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present933
1	Tracy	Tracy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	cook	cook	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will Martin ever slump over?
# sentence_bad = Martin will ever slump over.
# two_prefix_prefix_good = Will Martin
# two_prefix_prefix_bad = Martin will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present934
1	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	slump	slump	VERB	VB	VerbForm=Inf	0	root	_	_
5	over	over	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have the skateboards ever accelerated?
# sentence_bad = The skateboards have ever accelerated.
# two_prefix_prefix_good = Have the skateboards
# two_prefix_prefix_bad = The skateboards have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present935
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	skateboards	skateboard	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	accelerated	accelerate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Craig ever bothered Marla?
# sentence_bad = Craig had ever bothered Marla.
# two_prefix_prefix_good = Had Craig
# two_prefix_prefix_bad = Craig had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present936
1	Craig	Craig	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bothered	bother	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Marla	Marla	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Douglas ever urged Tracy to yell?
# sentence_bad = Douglas has ever urged Tracy to yell.
# two_prefix_prefix_good = Has Douglas
# two_prefix_prefix_bad = Douglas has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present937
1	Douglas	Douglas	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	urged	urge	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Tracy	Tracy	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	yell	yell	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would the Impressionists ever approve?
# sentence_bad = The Impressionists would ever approve.
# two_prefix_prefix_good = Would the Impressionists
# two_prefix_prefix_bad = The Impressionists would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present938
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Impressionists	Impressionist	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	approve	approve	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Paul ever embarrassed Dan?
# sentence_bad = Paul has ever embarrassed Dan.
# two_prefix_prefix_good = Has Paul
# two_prefix_prefix_bad = Paul has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present939
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	embarrassed	embarrass	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Dan	Dan	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have some patients ever conspired?
# sentence_bad = Some patients have ever conspired.
# two_prefix_prefix_good = Have some patients
# two_prefix_prefix_bad = Some patients have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present940
1	Some	some	DET	DT	_	2	det	_	_
2	patients	patient	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	conspired	conspire	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did some bicycle ever shatter?
# sentence_bad = Some bicycle did ever shatter.
# two_prefix_prefix_good = Did some bicycle
# two_prefix_prefix_bad = Some bicycle did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present941
1	Some	some	DET	DT	_	2	det	_	_
2	bicycle	bicycle	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shatter	shatter	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Have waiters ever doubted Paul was escaping?
# sentence_bad = Waiters have ever doubted Paul was escaping.
# two_prefix_prefix_good = Have waiters
# two_prefix_prefix_bad = Waiters have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present942
1	Waiters	waiter	NOUN	NNS	Number=Plur	4	nsubj	_	_
2	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	doubted	doubt	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Paul	Paul	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	was	be	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	escaping	escape	VERB	VBG	Tense=Pres|VerbForm=Part	4	ccomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Samuel ever press Cheryl to vanish?
# sentence_bad = Samuel did ever press Cheryl to vanish.
# two_prefix_prefix_good = Did Samuel
# two_prefix_prefix_bad = Samuel did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present943
1	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	press	press	VERB	VB	VerbForm=Inf	0	root	_	_
5	Cheryl	Cheryl	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	vanish	vanish	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has this man ever continued to yawn?
# sentence_bad = This man has ever continued to yawn.
# two_prefix_prefix_good = Has this man
# two_prefix_prefix_bad = This man has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present944
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	continued	continue	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	yawn	yawn	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will that organization ever embarrass a company?
# sentence_bad = That organization will ever embarrass a company.
# two_prefix_prefix_good = Will that organization
# two_prefix_prefix_bad = That organization will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present945
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	organization	organization	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	embarrass	embarrass	VERB	VB	VerbForm=Inf	0	root	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	company	company	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Patricia ever seen?
# sentence_bad = Patricia had ever seen.
# two_prefix_prefix_good = Had Patricia
# two_prefix_prefix_bad = Patricia had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present946
1	Patricia	Patricia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	seen	see	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Kenneth ever bought the trucks?
# sentence_bad = Kenneth had ever bought the trucks.
# two_prefix_prefix_good = Had Kenneth
# two_prefix_prefix_bad = Kenneth had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present947
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	bought	buy	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6	trucks	truck	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Did Sherry ever pressure Becca to scratch?
# sentence_bad = Sherry did ever pressure Becca to scratch.
# two_prefix_prefix_good = Did Sherry
# two_prefix_prefix_bad = Sherry did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present948
1	Sherry	Sherry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	pressure	pressure	VERB	VB	VerbForm=Inf	0	root	_	_
5	Becca	Becca	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	scratch	scratch	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Paul ever advise Randolf to nod?
# sentence_bad = Paul could ever advise Randolf to nod.
# two_prefix_prefix_good = Could Paul
# two_prefix_prefix_bad = Paul could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present949
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	advise	advise	VERB	VB	VerbForm=Inf	0	root	_	_
5	Randolf	Randolf	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	nod	nod	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the student ever exercised?
# sentence_bad = The student had ever exercised.
# two_prefix_prefix_good = Had the student
# two_prefix_prefix_bad = The student had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present950
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	student	student	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	exercised	exercise	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Deanna ever sell most reports?
# sentence_bad = Deanna should ever sell most reports.
# two_prefix_prefix_good = Should Deanna
# two_prefix_prefix_bad = Deanna should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present951
1	Deanna	Deanna	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	sell	sell	VERB	VB	VerbForm=Inf	0	root	_	_
5	most	most	ADJ	JJS	Degree=Sup	6	amod	_	_
6	reports	report	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the peppers ever baked?
# sentence_bad = The peppers had ever baked.
# two_prefix_prefix_good = Had the peppers
# two_prefix_prefix_bad = The peppers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present952
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	peppers	pepper	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	baked	bake	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Samantha ever realized who nods?
# sentence_bad = Samantha has ever realized who nods.
# two_prefix_prefix_good = Has Samantha
# two_prefix_prefix_bad = Samantha has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present953
1	Samantha	Samantha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	realized	realize	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	who	who	PRON	WP	PronType=Int	6	nsubj	_	_
6	nods	nod	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Martha ever longed to see?
# sentence_bad = Martha has ever longed to see.
# two_prefix_prefix_good = Has Martha
# two_prefix_prefix_bad = Martha has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present954
1	Martha	Martha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	longed	long	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	see	see	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have some candles ever vanished?
# sentence_bad = Some candles have ever vanished.
# two_prefix_prefix_good = Have some candles
# two_prefix_prefix_bad = Some candles have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present955
1	Some	some	DET	DT	_	2	det	_	_
2	candles	candle	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	vanished	vanish	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will every eye ever open?
# sentence_bad = Every eye will ever open.
# two_prefix_prefix_good = Will every eye
# two_prefix_prefix_bad = Every eye will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present956
1	Every	every	DET	DT	_	2	det	_	_
2	eye	eye	NOUN	NN	Number=Sing	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	open	open	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Could Derek ever boast?
# sentence_bad = Derek could ever boast.
# two_prefix_prefix_good = Could Derek
# two_prefix_prefix_bad = Derek could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present957
1	Derek	Derek	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	boast	boast	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will these peppers ever blacken?
# sentence_bad = These peppers will ever blacken.
# two_prefix_prefix_good = Will these peppers
# two_prefix_prefix_bad = These peppers will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present958
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	peppers	pepper	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	blacken	blacken	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did the plate ever fall apart?
# sentence_bad = The plate did ever fall apart.
# two_prefix_prefix_good = Did the plate
# two_prefix_prefix_bad = The plate did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present959
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	plate	plate	NOUN	NN	Number=Sing	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	fall	fall	VERB	VB	VerbForm=Inf	0	root	_	_
6	apart	apart	ADV	RB	_	5	advmod	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did many actors ever react?
# sentence_bad = Many actors did ever react.
# two_prefix_prefix_good = Did many actors
# two_prefix_prefix_bad = Many actors did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present960
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	actors	actor	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	react	react	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Might Jacqueline ever run around a lot of high schools?
# sentence_bad = Jacqueline might ever run around a lot of high schools.
# two_prefix_prefix_good = Might Jacqueline
# two_prefix_prefix_bad = Jacqueline might
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present961
1	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	run	run	VERB	VB	VerbForm=Inf	0	root	_	_
5	around	around	ADP	IN	_	7	case	_	_
6	a	a	DET	DT	Definite=Ind|PronType=Art	7	det	_	_
7	lot	lot	NOUN	NN	Number=Sing	4	obl	_	_
8	of	of	ADP	IN	_	10	case	_	_
9	high	high	ADJ	JJ	Degree=Pos	10	amod	_	_
10	schools	school	NOUN	NNS	Number=Plur	7	nmod	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has pasta ever scorched?
# sentence_bad = Pasta has ever scorched.
# two_prefix_prefix_good = Has pasta
# two_prefix_prefix_bad = Pasta has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present962
1	Pasta	pasta	NOUN	NN	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	scorched	scorch	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Steve ever nodded?
# sentence_bad = Steve had ever nodded.
# two_prefix_prefix_good = Had Steve
# two_prefix_prefix_bad = Steve had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present963
1	Steve	Steve	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	nodded	nod	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had Helen ever researched some legislatures?
# sentence_bad = Helen had ever researched some legislatures.
# two_prefix_prefix_good = Had Helen
# two_prefix_prefix_bad = Helen had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present964
1	Helen	Helen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	researched	research	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	legislatures	legislature	NOUN	NNS	Number=Plur	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Has Charles ever irritated Tonya?
# sentence_bad = Charles has ever irritated Tonya.
# two_prefix_prefix_good = Has Charles
# two_prefix_prefix_bad = Charles has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present965
1	Charles	Charles	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	irritated	irritate	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Tonya	Tonya	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can many pedestrians ever praise Lori?
# sentence_bad = Many pedestrians can ever praise Lori.
# two_prefix_prefix_good = Can many pedestrians
# two_prefix_prefix_bad = Many pedestrians can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present966
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	pedestrians	pedestrian	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	praise	praise	VERB	VB	VerbForm=Inf	0	root	_	_
6	Lori	Lori	PROPN	NNP	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Sheila ever walked through all closets?
# sentence_bad = Sheila had ever walked through all closets.
# two_prefix_prefix_good = Had Sheila
# two_prefix_prefix_bad = Sheila had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present967
1	Sheila	Sheila	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	walked	walk	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	through	through	ADP	IN	_	7	case	_	_
6	all	all	DET	DT	_	7	det	_	_
7	closets	closet	NOUN	NNS	Number=Plur	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should a bank ever profit?
# sentence_bad = A bank should ever profit.
# two_prefix_prefix_good = Should a bank
# two_prefix_prefix_bad = A bank should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present968
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	bank	bank	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	profit	profit	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Did Denise ever lie?
# sentence_bad = Denise did ever lie.
# two_prefix_prefix_good = Did Denise
# two_prefix_prefix_bad = Denise did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present969
1	Denise	Denise	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	lie	lie	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Have all students ever approached some actresses?
# sentence_bad = All students have ever approached some actresses.
# two_prefix_prefix_good = Have all students
# two_prefix_prefix_bad = All students have
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present970
1	All	all	DET	DT	_	2	det	_	_
2	students	student	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	have	have	AUX	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	approached	approach	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	some	some	DET	DT	_	7	det	_	_
7	actresses	actress	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Kristin ever required Kirsten to cheer?
# sentence_bad = Kristin had ever required Kirsten to cheer.
# two_prefix_prefix_good = Had Kristin
# two_prefix_prefix_bad = Kristin had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present971
1	Kristin	Kristin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	required	require	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Kirsten	Kirsten	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	cheer	cheer	VERB	VB	VerbForm=Inf	4	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Will these cashiers ever attempt to mutter?
# sentence_bad = These cashiers will ever attempt to mutter.
# two_prefix_prefix_good = Will these cashiers
# two_prefix_prefix_bad = These cashiers will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present972
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	cashiers	cashier	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	attempt	attempt	VERB	VB	VerbForm=Inf	0	root	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	mutter	mutter	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Connie ever brought every gate?
# sentence_bad = Connie had ever brought every gate.
# two_prefix_prefix_good = Had Connie
# two_prefix_prefix_bad = Connie had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present973
1	Connie	Connie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	brought	bring	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	every	every	DET	DT	_	6	det	_	_
6	gate	gate	NOUN	NN	Number=Sing	4	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would Sabrina ever love Lori?
# sentence_bad = Sabrina would ever love Lori.
# two_prefix_prefix_good = Would Sabrina
# two_prefix_prefix_bad = Sabrina would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present974
1	Sabrina	Sabrina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	love	love	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lori	Lori	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Does Amy ever joke around?
# sentence_bad = Amy does ever joke around.
# two_prefix_prefix_good = Does Amy
# two_prefix_prefix_bad = Amy does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present975
1	Amy	Amy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	joke	joke	VERB	VB	VerbForm=Inf	0	root	_	_
5	around	around	ADV	RB	_	4	advmod	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Can that broccoli ever rot?
# sentence_bad = That broccoli can ever rot.
# two_prefix_prefix_good = Can that broccoli
# two_prefix_prefix_bad = That broccoli can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present976
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	broccoli	broccoli	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	rot	rot	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should a lot of waiters ever hurt the men?
# sentence_bad = A lot of waiters should ever hurt the men.
# two_prefix_prefix_good = Should a lot of waiters
# two_prefix_prefix_bad = A lot of waiters should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present977
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	waiters	waiter	NOUN	NNS	Number=Plur	2	nmod	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	hurt	hurt	VERB	VB	VerbForm=Inf	0	root	_	_
8	the	the	DET	DT	Definite=Def|PronType=Art	9	det	_	_
9	men	man	NOUN	NNS	Number=Plur	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Could that window ever shut?
# sentence_bad = That window could ever shut.
# two_prefix_prefix_good = Could that window
# two_prefix_prefix_bad = That window could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present978
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	window	window	NOUN	NN	Number=Sing	5	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shut	shut	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does some pedestrian ever salute?
# sentence_bad = Some pedestrian does ever salute.
# two_prefix_prefix_good = Does some pedestrian
# two_prefix_prefix_bad = Some pedestrian does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present979
1	Some	some	DET	DT	_	2	det	_	_
2	pedestrian	pedestrian	NOUN	NN	Number=Sing	5	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	salute	salute	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Will some ladies ever turn out to conceal those fish?
# sentence_bad = Some ladies will ever turn out to conceal those fish.
# two_prefix_prefix_good = Will some ladies
# two_prefix_prefix_bad = Some ladies will
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present980
1	Some	some	DET	DT	_	2	det	_	_
2	ladies	lady	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	turn	turn	VERB	VB	VerbForm=Inf	0	root	_	_
6	out	out	ADP	RP	_	5	compound:prt	_	_
7	to	to	PART	TO	_	8	mark	_	_
8	conceal	conceal	VERB	VB	VerbForm=Inf	5	advcl	_	_
9	those	that	DET	DT	Number=Plur|PronType=Dem	10	det	_	_
10	fish	fish	NOUN	NNS	Number=Plur	8	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can a boy ever research science?
# sentence_bad = A boy can ever research science.
# two_prefix_prefix_good = Can a boy
# two_prefix_prefix_bad = A boy can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present981
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	research	research	VERB	VB	VerbForm=Inf	0	root	_	_
6	science	science	NOUN	NN	Number=Sing	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had every doctor ever cleaned many libraries?
# sentence_bad = Every doctor had ever cleaned many libraries.
# two_prefix_prefix_good = Had every doctor
# two_prefix_prefix_bad = Every doctor had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present982
1	Every	every	DET	DT	_	2	det	_	_
2	doctor	doctor	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	cleaned	clean	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	many	many	ADJ	JJ	Degree=Pos	7	amod	_	_
7	libraries	library	NOUN	NNS	Number=Plur	5	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Should Alexander ever walk through some museum?
# sentence_bad = Alexander should ever walk through some museum.
# two_prefix_prefix_good = Should Alexander
# two_prefix_prefix_bad = Alexander should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present983
1	Alexander	Alexander	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	walk	walk	VERB	VB	VerbForm=Inf	0	root	_	_
5	through	through	ADP	IN	_	7	case	_	_
6	some	some	DET	DT	_	7	det	_	_
7	museum	museum	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Would these scarves ever shrink?
# sentence_bad = These scarves would ever shrink.
# two_prefix_prefix_good = Would these scarves
# two_prefix_prefix_bad = These scarves would
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present984
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	scarves	scarve	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	shrink	shrink	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Roger ever known Theresa?
# sentence_bad = Roger has ever known Theresa.
# two_prefix_prefix_good = Has Roger
# two_prefix_prefix_bad = Roger has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present985
1	Roger	Roger	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	known	know	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Theresa	Theresa	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had these women ever divorced?
# sentence_bad = These women had ever divorced.
# two_prefix_prefix_good = Had these women
# two_prefix_prefix_bad = These women had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present986
1	These	this	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2	women	woman	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	divorced	divorce	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had Lucille ever dropped by some movie theater?
# sentence_bad = Lucille had ever dropped by some movie theater.
# two_prefix_prefix_good = Had Lucille
# two_prefix_prefix_bad = Lucille had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present987
1	Lucille	Lucille	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	dropped	drop	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	by	by	ADP	IN	_	8	case	_	_
6	some	some	DET	DT	_	8	det	_	_
7	movie	movie	NOUN	NN	Number=Sing	8	compound	_	_
8	theater	theater	NOUN	NN	Number=Sing	4	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had the Clintons ever murmured?
# sentence_bad = The Clintons had ever murmured.
# two_prefix_prefix_good = Had the Clintons
# two_prefix_prefix_bad = The Clintons had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present988
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	Clintons	Clinton	PROPN	NNPS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	murmured	murmur	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had a lot of drivers ever passed a lot of high schools?
# sentence_bad = A lot of drivers had ever passed a lot of high schools.
# two_prefix_prefix_good = Had a lot of drivers
# two_prefix_prefix_bad = A lot of drivers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present989
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	lot	lot	NOUN	NN	Number=Sing	7	nsubj	_	_
3	of	of	ADP	IN	_	4	case	_	_
4	drivers	driver	NOUN	NNS	Number=Plur	2	nmod	_	_
5	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	ever	ever	ADV	RB	_	7	advmod	_	_
7	passed	pass	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
8	a	a	DET	DT	Definite=Ind|PronType=Art	9	det	_	_
9	lot	lot	NOUN	NN	Number=Sing	7	obj	_	_
10	of	of	ADP	IN	_	12	case	_	_
11	high	high	ADJ	JJ	Degree=Pos	12	amod	_	_
12	schools	school	NOUN	NNS	Number=Plur	9	nmod	_	SpaceAfter=No
13	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Did Caroline ever question Jill?
# sentence_bad = Caroline did ever question Jill.
# two_prefix_prefix_good = Did Caroline
# two_prefix_prefix_bad = Caroline did
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present990
1	Caroline	Caroline	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	question	question	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jill	Jill	PROPN	NNP	Number=Sing	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Had this bank ever persuaded Eva's mothers to reunite?
# sentence_bad = This bank had ever persuaded Eva's mothers to reunite.
# two_prefix_prefix_good = Had this bank
# two_prefix_prefix_bad = This bank had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present991
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	bank	bank	NOUN	NN	Number=Sing	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	persuaded	persuade	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6-7	Eva's	_	_	_	_	_	_	_	_
6	Eva	Eva	PROPN	NNP	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	mothers	mother	NOUN	NNS	Number=Plur	5	obj	_	_
9	to	to	PART	TO	_	10	mark	_	_
10	reunite	reunite	VERB	VB	VerbForm=Inf	5	xcomp	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had many museums ever preferred that bike to steer?
# sentence_bad = Many museums had ever preferred that bike to steer.
# two_prefix_prefix_good = Had many museums
# two_prefix_prefix_bad = Many museums had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present992
1	Many	many	ADJ	JJ	Degree=Pos	2	amod	_	_
2	museums	museum	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	preferred	prefer	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
6	that	that	DET	DT	Number=Sing|PronType=Dem	7	det	_	_
7	bike	bike	NOUN	NN	Number=Sing	5	obj	_	_
8	to	to	PART	TO	_	9	mark	_	_
9	steer	steer	VERB	VB	VerbForm=Inf	5	advcl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Does Katherine ever hunt?
# sentence_bad = Katherine does ever hunt.
# two_prefix_prefix_good = Does Katherine
# two_prefix_prefix_bad = Katherine does
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present993
1	Katherine	Katherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	hunt	hunt	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
5	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Ruth ever attempt to boycott this college campus?
# sentence_bad = Ruth could ever attempt to boycott this college campus.
# two_prefix_prefix_good = Could Ruth
# two_prefix_prefix_bad = Ruth could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present994
1	Ruth	Ruth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	attempt	attempt	VERB	VB	VerbForm=Inf	0	root	_	_
5	to	to	PART	TO	_	6	mark	_	_
6	boycott	boycott	VERB	VB	VerbForm=Inf	4	xcomp	_	_
7	this	this	DET	DT	Number=Sing|PronType=Dem	9	det	_	_
8	college	college	NOUN	NN	Number=Sing	9	compound	_	_
9	campus	campus	NOUN	NN	Number=Sing	6	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Should that water ever condense?
# sentence_bad = That water should ever condense.
# two_prefix_prefix_good = Should that water
# two_prefix_prefix_bad = That water should
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present995
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	water	water	NOUN	NN	Number=Sing	5	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	condense	condense	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Can all senators ever hug?
# sentence_bad = All senators can ever hug.
# two_prefix_prefix_good = Can all senators
# two_prefix_prefix_bad = All senators can
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present996
1	All	all	DET	DT	_	2	det	_	_
2	senators	senator	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	hug	hug	VERB	VB	VerbForm=Inf	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Had all dancers ever disagreed?
# sentence_bad = All dancers had ever disagreed.
# two_prefix_prefix_good = Had all dancers
# two_prefix_prefix_bad = All dancers had
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present997
1	All	all	DET	DT	_	2	det	_	_
2	dancers	dancer	NOUN	NNS	Number=Plur	5	nsubj	_	_
3	had	have	AUX	VBD	Mood=Ind|Number=Plur|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	ever	ever	ADV	RB	_	5	advmod	_	_
5	disagreed	disagree	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	SpaceAfter=No
6	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Has Paul ever found Richard to impress that association?
# sentence_bad = Paul has ever found Richard to impress that association.
# two_prefix_prefix_good = Has Paul
# two_prefix_prefix_bad = Paul has
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present998
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	has	have	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	found	find	VERB	VBN	Tense=Past|VerbForm=Part	0	root	_	_
5	Richard	Richard	PROPN	NNP	Number=Sing	4	obj	_	_
6	to	to	PART	TO	_	7	mark	_	_
7	impress	impress	VERB	VB	VerbForm=Inf	4	xcomp	_	_
8	that	that	DET	DT	Number=Sing|PronType=Dem	9	det	_	_
9	association	association	NOUN	NN	Number=Sing	7	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Could Raymond ever figure out who attack Janice?
# sentence_bad = Raymond could ever figure out who attack Janice.
# two_prefix_prefix_good = Could Raymond
# two_prefix_prefix_bad = Raymond could
# two_prefix_word = ever
# field = semantics
# linguistics_term = npi_licensing
# UID = matrix_question_npi_licensor_present
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = matrix_question_npi_licensor_present999
1	Raymond	Raymond	PROPN	NNP	Number=Sing	4	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	ever	ever	ADV	RB	_	4	advmod	_	_
4	figure	figure	VERB	VB	VerbForm=Inf	0	root	_	_
5	out	out	ADP	RP	_	4	compound:prt	_	_
6	who	who	PRON	WP	PronType=Int	7	nsubj	_	_
7	attack	attack	VERB	VBP	Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	Janice	Janice	PROPN	NNP	Number=Sing	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No

