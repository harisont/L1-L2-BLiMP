# sentence_good = Steven explains Kayla won't hurt herself.
# sentence_bad = Kayla explains Steven won't hurt herself.
# two_prefix_prefix_good = Steven explains Kayla won't hurt
# two_prefix_prefix_bad = Kayla explains Steven won't hurt
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_30
1	Kayla	Kayla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Steven	Steven	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	hurt	hurt	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gina explains Alan fires himself.
# sentence_bad = Alan explains Gina fires himself.
# two_prefix_prefix_good = Gina explains Alan fires
# two_prefix_prefix_bad = Alan explains Gina fires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_31
1	Alan	Alan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gina	Gina	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Paul did think Alice hugs herself.
# sentence_bad = Alice did think Paul hugs herself.
# two_prefix_prefix_good = Paul did think Alice hugs
# two_prefix_prefix_bad = Alice did think Paul hugs
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_32
1	Alice	Alice	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Paul	Paul	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Beverly imagines Carla's ex-boyfriend hates himself.
# sentence_bad = Carla's ex-boyfriend imagines Beverly hates himself.
# two_prefix_prefix_good = Beverly imagines Carla's ex-boyfriend hates
# two_prefix_prefix_bad = Carla's ex-boyfriend imagines Beverly hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_33
1-2	Carla's	_	_	_	_	_	_	_	_
1	Carla	Carla	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Beverly	Beverly	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Randolf imagines Kayla sounds like herself.
# sentence_bad = Kayla imagines Randolf sounds like herself.
# two_prefix_prefix_good = Randolf imagines Kayla sounds like
# two_prefix_prefix_bad = Kayla imagines Randolf sounds like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_34
1	Kayla	Kayla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Randolf	Randolf	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	like	like	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tonya explains Kevin would boast about himself.
# sentence_bad = Kevin explains Tonya would boast about himself.
# two_prefix_prefix_good = Tonya explains Kevin would boast about
# two_prefix_prefix_bad = Kevin explains Tonya would boast about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_35
1	Kevin	Kevin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tonya	Tonya	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	boast	boast	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Adam can explain Katherine will describe herself.
# sentence_bad = Katherine can explain Adam will describe herself.
# two_prefix_prefix_good = Adam can explain Katherine will describe
# two_prefix_prefix_bad = Katherine can explain Adam will describe
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_36
1	Katherine	Katherine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Adam	Adam	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	describe	describe	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nancy could say every guy hides himself.
# sentence_bad = Every guy could say Nancy hides himself.
# two_prefix_prefix_good = Nancy could say every guy hides
# two_prefix_prefix_bad = Every guy could say Nancy hides
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_37
1	Every	every	DET	DT	_	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	4	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Nancy	Nancy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hides	hide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Claire says Lawrence attacks himself.
# sentence_bad = Lawrence says Claire attacks himself.
# two_prefix_prefix_good = Claire says Lawrence attacks
# two_prefix_prefix_bad = Lawrence says Claire attacks
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_38
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Claire	Claire	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Donna explains Gerald could boast about himself.
# sentence_bad = Gerald explains Donna could boast about himself.
# two_prefix_prefix_good = Donna explains Gerald could boast about
# two_prefix_prefix_bad = Gerald explains Donna could boast about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_39
1	Gerald	Gerald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Donna	_	_	_	_	_	_	_	_
3	Don	Don	PROPN	NNP	Number=Sing	6	nsubj	_	_
4	na	to	PART	TO	Abbr=Yes	3	flat	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	boast	boast	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rachel did explain Steve couldn't praise himself.
# sentence_bad = Steve did explain Rachel couldn't praise himself.
# two_prefix_prefix_good = Rachel did explain Steve couldn't praise
# two_prefix_prefix_bad = Steve did explain Rachel couldn't praise
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_310
1	Steve	Steve	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Rachel	Rachel	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	praise	praise	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jeffrey would imagine Caroline watches herself.
# sentence_bad = Caroline would imagine Jeffrey watches herself.
# two_prefix_prefix_good = Jeffrey would imagine Caroline watches
# two_prefix_prefix_bad = Caroline would imagine Jeffrey watches
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_311
1	Caroline	Caroline	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Martha should think Wayne conceals himself.
# sentence_bad = Wayne should think Martha conceals himself.
# two_prefix_prefix_good = Martha should think Wayne conceals
# two_prefix_prefix_bad = Wayne should think Martha conceals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_312
1	Wayne	Wayne	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Martha	Martha	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Maria imagines Bill praises himself.
# sentence_bad = Bill imagines Maria praises himself.
# two_prefix_prefix_good = Maria imagines Bill praises
# two_prefix_prefix_bad = Bill imagines Maria praises
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_313
1	Bill	Bill	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Maria	Maria	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jill could explain Ronald will hide himself.
# sentence_bad = Ronald could explain Jill will hide himself.
# two_prefix_prefix_good = Jill could explain Ronald will hide
# two_prefix_prefix_bad = Ronald could explain Jill will hide
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_314
1	Ronald	Ronald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Jill	Jill	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	hide	hide	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Teresa imagines Liam didn't distract himself.
# sentence_bad = Liam imagines Teresa didn't distract himself.
# two_prefix_prefix_good = Teresa imagines Liam didn't distract
# two_prefix_prefix_bad = Liam imagines Teresa didn't distract
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_315
1	Liam	Liam	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Teresa	Teresa	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	distract	distract	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Andrew's father couldn't imagine Melanie could conceal herself.
# sentence_bad = Melanie couldn't imagine Andrew's father could conceal herself.
# two_prefix_prefix_good = Andrew's father couldn't imagine Melanie could conceal
# two_prefix_prefix_bad = Melanie couldn't imagine Andrew's father could conceal
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_316
1	Melanie	Melanie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Andrew's	_	_	_	_	_	_	_	_
5	Andrew	Andrew	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	father	father	NOUN	NN	Number=Sing	9	nsubj	_	_
8	could	could	AUX	MD	VerbForm=Fin	9	aux	_	_
9	conceal	conceal	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carl explains Carmen might approach herself.
# sentence_bad = Carmen explains Carl might approach herself.
# two_prefix_prefix_good = Carl explains Carmen might approach
# two_prefix_prefix_bad = Carmen explains Carl might approach
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_317
1	Carmen	Carmen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carl	Carl	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	approach	approach	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Amelia should explain George kisses himself.
# sentence_bad = George should explain Amelia kisses himself.
# two_prefix_prefix_good = Amelia should explain George kisses
# two_prefix_prefix_bad = George should explain Amelia kisses
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_318
1	George	George	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Amelia	Amelia	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	kisses	kiss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Susan says Eric helps himself.
# sentence_bad = Eric says Susan helps himself.
# two_prefix_prefix_good = Susan says Eric helps
# two_prefix_prefix_bad = Eric says Susan helps
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_319
1	Eric	Eric	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Susan	Susan	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Diane explains Laurie's boyfriend should remember himself.
# sentence_bad = Laurie's boyfriend explains Diane should remember himself.
# two_prefix_prefix_good = Diane explains Laurie's boyfriend should remember
# two_prefix_prefix_bad = Laurie's boyfriend explains Diane should remember
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_320
1-2	Laurie's	_	_	_	_	_	_	_	_
1	Laurie	Laurie	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Diane	Diane	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	remember	remember	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tanya thinks Sandra's boyfriend talks about himself.
# sentence_bad = Sandra's boyfriend thinks Tanya talks about himself.
# two_prefix_prefix_good = Tanya thinks Sandra's boyfriend talks about
# two_prefix_prefix_bad = Sandra's boyfriend thinks Tanya talks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_321
1-2	Sandra's	_	_	_	_	_	_	_	_
1	Sandra	Sandra	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Tanya	Tanya	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Stacey doesn't explain that man doesn't help himself.
# sentence_bad = That man doesn't explain Stacey doesn't help himself.
# two_prefix_prefix_good = Stacey doesn't explain that man doesn't help
# two_prefix_prefix_bad = That man doesn't explain Stacey doesn't help
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_322
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3-4	doesn't	_	_	_	_	_	_	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
4	n't	not	PART	RB	_	5	advmod	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6	Stacey	Stacey	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	doesn't	_	_	_	_	_	_	_	_
7	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	help	help	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Tammy imagines Randolf doesn't alarm himself.
# sentence_bad = Randolf imagines Tammy doesn't alarm himself.
# two_prefix_prefix_good = Tammy imagines Randolf doesn't alarm
# two_prefix_prefix_bad = Randolf imagines Tammy doesn't alarm
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_323
1	Randolf	Randolf	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tammy	Tammy	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	alarm	alarm	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kayla couldn't say Winston Churchill's son loves himself.
# sentence_bad = Winston Churchill's son couldn't say Kayla loves himself.
# two_prefix_prefix_good = Kayla couldn't say Winston Churchill's son loves
# two_prefix_prefix_bad = Winston Churchill's son couldn't say Kayla loves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_324
1	Winston	Winston	PROPN	NNP	Number=Sing	4	nmod:poss	_	_
2-3	Churchill's	_	_	_	_	_	_	_	_
2	Churchill	Churchill	PROPN	NNP	Number=Sing	1	flat	_	_
3	's	's	PART	POS	_	1	case	_	_
4	son	son	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
8	Kayla	Kayla	PROPN	NNP	Number=Sing	9	nsubj	_	_
9	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Brenda can't imagine Adam did leave himself.
# sentence_bad = Adam can't imagine Brenda did leave himself.
# two_prefix_prefix_good = Brenda can't imagine Adam did leave
# two_prefix_prefix_bad = Adam can't imagine Brenda did leave
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_325
1	Adam	Adam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brenda	Brenda	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	leave	leave	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Elaine thinks Aaron cares for himself.
# sentence_bad = Aaron thinks Elaine cares for himself.
# two_prefix_prefix_good = Elaine thinks Aaron cares for
# two_prefix_prefix_bad = Aaron thinks Elaine cares for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_326
1	Aaron	Aaron	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Elaine	Elaine	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Guy thinks Tanya wouldn't sound like herself.
# sentence_bad = Tanya thinks Guy wouldn't sound like herself.
# two_prefix_prefix_good = Guy thinks Tanya wouldn't sound like
# two_prefix_prefix_bad = Tanya thinks Guy wouldn't sound like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_327
1	Tanya	Tanya	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Guy	Guy	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	sound	sound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	like	like	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Laurie imagines Andrew can't conceal himself.
# sentence_bad = Andrew imagines Laurie can't conceal himself.
# two_prefix_prefix_good = Laurie imagines Andrew can't conceal
# two_prefix_prefix_bad = Andrew imagines Laurie can't conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_328
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Laurie	Laurie	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Bradley could say Dana will like herself.
# sentence_bad = Dana could say Bradley will like herself.
# two_prefix_prefix_good = Bradley could say Dana will like
# two_prefix_prefix_bad = Dana could say Bradley will like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_329
1	Dana	Dana	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Bradley	Bradley	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	like	like	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Russell should say Diane notices herself.
# sentence_bad = Diane should say Russell notices herself.
# two_prefix_prefix_good = Russell should say Diane notices
# two_prefix_prefix_bad = Diane should say Russell notices
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_330
1	Diane	Diane	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Russell	Russell	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kathleen says Samuel won't like himself.
# sentence_bad = Samuel says Kathleen won't like himself.
# two_prefix_prefix_good = Kathleen says Samuel won't like
# two_prefix_prefix_bad = Samuel says Kathleen won't like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_331
1	Samuel	Samuel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kathleen	Kathleen	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	like	like	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Donna does imagine some boy could flee from himself.
# sentence_bad = Some boy does imagine Donna could flee from himself.
# two_prefix_prefix_good = Donna does imagine some boy could flee from
# two_prefix_prefix_bad = Some boy does imagine Donna could flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_332
1	Some	some	DET	DT	_	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	4	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Donna	_	_	_	_	_	_	_	_
5	Don	Don	PROPN	NNP	Number=Sing	8	nsubj	_	_
6	na	to	PART	TO	_	5	flat	_	_
7	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
8	flee	flee	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	from	from	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Christina should imagine Gerald might know himself.
# sentence_bad = Gerald should imagine Christina might know himself.
# two_prefix_prefix_good = Christina should imagine Gerald might know
# two_prefix_prefix_bad = Gerald should imagine Christina might know
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_333
1	Gerald	Gerald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Christina	Christina	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	know	know	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Grace thinks Travis doesn't embarrass himself.
# sentence_bad = Travis thinks Grace doesn't embarrass himself.
# two_prefix_prefix_good = Grace thinks Travis doesn't embarrass
# two_prefix_prefix_bad = Travis thinks Grace doesn't embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_334
1	Travis	Travis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Grace	Grace	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	embarrass	embarrass	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Ronald couldn't think Debra listens to herself.
# sentence_bad = Debra couldn't think Ronald listens to herself.
# two_prefix_prefix_good = Ronald couldn't think Debra listens to
# two_prefix_prefix_bad = Debra couldn't think Ronald listens to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_335
1	Debra	Debra	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Ronald	Ronald	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	listens	listen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Renee thinks Frank might work with himself.
# sentence_bad = Frank thinks Renee might work with himself.
# two_prefix_prefix_good = Renee thinks Frank might work with
# two_prefix_prefix_bad = Frank thinks Renee might work with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_336
1	Frank	Frank	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Renee	Renee	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	work	work	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	with	with	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sarah does explain Rodney didn't think about himself.
# sentence_bad = Rodney does explain Sarah didn't think about himself.
# two_prefix_prefix_good = Sarah does explain Rodney didn't think about
# two_prefix_prefix_bad = Rodney does explain Sarah didn't think about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_337
1	Rodney	Rodney	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Sarah	Sarah	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	think	think	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Andrew will think Pamela complains about herself.
# sentence_bad = Pamela will think Andrew complains about herself.
# two_prefix_prefix_good = Andrew will think Pamela complains about
# two_prefix_prefix_bad = Pamela will think Andrew complains about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_338
1	Pamela	Pamela	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Andrew	Andrew	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Frank's ex-girlfriend thinks Douglas complains about himself.
# sentence_bad = Douglas thinks Frank's ex-girlfriend complains about himself.
# two_prefix_prefix_good = Frank's ex-girlfriend thinks Douglas complains about
# two_prefix_prefix_bad = Douglas thinks Frank's ex-girlfriend complains about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_339
1	Douglas	Douglas	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Frank's	_	_	_	_	_	_	_	_
3	Frank	Frank	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	ex-girlfriend	ex-girlfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
6	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samuel's niece can think Paula's nephew should annoy himself.
# sentence_bad = Paula's nephew can think Samuel's niece should annoy himself.
# two_prefix_prefix_good = Samuel's niece can think Paula's nephew should annoy
# two_prefix_prefix_bad = Paula's nephew can think Samuel's niece should annoy
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_340
1-2	Paula's	_	_	_	_	_	_	_	_
1	Paula	Paula	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	nephew	nephew	NOUN	NN	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
6-7	Samuel's	_	_	_	_	_	_	_	_
6	Samuel	Samuel	PROPN	NNP	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	niece	niece	NOUN	NN	Number=Sing	10	nsubj	_	_
9	should	should	AUX	MD	VerbForm=Fin	10	aux	_	_
10	annoy	annoy	VERB	VB	VerbForm=Inf	5	ccomp	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = David can't imagine Sara cures herself.
# sentence_bad = Sara can't imagine David cures herself.
# two_prefix_prefix_good = David can't imagine Sara cures
# two_prefix_prefix_bad = Sara can't imagine David cures
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_341
1	Sara	Sara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	David	David	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	cures	cure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Patricia can't explain James conceals himself.
# sentence_bad = James can't explain Patricia conceals himself.
# two_prefix_prefix_good = Patricia can't explain James conceals
# two_prefix_prefix_bad = James can't explain Patricia conceals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_342
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Patricia	Patricia	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Florence's grandmother imagines Bradley shouldn't stun himself.
# sentence_bad = Bradley imagines Florence's grandmother shouldn't stun himself.
# two_prefix_prefix_good = Florence's grandmother imagines Bradley shouldn't stun
# two_prefix_prefix_bad = Bradley imagines Florence's grandmother shouldn't stun
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_343
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Florence's	_	_	_	_	_	_	_	_
3	Florence	Florence	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	grandmother	grandmother	NOUN	NN	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	stun	stun	VERB	VB	VerbForm=Inf	2	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Cheryl will imagine Kenneth visits himself.
# sentence_bad = Kenneth will imagine Cheryl visits himself.
# two_prefix_prefix_good = Cheryl will imagine Kenneth visits
# two_prefix_prefix_bad = Kenneth will imagine Cheryl visits
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_344
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Cheryl	Cheryl	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	visits	visit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Leslie won't explain Carlos works with himself.
# sentence_bad = Carlos won't explain Leslie works with himself.
# two_prefix_prefix_good = Leslie won't explain Carlos works with
# two_prefix_prefix_bad = Carlos won't explain Leslie works with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_345
1	Carlos	Carlos	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Leslie	Leslie	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	works	work	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	with	with	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Holly explains Guy describes himself.
# sentence_bad = Guy explains Holly describes himself.
# two_prefix_prefix_good = Holly explains Guy describes
# two_prefix_prefix_bad = Guy explains Holly describes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_346
1	Guy	Guy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Holly	Holly	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Teresa explains Alan should reference himself.
# sentence_bad = Alan explains Teresa should reference himself.
# two_prefix_prefix_good = Teresa explains Alan should reference
# two_prefix_prefix_bad = Alan explains Teresa should reference
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_347
1	Alan	Alan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Teresa	Teresa	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	reference	reference	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samuel didn't think Leslie can care for herself.
# sentence_bad = Leslie didn't think Samuel can care for herself.
# two_prefix_prefix_good = Samuel didn't think Leslie can care for
# two_prefix_prefix_bad = Leslie didn't think Samuel can care for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_348
1	Leslie	Leslie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Samuel	Samuel	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	care	care	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	for	for	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jason imagines Heather could praise herself.
# sentence_bad = Heather imagines Jason could praise herself.
# two_prefix_prefix_good = Jason imagines Heather could praise
# two_prefix_prefix_bad = Heather imagines Jason could praise
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_349
1	Heather	Heather	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jason	Jason	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	praise	praise	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carolyn's husband can explain David's sister didn't bother herself.
# sentence_bad = David's sister can explain Carolyn's husband didn't bother herself.
# two_prefix_prefix_good = Carolyn's husband can explain David's sister didn't bother
# two_prefix_prefix_bad = David's sister can explain Carolyn's husband didn't bother
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_350
1-2	David's	_	_	_	_	_	_	_	_
1	David	David	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	sister	sister	NOUN	NN	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6-7	Carolyn's	_	_	_	_	_	_	_	_
6	Carolyn	Carolyn	PROPN	NNP	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	husband	husband	NOUN	NN	Number=Sing	11	nsubj	_	_
9-10	didn't	_	_	_	_	_	_	_	_
9	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	11	aux	_	_
10	n't	not	PART	RB	_	11	advmod	_	_
11	bother	bother	VERB	VB	VerbForm=Inf	5	ccomp	_	_
12	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	11	obj	_	SpaceAfter=No
13	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Amelia says Phillip didn't embarrass himself.
# sentence_bad = Phillip says Amelia didn't embarrass himself.
# two_prefix_prefix_good = Amelia says Phillip didn't embarrass
# two_prefix_prefix_bad = Phillip says Amelia didn't embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_351
1	Phillip	Phillip	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Amelia	Amelia	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	embarrass	embarrass	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Veronica didn't explain Guy could remember himself.
# sentence_bad = Guy didn't explain Veronica could remember himself.
# two_prefix_prefix_good = Veronica didn't explain Guy could remember
# two_prefix_prefix_bad = Guy didn't explain Veronica could remember
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_352
1	Guy	Guy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Veronica	Veronica	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	remember	remember	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = George thinks Mary remembers herself.
# sentence_bad = Mary thinks George remembers herself.
# two_prefix_prefix_good = George thinks Mary remembers
# two_prefix_prefix_bad = Mary thinks George remembers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_353
1	Mary	Mary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	George	George	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Brad should imagine Sarah might embarrass herself.
# sentence_bad = Sarah should imagine Brad might embarrass herself.
# two_prefix_prefix_good = Brad should imagine Sarah might embarrass
# two_prefix_prefix_bad = Sarah should imagine Brad might embarrass
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_354
1	Sarah	Sarah	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Brad	Brad	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	embarrass	embarrass	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Timothy imagines Ella does return to herself.
# sentence_bad = Ella imagines Timothy does return to herself.
# two_prefix_prefix_good = Timothy imagines Ella does return to
# two_prefix_prefix_bad = Ella imagines Timothy does return to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_355
1	Ella	Ella	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Timothy	Timothy	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	return	return	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Frank explains Catherine might argue about herself.
# sentence_bad = Catherine explains Frank might argue about herself.
# two_prefix_prefix_good = Frank explains Catherine might argue about
# two_prefix_prefix_bad = Catherine explains Frank might argue about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_356
1	Catherine	Catherine	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Frank	Frank	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	argue	argue	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Elizabeth would imagine Curtis hides himself.
# sentence_bad = Curtis would imagine Elizabeth hides himself.
# two_prefix_prefix_good = Elizabeth would imagine Curtis hides
# two_prefix_prefix_bad = Curtis would imagine Elizabeth hides
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_357
1	Curtis	Curtis	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hides	hide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Janice won't explain Craig observes himself.
# sentence_bad = Craig won't explain Janice observes himself.
# two_prefix_prefix_good = Janice won't explain Craig observes
# two_prefix_prefix_bad = Craig won't explain Janice observes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_358
1	Craig	Craig	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Janice	Janice	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Every woman explains Craig wouldn't respect himself.
# sentence_bad = Craig explains every woman wouldn't respect himself.
# two_prefix_prefix_good = Every woman explains Craig wouldn't respect
# two_prefix_prefix_bad = Craig explains every woman wouldn't respect
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_359
1	Craig	Craig	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	every	every	DET	DT	_	4	det	_	_
4	woman	woman	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	respect	respect	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Derek explains Ruth talks about herself.
# sentence_bad = Ruth explains Derek talks about herself.
# two_prefix_prefix_good = Derek explains Ruth talks about
# two_prefix_prefix_bad = Ruth explains Derek talks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_360
1	Ruth	Ruth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Derek	Derek	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Angela's ex-wife imagines that guy doesn't listen to himself.
# sentence_bad = That guy imagines Angela's ex-wife doesn't listen to himself.
# two_prefix_prefix_good = Angela's ex-wife imagines that guy doesn't listen to
# two_prefix_prefix_bad = That guy imagines Angela's ex-wife doesn't listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_361
1	That	that	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4-5	Angela's	_	_	_	_	_	_	_	_
4	Angela	Angela	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	ex-wife	ex-wife	NOUN	NN	Number=Sing	9	nsubj	_	_
7-8	doesn't	_	_	_	_	_	_	_	_
7	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	listen	listen	VERB	VB	VerbForm=Inf	3	ccomp	_	_
10	to	to	ADP	IN	_	11	case	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Diana doesn't think Keith sounds like himself.
# sentence_bad = Keith doesn't think Diana sounds like himself.
# two_prefix_prefix_good = Diana doesn't think Keith sounds like
# two_prefix_prefix_bad = Keith doesn't think Diana sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_362
1	Keith	Keith	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Diana	Diana	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	like	like	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Melissa imagines Vincent could respect himself.
# sentence_bad = Vincent imagines Melissa could respect himself.
# two_prefix_prefix_good = Melissa imagines Vincent could respect
# two_prefix_prefix_bad = Vincent imagines Melissa could respect
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_363
1	Vincent	Vincent	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Melissa	Melissa	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	respect	respect	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Holly does say Alexander does visit himself.
# sentence_bad = Alexander does say Holly does visit himself.
# two_prefix_prefix_good = Holly does say Alexander does visit
# two_prefix_prefix_bad = Alexander does say Holly does visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_364
1	Alexander	Alexander	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Holly	Holly	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	visit	visit	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = That actress didn't say Kathleen's ex-boyfriend cures himself.
# sentence_bad = Kathleen's ex-boyfriend didn't say that actress cures himself.
# two_prefix_prefix_good = That actress didn't say Kathleen's ex-boyfriend cures
# two_prefix_prefix_bad = Kathleen's ex-boyfriend didn't say that actress cures
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_365
1-2	Kathleen's	_	_	_	_	_	_	_	_
1	Kathleen	Kathleen	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	that	that	DET	DT	Number=Sing|PronType=Dem	8	det	_	_
8	actress	actress	NOUN	NN	Number=Sing	9	nsubj	_	_
9	cures	cure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Stacey thinks Mitchell couldn't astound himself.
# sentence_bad = Mitchell thinks Stacey couldn't astound himself.
# two_prefix_prefix_good = Stacey thinks Mitchell couldn't astound
# two_prefix_prefix_bad = Mitchell thinks Stacey couldn't astound
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_366
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Stacey	Stacey	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	astound	astound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Benjamin says Melanie will attack herself.
# sentence_bad = Melanie says Benjamin will attack herself.
# two_prefix_prefix_good = Benjamin says Melanie will attack
# two_prefix_prefix_bad = Melanie says Benjamin will attack
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_367
1	Melanie	Melanie	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Benjamin	Benjamin	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	attack	attack	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = That woman says Noah won't worry himself.
# sentence_bad = Noah says that woman won't worry himself.
# two_prefix_prefix_good = That woman says Noah won't worry
# two_prefix_prefix_bad = Noah says that woman won't worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_368
1	Noah	Noah	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	that	that	DET	DT	Number=Sing|PronType=Dem	4	det	_	_
4	woman	woman	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	worry	worry	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Omar can't explain Katherine fires herself.
# sentence_bad = Katherine can't explain Omar fires herself.
# two_prefix_prefix_good = Omar can't explain Katherine fires
# two_prefix_prefix_bad = Katherine can't explain Omar fires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_369
1	Katherine	Katherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Omar	Omar	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Sara doesn't think Bradley dislikes himself.
# sentence_bad = Bradley doesn't think Sara dislikes himself.
# two_prefix_prefix_good = Sara doesn't think Bradley dislikes
# two_prefix_prefix_bad = Bradley doesn't think Sara dislikes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_370
1	Bradley	Bradley	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sara	Sara	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	dislikes	dislike	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Heidi's ex-husband imagines guests' ex-girlfriend didn't disagree with herself.
# sentence_bad = Guests' ex-girlfriend imagines Heidi's ex-husband didn't disagree with herself.
# two_prefix_prefix_good = Heidi's ex-husband imagines guests' ex-girlfriend didn't disagree with
# two_prefix_prefix_bad = Guests' ex-girlfriend imagines Heidi's ex-husband didn't disagree with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_371
1-2	Guests'	_	_	_	_	_	_	_	_
1	Guests	Guest	PROPN	NNPS	Number=Plur	3	nmod:poss	_	_
2	'	's	PART	POS	_	1	case	_	_
3	ex-girlfriend	ex-girlfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5-6	Heidi's	_	_	_	_	_	_	_	_
5	Heidi	Heidi	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	ex-husband	ex-husband	NOUN	NN	Number=Sing	10	nsubj	_	_
8-9	didn't	_	_	_	_	_	_	_	_
8	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	disagree	disagree	VERB	VB	VerbForm=Inf	4	ccomp	_	_
11	with	with	ADP	IN	_	12	case	_	_
12	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obl	_	SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Melinda doesn't imagine Peter will fire himself.
# sentence_bad = Peter doesn't imagine Melinda will fire himself.
# two_prefix_prefix_good = Melinda doesn't imagine Peter will fire
# two_prefix_prefix_bad = Peter doesn't imagine Melinda will fire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_372
1	Peter	Peter	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Melinda	Melinda	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	fire	fire	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Richard imagines some actress disturbs herself.
# sentence_bad = Some actress imagines Richard disturbs herself.
# two_prefix_prefix_good = Richard imagines some actress disturbs
# two_prefix_prefix_bad = Some actress imagines Richard disturbs
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_373
1	Some	some	DET	DT	_	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	3	nsubj	_	_
3	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Richard	Richard	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	disturbs	disturb	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Candice should imagine Marcus wouldn't flee from himself.
# sentence_bad = Marcus should imagine Candice wouldn't flee from himself.
# two_prefix_prefix_good = Candice should imagine Marcus wouldn't flee from
# two_prefix_prefix_bad = Marcus should imagine Candice wouldn't flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_374
1	Marcus	Marcus	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Candice	Candice	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	flee	flee	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	from	from	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sally might explain Derek leaves himself.
# sentence_bad = Derek might explain Sally leaves himself.
# two_prefix_prefix_good = Sally might explain Derek leaves
# two_prefix_prefix_bad = Derek might explain Sally leaves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_375
1	Derek	Derek	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Sally	Sally	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Martha will think Eric can upset himself.
# sentence_bad = Eric will think Martha can upset himself.
# two_prefix_prefix_good = Martha will think Eric can upset
# two_prefix_prefix_bad = Eric will think Martha can upset
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_376
1	Eric	Eric	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Martha	Martha	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	upset	upset	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carla won't imagine Kevin did find himself.
# sentence_bad = Kevin won't imagine Carla did find himself.
# two_prefix_prefix_good = Carla won't imagine Kevin did find
# two_prefix_prefix_bad = Kevin won't imagine Carla did find
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_377
1	Kevin	Kevin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carla	Carla	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	find	find	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tara thinks Richard won't admire himself.
# sentence_bad = Richard thinks Tara won't admire himself.
# two_prefix_prefix_good = Tara thinks Richard won't admire
# two_prefix_prefix_bad = Richard thinks Tara won't admire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_378
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tara	Tara	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	admire	admire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Todd can imagine Gina helps herself.
# sentence_bad = Gina can imagine Todd helps herself.
# two_prefix_prefix_good = Todd can imagine Gina helps
# two_prefix_prefix_bad = Gina can imagine Todd helps
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_379
1	Gina	Gina	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Todd	Todd	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Stephanie's grandfather imagines Anna hides herself.
# sentence_bad = Anna imagines Stephanie's grandfather hides herself.
# two_prefix_prefix_good = Stephanie's grandfather imagines Anna hides
# two_prefix_prefix_bad = Anna imagines Stephanie's grandfather hides
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_380
1	Anna	Anna	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Stephanie's	_	_	_	_	_	_	_	_
3	Stephanie	Stephanie	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	grandfather	grandfather	NOUN	NN	Number=Sing	6	nsubj	_	_
6	hides	hide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Adam says Elizabeth reveals herself.
# sentence_bad = Elizabeth says Adam reveals herself.
# two_prefix_prefix_good = Adam says Elizabeth reveals
# two_prefix_prefix_bad = Elizabeth says Adam reveals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_381
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Adam	Adam	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tiffany doesn't explain Gary will hug himself.
# sentence_bad = Gary doesn't explain Tiffany will hug himself.
# two_prefix_prefix_good = Tiffany doesn't explain Gary will hug
# two_prefix_prefix_bad = Gary doesn't explain Tiffany will hug
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_382
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tiffany	Tiffany	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	hug	hug	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = James would say Marla conceals herself.
# sentence_bad = Marla would say James conceals herself.
# two_prefix_prefix_good = James would say Marla conceals
# two_prefix_prefix_bad = Marla would say James conceals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_383
1	Marla	Marla	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	James	James	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Cynthia can't think Carlos watches himself.
# sentence_bad = Carlos can't think Cynthia watches himself.
# two_prefix_prefix_good = Cynthia can't think Carlos watches
# two_prefix_prefix_bad = Carlos can't think Cynthia watches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_384
1	Carlos	Carlos	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Cynthia	Cynthia	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Florence says Alan escapes from himself.
# sentence_bad = Alan says Florence escapes from himself.
# two_prefix_prefix_good = Florence says Alan escapes from
# two_prefix_prefix_bad = Alan says Florence escapes from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_385
1	Alan	Alan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Florence	Florence	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	escapes	escape	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lori couldn't say Patrick's son shouldn't shock himself.
# sentence_bad = Patrick's son couldn't say Lori shouldn't shock himself.
# two_prefix_prefix_good = Lori couldn't say Patrick's son shouldn't shock
# two_prefix_prefix_bad = Patrick's son couldn't say Lori shouldn't shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_386
1-2	Patrick's	_	_	_	_	_	_	_	_
1	Patrick	Patrick	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	Lori	Lori	PROPN	NNP	Number=Sing	10	nsubj	_	_
8-9	shouldn't	_	_	_	_	_	_	_	_
8	should	should	AUX	MD	VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	shock	shock	VERB	VB	VerbForm=Inf	6	ccomp	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Meredith will say Aaron cares for himself.
# sentence_bad = Aaron will say Meredith cares for himself.
# two_prefix_prefix_good = Meredith will say Aaron cares for
# two_prefix_prefix_bad = Aaron will say Meredith cares for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_387
1	Aaron	Aaron	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Meredith	Meredith	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	for	for	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Brian says some girl boasts about herself.
# sentence_bad = Some girl says Brian boasts about herself.
# two_prefix_prefix_good = Brian says some girl boasts about
# two_prefix_prefix_bad = Some girl says Brian boasts about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_388
1	Some	some	DET	DT	_	2	det	_	_
2	girl	girl	NOUN	NN	Number=Sing	3	nsubj	_	_
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Brian	Brian	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	boasts	boast	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Danielle can't imagine Paul dislikes himself.
# sentence_bad = Paul can't imagine Danielle dislikes himself.
# two_prefix_prefix_good = Danielle can't imagine Paul dislikes
# two_prefix_prefix_bad = Paul can't imagine Danielle dislikes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_389
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Danielle	Danielle	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	dislikes	dislike	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = John can say Karen sounds like herself.
# sentence_bad = Karen can say John sounds like herself.
# two_prefix_prefix_good = John can say Karen sounds like
# two_prefix_prefix_bad = Karen can say John sounds like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_391
1	Karen	Karen	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	John	John	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	like	like	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = A woman might explain Mark won't approach himself.
# sentence_bad = Mark might explain a woman won't approach himself.
# two_prefix_prefix_good = A woman might explain Mark won't approach
# two_prefix_prefix_bad = Mark might explain a woman won't approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_392
1	Mark	Mark	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	_	_
5	woman	woman	NOUN	NN	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	approach	approach	VERB	VB	VerbForm=Inf	3	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Karla thinks Edward flees from himself.
# sentence_bad = Edward thinks Karla flees from himself.
# two_prefix_prefix_good = Karla thinks Edward flees from
# two_prefix_prefix_bad = Edward thinks Karla flees from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_393
1	Edward	Edward	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Karla	Karla	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	flees	flee	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Diana couldn't think Daniel won't respect himself.
# sentence_bad = Daniel couldn't think Diana won't respect himself.
# two_prefix_prefix_good = Diana couldn't think Daniel won't respect
# two_prefix_prefix_bad = Daniel couldn't think Diana won't respect
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_394
1	Daniel	Daniel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Diana	Diana	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	respect	respect	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Elizabeth thinks Brett couldn't stun himself.
# sentence_bad = Brett thinks Elizabeth couldn't stun himself.
# two_prefix_prefix_good = Elizabeth thinks Brett couldn't stun
# two_prefix_prefix_bad = Brett thinks Elizabeth couldn't stun
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_395
1	Brett	Brett	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	stun	stun	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Vanessa should imagine Dan attacks himself.
# sentence_bad = Dan should imagine Vanessa attacks himself.
# two_prefix_prefix_good = Vanessa should imagine Dan attacks
# two_prefix_prefix_bad = Dan should imagine Vanessa attacks
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_396
1	Dan	Dan	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Vanessa	Vanessa	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carmen thinks Phillip listens to himself.
# sentence_bad = Phillip thinks Carmen listens to himself.
# two_prefix_prefix_good = Carmen thinks Phillip listens to
# two_prefix_prefix_bad = Phillip thinks Carmen listens to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_397
1	Phillip	Phillip	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carmen	Carmen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	listens	listen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Steven could think Angela would discover herself.
# sentence_bad = Angela could think Steven would discover herself.
# two_prefix_prefix_good = Steven could think Angela would discover
# two_prefix_prefix_bad = Angela could think Steven would discover
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_398
1	Angela	Angela	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Steven	Steven	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
6	discover	discover	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Alan might imagine this lady observes herself.
# sentence_bad = This lady might imagine Alan observes herself.
# two_prefix_prefix_good = Alan might imagine this lady observes
# two_prefix_prefix_bad = This lady might imagine Alan observes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_399
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	lady	lady	NOUN	NN	Number=Sing	4	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Alan	Alan	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Caroline might say Richard didn't sound like himself.
# sentence_bad = Richard might say Caroline didn't sound like himself.
# two_prefix_prefix_good = Caroline might say Richard didn't sound like
# two_prefix_prefix_bad = Richard might say Caroline didn't sound like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3100
1	Richard	Richard	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Caroline	Caroline	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	sound	sound	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	like	like	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jill's nephew wouldn't imagine Julia should hurt herself.
# sentence_bad = Julia wouldn't imagine Jill's nephew should hurt herself.
# two_prefix_prefix_good = Jill's nephew wouldn't imagine Julia should hurt
# two_prefix_prefix_bad = Julia wouldn't imagine Jill's nephew should hurt
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3101
1	Julia	Julia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Jill's	_	_	_	_	_	_	_	_
5	Jill	Jill	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	nephew	nephew	NOUN	NN	Number=Sing	9	nsubj	_	_
8	should	should	AUX	MD	VerbForm=Fin	9	aux	_	_
9	hurt	hurt	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Raymond does think Danielle hides herself.
# sentence_bad = Danielle does think Raymond hides herself.
# two_prefix_prefix_good = Raymond does think Danielle hides
# two_prefix_prefix_bad = Danielle does think Raymond hides
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3102
1	Danielle	Danielle	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Raymond	Raymond	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hides	hide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Karla can't say James criticizes himself.
# sentence_bad = James can't say Karla criticizes himself.
# two_prefix_prefix_good = Karla can't say James criticizes
# two_prefix_prefix_bad = James can't say Karla criticizes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3103
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Karla	Karla	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Robert didn't say Karla can appreciate herself.
# sentence_bad = Karla didn't say Robert can appreciate herself.
# two_prefix_prefix_good = Robert didn't say Karla can appreciate
# two_prefix_prefix_bad = Karla didn't say Robert can appreciate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3104
1	Karla	Karla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Robert	Robert	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	appreciate	appreciate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Stephanie thinks a man heals himself.
# sentence_bad = A man thinks Stephanie heals himself.
# two_prefix_prefix_good = Stephanie thinks a man heals
# two_prefix_prefix_bad = A man thinks Stephanie heals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3105
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	3	nsubj	_	_
3	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Stephanie	Stephanie	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	heals	heal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Stacey imagines Lucille's grandson didn't respect himself.
# sentence_bad = Lucille's grandson imagines Stacey didn't respect himself.
# two_prefix_prefix_good = Stacey imagines Lucille's grandson didn't respect
# two_prefix_prefix_bad = Lucille's grandson imagines Stacey didn't respect
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3106
1-2	Lucille's	_	_	_	_	_	_	_	_
1	Lucille	Lucille	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandson	grandson	NOUN	NN	Number=Sing	4	nsubj	_	_
4	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Stacey	Stacey	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	didn't	_	_	_	_	_	_	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	respect	respect	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Pamela imagines Bruce flees from himself.
# sentence_bad = Bruce imagines Pamela flees from himself.
# two_prefix_prefix_good = Pamela imagines Bruce flees from
# two_prefix_prefix_bad = Bruce imagines Pamela flees from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3107
1	Bruce	Bruce	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Pamela	Pamela	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	flees	flee	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Danielle might say David admires himself.
# sentence_bad = David might say Danielle admires himself.
# two_prefix_prefix_good = Danielle might say David admires
# two_prefix_prefix_bad = David might say Danielle admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3108
1	David	David	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Danielle	Danielle	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = This actress won't think Scott does heal himself.
# sentence_bad = Scott won't think this actress does heal himself.
# two_prefix_prefix_good = This actress won't think Scott does heal
# two_prefix_prefix_bad = Scott won't think this actress does heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3109
1	Scott	Scott	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	actress	actress	NOUN	NN	Number=Sing	8	nsubj	_	_
7	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
8	heal	heal	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jessica did say Gary did fire himself.
# sentence_bad = Gary did say Jessica did fire himself.
# two_prefix_prefix_good = Jessica did say Gary did fire
# two_prefix_prefix_bad = Gary did say Jessica did fire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3110
1	Gary	Gary	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Jessica	Jessica	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	fire	fire	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Rebecca explains Steven wouldn't impress himself.
# sentence_bad = Steven explains Rebecca wouldn't impress himself.
# two_prefix_prefix_good = Rebecca explains Steven wouldn't impress
# two_prefix_prefix_bad = Steven explains Rebecca wouldn't impress
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3111
1	Steven	Steven	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rebecca	Rebecca	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	impress	impress	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Victoria's nephew explains every girl won't praise herself.
# sentence_bad = Every girl explains Victoria's nephew won't praise herself.
# two_prefix_prefix_good = Victoria's nephew explains every girl won't praise
# two_prefix_prefix_bad = Every girl explains Victoria's nephew won't praise
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3112
1	Every	every	DET	DT	_	2	det	_	_
2	girl	girl	NOUN	NN	Number=Sing	3	nsubj	_	_
3	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4-5	Victoria's	_	_	_	_	_	_	_	_
4	Victoria	Victoria	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	nephew	nephew	NOUN	NN	Number=Sing	9	nsubj	_	_
7-8	won't	_	_	_	_	_	_	_	_
7	wo	will	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	praise	praise	VERB	VB	VerbForm=Inf	3	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Florence's niece won't say Lawrence cures himself.
# sentence_bad = Lawrence won't say Florence's niece cures himself.
# two_prefix_prefix_good = Florence's niece won't say Lawrence cures
# two_prefix_prefix_bad = Lawrence won't say Florence's niece cures
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3113
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Florence's	_	_	_	_	_	_	_	_
5	Florence	Florence	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	niece	niece	NOUN	NN	Number=Sing	8	nsubj	_	_
8	cures	cure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Suzanne wouldn't say Matt won't talk to himself.
# sentence_bad = Matt wouldn't say Suzanne won't talk to himself.
# two_prefix_prefix_good = Suzanne wouldn't say Matt won't talk to
# two_prefix_prefix_bad = Matt wouldn't say Suzanne won't talk to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3114
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Suzanne	Suzanne	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	talk	talk	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	to	to	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Patricia should say Jerry criticizes himself.
# sentence_bad = Jerry should say Patricia criticizes himself.
# two_prefix_prefix_good = Patricia should say Jerry criticizes
# two_prefix_prefix_bad = Jerry should say Patricia criticizes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3115
1	Jerry	Jerry	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Patricia	Patricia	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Christina wouldn't explain Matt talks to himself.
# sentence_bad = Matt wouldn't explain Christina talks to himself.
# two_prefix_prefix_good = Christina wouldn't explain Matt talks to
# two_prefix_prefix_bad = Matt wouldn't explain Christina talks to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3116
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Christina	Christina	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Russell didn't think Elaine escapes from herself.
# sentence_bad = Elaine didn't think Russell escapes from herself.
# two_prefix_prefix_good = Russell didn't think Elaine escapes from
# two_prefix_prefix_bad = Elaine didn't think Russell escapes from
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3117
1	Elaine	Elaine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Russell	Russell	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	escapes	escape	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	from	from	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Katherine says Guy likes himself.
# sentence_bad = Guy says Katherine likes himself.
# two_prefix_prefix_good = Katherine says Guy likes
# two_prefix_prefix_bad = Guy says Katherine likes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3118
1	Guy	Guy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Katherine	Katherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lori thinks Bradley didn't admire himself.
# sentence_bad = Bradley thinks Lori didn't admire himself.
# two_prefix_prefix_good = Lori thinks Bradley didn't admire
# two_prefix_prefix_bad = Bradley thinks Lori didn't admire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3119
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Lori	Lori	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	admire	admire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Holly would think Randolf helps himself.
# sentence_bad = Randolf would think Holly helps himself.
# two_prefix_prefix_good = Holly would think Randolf helps
# two_prefix_prefix_bad = Randolf would think Holly helps
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3120
1	Randolf	Randolf	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Holly	Holly	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Dennis can't imagine Valerie discovers herself.
# sentence_bad = Valerie can't imagine Dennis discovers herself.
# two_prefix_prefix_good = Dennis can't imagine Valerie discovers
# two_prefix_prefix_bad = Valerie can't imagine Dennis discovers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3121
1	Valerie	Valerie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Dennis	Dennis	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	discovers	discover	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Donna says Benjamin should hurt himself.
# sentence_bad = Benjamin says Donna should hurt himself.
# two_prefix_prefix_good = Donna says Benjamin should hurt
# two_prefix_prefix_bad = Benjamin says Donna should hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3122
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Donna	_	_	_	_	_	_	_	_
3	Don	Don	PROPN	NNP	Number=Sing	6	nsubj	_	_
4	na	to	PROPN	NNP	Number=Sing	3	flat	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	hurt	hurt	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Omar thinks Laurie does admire herself.
# sentence_bad = Laurie thinks Omar does admire herself.
# two_prefix_prefix_good = Omar thinks Laurie does admire
# two_prefix_prefix_bad = Laurie thinks Omar does admire
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3123
1	Laurie	Laurie	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Omar	Omar	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	admire	admire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lissa did imagine the guy sees himself.
# sentence_bad = The guy did imagine Lissa sees himself.
# two_prefix_prefix_good = Lissa did imagine the guy sees
# two_prefix_prefix_bad = The guy did imagine Lissa sees
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3124
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	4	nsubj	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lissa	Lissa	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Sandra can say Stephen did hide himself.
# sentence_bad = Stephen can say Sandra did hide himself.
# two_prefix_prefix_good = Sandra can say Stephen did hide
# two_prefix_prefix_bad = Stephen can say Sandra did hide
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3125
1	Stephen	Stephen	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Sandra	Sandra	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	hide	hide	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Amy imagines Bill describes himself.
# sentence_bad = Bill imagines Amy describes himself.
# two_prefix_prefix_good = Amy imagines Bill describes
# two_prefix_prefix_bad = Bill imagines Amy describes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3126
1	Bill	Bill	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Amy	Amy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sherry wouldn't imagine Richard describes himself.
# sentence_bad = Richard wouldn't imagine Sherry describes himself.
# two_prefix_prefix_good = Sherry wouldn't imagine Richard describes
# two_prefix_prefix_bad = Richard wouldn't imagine Sherry describes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3127
1	Richard	Richard	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sherry	Sherry	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Dana explains Matt doesn't embarrass himself.
# sentence_bad = Matt explains Dana doesn't embarrass himself.
# two_prefix_prefix_good = Dana explains Matt doesn't embarrass
# two_prefix_prefix_bad = Matt explains Dana doesn't embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3128
1	Matt	Matt	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Dana	Dana	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	embarrass	embarrass	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kristen thinks James approaches himself.
# sentence_bad = James thinks Kristen approaches himself.
# two_prefix_prefix_good = Kristen thinks James approaches
# two_prefix_prefix_bad = James thinks Kristen approaches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3129
1	James	James	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kristen	Kristen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Grace should explain Gary could complain about himself.
# sentence_bad = Gary should explain Grace could complain about himself.
# two_prefix_prefix_good = Grace should explain Gary could complain about
# two_prefix_prefix_bad = Gary should explain Grace could complain about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3130
1	Gary	Gary	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Grace	Grace	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	complain	complain	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Connie thinks Douglas can listen to himself.
# sentence_bad = Douglas thinks Connie can listen to himself.
# two_prefix_prefix_good = Connie thinks Douglas can listen to
# two_prefix_prefix_bad = Douglas thinks Connie can listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3131
1	Douglas	Douglas	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Connie	Connie	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	listen	listen	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Todd couldn't think Kendra shouldn't reference herself.
# sentence_bad = Kendra couldn't think Todd shouldn't reference herself.
# two_prefix_prefix_good = Todd couldn't think Kendra shouldn't reference
# two_prefix_prefix_bad = Kendra couldn't think Todd shouldn't reference
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3132
1	Kendra	Kendra	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Todd	Todd	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	reference	reference	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Holly did say Jacqueline's nephew can describe himself.
# sentence_bad = Jacqueline's nephew did say Holly can describe himself.
# two_prefix_prefix_good = Holly did say Jacqueline's nephew can describe
# two_prefix_prefix_bad = Jacqueline's nephew did say Holly can describe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3133
1-2	Jacqueline's	_	_	_	_	_	_	_	_
1	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	nephew	nephew	NOUN	NN	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
6	Holly	Holly	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	can	can	AUX	MD	VerbForm=Fin	8	aux	_	_
8	describe	describe	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Holly imagines actresses' grandson doesn't confuse himself.
# sentence_bad = Actresses' grandson imagines Holly doesn't confuse himself.
# two_prefix_prefix_good = Holly imagines actresses' grandson doesn't confuse
# two_prefix_prefix_bad = Actresses' grandson imagines Holly doesn't confuse
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3134
1-2	Actresses'	_	_	_	_	_	_	_	_
1	Actresses	actress	PROPN	NNPS	Number=Plur	3	nmod:poss	_	_
2	'	's	PART	POS	_	1	case	_	_
3	grandson	grandson	NOUN	NN	Number=Sing	4	nsubj	_	_
4	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Holly	Holly	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	confuse	confuse	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Nicole can't think Randolf's grandfather researches himself.
# sentence_bad = Randolf's grandfather can't think Nicole researches himself.
# two_prefix_prefix_good = Nicole can't think Randolf's grandfather researches
# two_prefix_prefix_bad = Randolf's grandfather can't think Nicole researches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3135
1-2	Randolf's	_	_	_	_	_	_	_	_
1	Randolf	Randolf	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandfather	grandfather	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
7	Nicole	Nicole	PROPN	NNP	Number=Sing	8	nsubj	_	_
8	researches	research	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Noah says Nina kisses herself.
# sentence_bad = Nina says Noah kisses herself.
# two_prefix_prefix_good = Noah says Nina kisses
# two_prefix_prefix_bad = Nina says Noah kisses
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3136
1	Nina	Nina	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Noah	Noah	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	kisses	kiss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samuel should explain Melanie would return to herself.
# sentence_bad = Melanie should explain Samuel would return to herself.
# two_prefix_prefix_good = Samuel should explain Melanie would return to
# two_prefix_prefix_bad = Melanie should explain Samuel would return to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3137
1	Melanie	Melanie	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Samuel	Samuel	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
6	return	return	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Noah explains Teresa talks about herself.
# sentence_bad = Teresa explains Noah talks about herself.
# two_prefix_prefix_good = Noah explains Teresa talks about
# two_prefix_prefix_bad = Teresa explains Noah talks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3138
1	Teresa	Teresa	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Noah	Noah	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christine imagines Gary can visit himself.
# sentence_bad = Gary imagines Christine can visit himself.
# two_prefix_prefix_good = Christine imagines Gary can visit
# two_prefix_prefix_bad = Gary imagines Christine can visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3139
1	Gary	Gary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Christine	Christine	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	visit	visit	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Nina thinks Clyde references himself.
# sentence_bad = Clyde thinks Nina references himself.
# two_prefix_prefix_good = Nina thinks Clyde references
# two_prefix_prefix_bad = Clyde thinks Nina references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3140
1	Clyde	Clyde	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nina	Nina	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Ruth might say Brett knows himself.
# sentence_bad = Brett might say Ruth knows himself.
# two_prefix_prefix_good = Ruth might say Brett knows
# two_prefix_prefix_bad = Brett might say Ruth knows
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3141
1	Brett	Brett	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Ruth	Ruth	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Samuel says Elizabeth respects herself.
# sentence_bad = Elizabeth says Samuel respects herself.
# two_prefix_prefix_good = Samuel says Elizabeth respects
# two_prefix_prefix_bad = Elizabeth says Samuel respects
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3142
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kevin's wife didn't explain Erin's son didn't irritate himself.
# sentence_bad = Erin's son didn't explain Kevin's wife didn't irritate himself.
# two_prefix_prefix_good = Kevin's wife didn't explain Erin's son didn't irritate
# two_prefix_prefix_bad = Erin's son didn't explain Kevin's wife didn't irritate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3143
1-2	Erin's	_	_	_	_	_	_	_	_
1	Erin	Erin	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
7-8	Kevin's	_	_	_	_	_	_	_	_
7	Kevin	Kevin	PROPN	NNP	Number=Sing	9	nmod:poss	_	_
8	's	's	PART	POS	_	7	case	_	_
9	wife	wife	NOUN	NN	Number=Sing	12	nsubj	_	_
10-11	didn't	_	_	_	_	_	_	_	_
10	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	12	aux	_	_
11	n't	not	PART	RB	_	12	advmod	_	_
12	irritate	irritate	VERB	VB	VerbForm=Inf	6	ccomp	_	_
13	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	12	obj	_	SpaceAfter=No
14	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Carol says Edward won't describe himself.
# sentence_bad = Edward says Carol won't describe himself.
# two_prefix_prefix_good = Carol says Edward won't describe
# two_prefix_prefix_bad = Edward says Carol won't describe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3144
1	Edward	Edward	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carol	Carol	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	describe	describe	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samantha thinks Mitchell approaches himself.
# sentence_bad = Mitchell thinks Samantha approaches himself.
# two_prefix_prefix_good = Samantha thinks Mitchell approaches
# two_prefix_prefix_bad = Mitchell thinks Samantha approaches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3145
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Samantha	Samantha	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gerald would explain Ann does listen to herself.
# sentence_bad = Ann would explain Gerald does listen to herself.
# two_prefix_prefix_good = Gerald would explain Ann does listen to
# two_prefix_prefix_bad = Ann would explain Gerald does listen to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3146
1	Ann	Ann	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Gerald	Gerald	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	listen	listen	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Tanya did think Liam would disturb himself.
# sentence_bad = Liam did think Tanya would disturb himself.
# two_prefix_prefix_good = Tanya did think Liam would disturb
# two_prefix_prefix_bad = Liam did think Tanya would disturb
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3147
1	Liam	Liam	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tanya	Tanya	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
6	disturb	disturb	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Diana explains Scott's brother will cure himself.
# sentence_bad = Scott's brother explains Diana will cure himself.
# two_prefix_prefix_good = Diana explains Scott's brother will cure
# two_prefix_prefix_bad = Scott's brother explains Diana will cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3148
1-2	Scott's	_	_	_	_	_	_	_	_
1	Scott	Scott	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	brother	brother	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Diana	Diana	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	cure	cure	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = The dancer explains Donald should love himself.
# sentence_bad = Donald explains the dancer should love himself.
# two_prefix_prefix_good = The dancer explains Donald should love
# two_prefix_prefix_bad = Donald explains the dancer should love
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3149
1	Donald	Donald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	_	_
4	dancer	dancer	NOUN	NN	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	love	love	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Suzanne's father says Carmen might watch herself.
# sentence_bad = Carmen says Suzanne's father might watch herself.
# two_prefix_prefix_good = Suzanne's father says Carmen might watch
# two_prefix_prefix_bad = Carmen says Suzanne's father might watch
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3150
1	Carmen	Carmen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Suzanne's	_	_	_	_	_	_	_	_
3	Suzanne	Suzanne	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	father	father	NOUN	NN	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	watch	watch	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Charles can say Marla praises herself.
# sentence_bad = Marla can say Charles praises herself.
# two_prefix_prefix_good = Charles can say Marla praises
# two_prefix_prefix_bad = Marla can say Charles praises
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3151
1	Marla	Marla	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Charles	Charles	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Adam didn't say Theresa's girlfriend insults herself.
# sentence_bad = Theresa's girlfriend didn't say Adam insults herself.
# two_prefix_prefix_good = Adam didn't say Theresa's girlfriend insults
# two_prefix_prefix_bad = Theresa's girlfriend didn't say Adam insults
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3152
1-2	Theresa's	_	_	_	_	_	_	_	_
1	Theresa	Theresa	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	girlfriend	girlfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	Adam	Adam	PROPN	NNP	Number=Sing	8	nsubj	_	_
8	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Mark thinks Kayla doesn't conceal herself.
# sentence_bad = Kayla thinks Mark doesn't conceal herself.
# two_prefix_prefix_good = Mark thinks Kayla doesn't conceal
# two_prefix_prefix_bad = Kayla thinks Mark doesn't conceal
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3153
1	Kayla	Kayla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Mark	Mark	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = A lot of teachers' grandson thinks Valerie hugs herself.
# sentence_bad = Valerie thinks a lot of teachers' grandson hugs herself.
# two_prefix_prefix_good = A lot of teachers' grandson thinks Valerie hugs
# two_prefix_prefix_bad = Valerie thinks a lot of teachers' grandson hugs
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3154
1	Valerie	Valerie	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	_	_
4	lot	lot	NOUN	NN	Number=Sing	9	nsubj	_	_
5	of	of	ADP	IN	_	8	case	_	_
6-7	teachers'	_	_	_	_	_	_	_	_
6	teachers	teacher	NOUN	NNS	Number=Plur	8	nmod:poss	_	_
7	'	's	PART	POS	_	6	case	_	_
8	grandson	grandson	NOUN	NN	Number=Sing	4	nmod	_	_
9	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tamara imagines Scott did shock himself.
# sentence_bad = Scott imagines Tamara did shock himself.
# two_prefix_prefix_good = Tamara imagines Scott did shock
# two_prefix_prefix_bad = Scott imagines Tamara did shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3155
1	Scott	Scott	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tamara	Tamara	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	shock	shock	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Noah imagines Veronica's mother doesn't approach herself.
# sentence_bad = Veronica's mother imagines Noah doesn't approach herself.
# two_prefix_prefix_good = Noah imagines Veronica's mother doesn't approach
# two_prefix_prefix_bad = Veronica's mother imagines Noah doesn't approach
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3156
1-2	Veronica's	_	_	_	_	_	_	_	_
1	Veronica	Veronica	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	mother	mother	NOUN	NN	Number=Sing	4	nsubj	_	_
4	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Noah	Noah	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	approach	approach	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Regina didn't imagine Robert couldn't disturb himself.
# sentence_bad = Robert didn't imagine Regina couldn't disturb himself.
# two_prefix_prefix_good = Regina didn't imagine Robert couldn't disturb
# two_prefix_prefix_bad = Robert didn't imagine Regina couldn't disturb
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3157
1	Robert	Robert	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Regina	Regina	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	couldn't	_	_	_	_	_	_	_	_
6	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	disturb	disturb	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Robert can't say Rhonda will stun herself.
# sentence_bad = Rhonda can't say Robert will stun herself.
# two_prefix_prefix_good = Robert can't say Rhonda will stun
# two_prefix_prefix_bad = Rhonda can't say Robert will stun
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3158
1	Rhonda	Rhonda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Robert	Robert	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	stun	stun	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Martin says Christina works with herself.
# sentence_bad = Christina says Martin works with herself.
# two_prefix_prefix_good = Martin says Christina works with
# two_prefix_prefix_bad = Christina says Martin works with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3159
1	Christina	Christina	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	works	work	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	with	with	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stephanie won't imagine Jeffrey does flee from himself.
# sentence_bad = Jeffrey won't imagine Stephanie does flee from himself.
# two_prefix_prefix_good = Stephanie won't imagine Jeffrey does flee from
# two_prefix_prefix_bad = Jeffrey won't imagine Stephanie does flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3160
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Stephanie	Stephanie	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	flee	flee	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	from	from	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Thomas thinks Becca can't hide herself.
# sentence_bad = Becca thinks Thomas can't hide herself.
# two_prefix_prefix_good = Thomas thinks Becca can't hide
# two_prefix_prefix_bad = Becca thinks Thomas can't hide
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3161
1	Becca	Becca	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Thomas	Thomas	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	hide	hide	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Elaine explains Jason couldn't love himself.
# sentence_bad = Jason explains Elaine couldn't love himself.
# two_prefix_prefix_good = Elaine explains Jason couldn't love
# two_prefix_prefix_bad = Jason explains Elaine couldn't love
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3162
1	Jason	Jason	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Elaine	Elaine	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	love	love	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tina thinks Benjamin loves himself.
# sentence_bad = Benjamin thinks Tina loves himself.
# two_prefix_prefix_good = Tina thinks Benjamin loves
# two_prefix_prefix_bad = Benjamin thinks Tina loves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3163
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tina	Tina	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gina explains Brad should astound himself.
# sentence_bad = Brad explains Gina should astound himself.
# two_prefix_prefix_good = Gina explains Brad should astound
# two_prefix_prefix_bad = Brad explains Gina should astound
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3164
1	Brad	Brad	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gina	Gina	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	astound	astound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Travis couldn't imagine Cheryl shouldn't insult herself.
# sentence_bad = Cheryl couldn't imagine Travis shouldn't insult herself.
# two_prefix_prefix_good = Travis couldn't imagine Cheryl shouldn't insult
# two_prefix_prefix_bad = Cheryl couldn't imagine Travis shouldn't insult
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3165
1	Cheryl	Cheryl	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Travis	Travis	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	insult	insult	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kevin explains Sara questions herself.
# sentence_bad = Sara explains Kevin questions herself.
# two_prefix_prefix_good = Kevin explains Sara questions
# two_prefix_prefix_bad = Sara explains Kevin questions
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3166
1	Sara	Sara	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kevin	Kevin	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Larry explains Alicia shouldn't confuse herself.
# sentence_bad = Alicia explains Larry shouldn't confuse herself.
# two_prefix_prefix_good = Larry explains Alicia shouldn't confuse
# two_prefix_prefix_bad = Alicia explains Larry shouldn't confuse
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3167
1	Alicia	Alicia	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Larry	Larry	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	confuse	confuse	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jill explains Wayne will reference himself.
# sentence_bad = Wayne explains Jill will reference himself.
# two_prefix_prefix_good = Jill explains Wayne will reference
# two_prefix_prefix_bad = Wayne explains Jill will reference
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3168
1	Wayne	Wayne	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jill	Jill	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	reference	reference	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kayla says Richard likes himself.
# sentence_bad = Richard says Kayla likes himself.
# two_prefix_prefix_good = Kayla says Richard likes
# two_prefix_prefix_bad = Richard says Kayla likes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3169
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kayla	Kayla	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Connie could say Noah might worry himself.
# sentence_bad = Noah could say Connie might worry himself.
# two_prefix_prefix_good = Connie could say Noah might worry
# two_prefix_prefix_bad = Noah could say Connie might worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3170
1	Noah	Noah	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Connie	Connie	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	worry	worry	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Brian imagines Carla thinks about herself.
# sentence_bad = Carla imagines Brian thinks about herself.
# two_prefix_prefix_good = Brian imagines Carla thinks about
# two_prefix_prefix_bad = Carla imagines Brian thinks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3171
1	Carla	Carla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Brian	Brian	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Dan thinks Noah's daughter will disgust herself.
# sentence_bad = Noah's daughter thinks Dan will disgust herself.
# two_prefix_prefix_good = Dan thinks Noah's daughter will disgust
# two_prefix_prefix_bad = Noah's daughter thinks Dan will disgust
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3172
1-2	Noah's	_	_	_	_	_	_	_	_
1	Noah	Noah	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	daughter	daughter	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Dan	Dan	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	disgust	disgust	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kevin thinks Susan does forget herself.
# sentence_bad = Susan thinks Kevin does forget herself.
# two_prefix_prefix_good = Kevin thinks Susan does forget
# two_prefix_prefix_bad = Susan thinks Kevin does forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3173
1	Susan	Susan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kevin	Kevin	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	forget	forget	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kristen says George's grandfather can attack himself.
# sentence_bad = George's grandfather says Kristen can attack himself.
# two_prefix_prefix_good = Kristen says George's grandfather can attack
# two_prefix_prefix_bad = George's grandfather says Kristen can attack
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3174
1-2	George's	_	_	_	_	_	_	_	_
1	George	George	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandfather	grandfather	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Kristen	Kristen	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	attack	attack	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Brian might think Katherine can conceal herself.
# sentence_bad = Katherine might think Brian can conceal herself.
# two_prefix_prefix_good = Brian might think Katherine can conceal
# two_prefix_prefix_bad = Katherine might think Brian can conceal
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3175
1	Katherine	Katherine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Brian	Brian	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	conceal	conceal	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Natalie's granddaughter did explain Randolf discusses himself.
# sentence_bad = Randolf did explain Natalie's granddaughter discusses himself.
# two_prefix_prefix_good = Natalie's granddaughter did explain Randolf discusses
# two_prefix_prefix_bad = Randolf did explain Natalie's granddaughter discusses
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3176
1	Randolf	Randolf	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Natalie's	_	_	_	_	_	_	_	_
4	Natalie	Natalie	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	granddaughter	granddaughter	NOUN	NN	Number=Sing	7	nsubj	_	_
7	discusses	discuss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Charles says Anna admires herself.
# sentence_bad = Anna says Charles admires herself.
# two_prefix_prefix_good = Charles says Anna admires
# two_prefix_prefix_bad = Anna says Charles admires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3177
1	Anna	Anna	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Charles	Charles	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Paul should imagine Rebecca could bore herself.
# sentence_bad = Rebecca should imagine Paul could bore herself.
# two_prefix_prefix_good = Paul should imagine Rebecca could bore
# two_prefix_prefix_bad = Rebecca should imagine Paul could bore
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3178
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Paul	Paul	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	bore	bore	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kevin didn't say Carolyn would annoy herself.
# sentence_bad = Carolyn didn't say Kevin would annoy herself.
# two_prefix_prefix_good = Kevin didn't say Carolyn would annoy
# two_prefix_prefix_bad = Carolyn didn't say Kevin would annoy
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3179
1	Carolyn	Carolyn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kevin	Kevin	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	annoy	annoy	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Julia can't think Vincent shouldn't approach himself.
# sentence_bad = Vincent can't think Julia shouldn't approach himself.
# two_prefix_prefix_good = Julia can't think Vincent shouldn't approach
# two_prefix_prefix_bad = Vincent can't think Julia shouldn't approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3180
1	Vincent	Vincent	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Julia	Julia	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	approach	approach	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carlos explains Valerie admires herself.
# sentence_bad = Valerie explains Carlos admires herself.
# two_prefix_prefix_good = Carlos explains Valerie admires
# two_prefix_prefix_bad = Valerie explains Carlos admires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3181
1	Valerie	Valerie	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carlos	Carlos	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Melinda imagines Marcus could impress himself.
# sentence_bad = Marcus imagines Melinda could impress himself.
# two_prefix_prefix_good = Melinda imagines Marcus could impress
# two_prefix_prefix_bad = Marcus imagines Melinda could impress
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3183
1	Marcus	Marcus	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Melinda	Melinda	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	impress	impress	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lori thinks Craig can't bore himself.
# sentence_bad = Craig thinks Lori can't bore himself.
# two_prefix_prefix_good = Lori thinks Craig can't bore
# two_prefix_prefix_bad = Craig thinks Lori can't bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3184
1	Craig	Craig	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Lori	Lori	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	bore	bear	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rachel shouldn't say Daniel didn't visit himself.
# sentence_bad = Daniel shouldn't say Rachel didn't visit himself.
# two_prefix_prefix_good = Rachel shouldn't say Daniel didn't visit
# two_prefix_prefix_bad = Daniel shouldn't say Rachel didn't visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3185
1	Daniel	Daniel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Rachel	Rachel	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	didn't	_	_	_	_	_	_	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	visit	visit	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Becca does say Christopher cares for himself.
# sentence_bad = Christopher does say Becca cares for himself.
# two_prefix_prefix_good = Becca does say Christopher cares for
# two_prefix_prefix_bad = Christopher does say Becca cares for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3186
1	Christopher	Christopher	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Becca	Becca	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	for	for	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kristin shouldn't explain Brett doesn't confuse himself.
# sentence_bad = Brett shouldn't explain Kristin doesn't confuse himself.
# two_prefix_prefix_good = Kristin shouldn't explain Brett doesn't confuse
# two_prefix_prefix_bad = Brett shouldn't explain Kristin doesn't confuse
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3187
1	Brett	Brett	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kristin	Kristin	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	confuse	confuse	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Brett explains Ruth should annoy herself.
# sentence_bad = Ruth explains Brett should annoy herself.
# two_prefix_prefix_good = Brett explains Ruth should annoy
# two_prefix_prefix_bad = Ruth explains Brett should annoy
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3188
1	Ruth	Ruth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Brett	Brett	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	annoy	annoy	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tara did say Dennis wouldn't like himself.
# sentence_bad = Dennis did say Tara wouldn't like himself.
# two_prefix_prefix_good = Tara did say Dennis wouldn't like
# two_prefix_prefix_bad = Dennis did say Tara wouldn't like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3189
1	Dennis	Dennis	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tara	Tara	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	like	like	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Douglas says Pamela's girlfriend finds herself.
# sentence_bad = Pamela's girlfriend says Douglas finds herself.
# two_prefix_prefix_good = Douglas says Pamela's girlfriend finds
# two_prefix_prefix_bad = Pamela's girlfriend says Douglas finds
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3190
1-2	Pamela's	_	_	_	_	_	_	_	_
1	Pamela	Pamela	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	girlfriend	girlfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Douglas	Douglas	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = That woman imagines Guy couldn't care for himself.
# sentence_bad = Guy imagines that woman couldn't care for himself.
# two_prefix_prefix_good = That woman imagines Guy couldn't care for
# two_prefix_prefix_bad = Guy imagines that woman couldn't care for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3191
1	Guy	Guy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	that	that	SCONJ	DT	_	7	mark	_	_
4	woman	woman	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	care	care	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	for	for	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jill says every student's ex-husband wouldn't care for himself.
# sentence_bad = Every student's ex-husband says Jill wouldn't care for himself.
# two_prefix_prefix_good = Jill says every student's ex-husband wouldn't care for
# two_prefix_prefix_bad = Every student's ex-husband says Jill wouldn't care for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3192
1	Every	every	DET	DT	_	2	det	_	_
2-3	student's	_	_	_	_	_	_	_	_
2	student	student	NOUN	NN	Number=Sing	4	nmod:poss	_	_
3	's	's	PART	POS	_	2	case	_	_
4	ex-husband	ex-husband	NOUN	NN	Number=Sing	5	nsubj	_	_
5	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	Jill	Jill	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	wouldn't	_	_	_	_	_	_	_	_
7	would	would	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	care	care	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	for	for	ADP	IN	_	11	case	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Clyde thinks Stacey didn't disgust herself.
# sentence_bad = Stacey thinks Clyde didn't disgust herself.
# two_prefix_prefix_good = Clyde thinks Stacey didn't disgust
# two_prefix_prefix_bad = Stacey thinks Clyde didn't disgust
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3193
1	Stacey	Stacey	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Clyde	Clyde	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	disgust	disgust	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Colleen imagines Russell appreciates himself.
# sentence_bad = Russell imagines Colleen appreciates himself.
# two_prefix_prefix_good = Colleen imagines Russell appreciates
# two_prefix_prefix_bad = Russell imagines Colleen appreciates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3194
1	Russell	Russell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Colleen	Colleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	appreciates	appreciate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Marie thinks William loves himself.
# sentence_bad = William thinks Marie loves himself.
# two_prefix_prefix_good = Marie thinks William loves
# two_prefix_prefix_bad = William thinks Marie loves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3195
1	William	William	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Marie	Marie	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sara explains every boy would appreciate himself.
# sentence_bad = Every boy explains Sara would appreciate himself.
# two_prefix_prefix_good = Sara explains every boy would appreciate
# two_prefix_prefix_bad = Every boy explains Sara would appreciate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3196
1	Every	every	DET	DT	_	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Sara	Sara	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
6	appreciate	appreciate	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Victoria imagines Lawrence didn't argue about himself.
# sentence_bad = Lawrence imagines Victoria didn't argue about himself.
# two_prefix_prefix_good = Victoria imagines Lawrence didn't argue about
# two_prefix_prefix_bad = Lawrence imagines Victoria didn't argue about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3197
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Victoria	Victoria	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	argue	argue	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Diana can think Stephen won't watch himself.
# sentence_bad = Stephen can think Diana won't watch himself.
# two_prefix_prefix_good = Diana can think Stephen won't watch
# two_prefix_prefix_bad = Stephen can think Diana won't watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3198
1	Stephen	Stephen	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Diana	Diana	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	watch	watch	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kenneth explains Susan's niece wouldn't discuss herself.
# sentence_bad = Susan's niece explains Kenneth wouldn't discuss herself.
# two_prefix_prefix_good = Kenneth explains Susan's niece wouldn't discuss
# two_prefix_prefix_bad = Susan's niece explains Kenneth wouldn't discuss
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3199
1-2	Susan's	_	_	_	_	_	_	_	_
1	Susan	Susan	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	niece	niece	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Kenneth	Kenneth	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	discuss	discuss	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Larry shouldn't think Tammy should alarm herself.
# sentence_bad = Tammy shouldn't think Larry should alarm herself.
# two_prefix_prefix_good = Larry shouldn't think Tammy should alarm
# two_prefix_prefix_bad = Tammy shouldn't think Larry should alarm
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3200
1	Tammy	Tammy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Larry	Larry	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	alarm	alarm	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Martha shouldn't explain Bruce might worry himself.
# sentence_bad = Bruce shouldn't explain Martha might worry himself.
# two_prefix_prefix_good = Martha shouldn't explain Bruce might worry
# two_prefix_prefix_bad = Bruce shouldn't explain Martha might worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3201
1	Bruce	Bruce	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Martha	Martha	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	worry	worry	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Heather didn't explain James doesn't research himself.
# sentence_bad = James didn't explain Heather doesn't research himself.
# two_prefix_prefix_good = Heather didn't explain James doesn't research
# two_prefix_prefix_bad = James didn't explain Heather doesn't research
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3202
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Heather	Heather	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	research	research	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = David does say Cynthia heals herself.
# sentence_bad = Cynthia does say David heals herself.
# two_prefix_prefix_good = David does say Cynthia heals
# two_prefix_prefix_bad = Cynthia does say David heals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3203
1	Cynthia	Cynthia	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	David	David	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	heals	heal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Maria could explain Homer won't return to himself.
# sentence_bad = Homer could explain Maria won't return to himself.
# two_prefix_prefix_good = Maria could explain Homer won't return to
# two_prefix_prefix_bad = Homer could explain Maria won't return to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3204
1	Homer	Homer	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Maria	Maria	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	return	return	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nina can't say Charles disturbs himself.
# sentence_bad = Charles can't say Nina disturbs himself.
# two_prefix_prefix_good = Nina can't say Charles disturbs
# two_prefix_prefix_bad = Charles can't say Nina disturbs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3205
1	Charles	Charles	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Nina	Nina	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	disturbs	disturb	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jeffrey imagines some lady won't insult herself.
# sentence_bad = Some lady imagines Jeffrey won't insult herself.
# two_prefix_prefix_good = Jeffrey imagines some lady won't insult
# two_prefix_prefix_bad = Some lady imagines Jeffrey won't insult
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3206
1	Some	some	DET	DT	_	2	det	_	_
2	lady	lady	NOUN	NN	Number=Sing	3	nsubj	_	_
3	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	insult	insult	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Andrea says Jeffrey finds himself.
# sentence_bad = Jeffrey says Andrea finds himself.
# two_prefix_prefix_good = Andrea says Jeffrey finds
# two_prefix_prefix_bad = Jeffrey says Andrea finds
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3207
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stacy can't imagine Richard couldn't talk about himself.
# sentence_bad = Richard can't imagine Stacy couldn't talk about himself.
# two_prefix_prefix_good = Stacy can't imagine Richard couldn't talk about
# two_prefix_prefix_bad = Richard can't imagine Stacy couldn't talk about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3208
1	Richard	Richard	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Stacy	Stacy	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	couldn't	_	_	_	_	_	_	_	_
6	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	talk	talk	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	about	about	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Bruce thinks Jodi visits herself.
# sentence_bad = Jodi thinks Bruce visits herself.
# two_prefix_prefix_good = Bruce thinks Jodi visits
# two_prefix_prefix_bad = Jodi thinks Bruce visits
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3209
1	Jodi	Jodi	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Bruce	Bruce	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	visits	visit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Emily does think Alexander cures himself.
# sentence_bad = Alexander does think Emily cures himself.
# two_prefix_prefix_good = Emily does think Alexander cures
# two_prefix_prefix_bad = Alexander does think Emily cures
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3210
1	Alexander	Alexander	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Emily	Emily	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	cures	cure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Eric explains Tara respects herself.
# sentence_bad = Tara explains Eric respects herself.
# two_prefix_prefix_good = Eric explains Tara respects
# two_prefix_prefix_bad = Tara explains Eric respects
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3211
1	Tara	Tara	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Eric	Eric	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Dennis couldn't think Rachel questions herself.
# sentence_bad = Rachel couldn't think Dennis questions herself.
# two_prefix_prefix_good = Dennis couldn't think Rachel questions
# two_prefix_prefix_bad = Rachel couldn't think Dennis questions
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3212
1	Rachel	Rachel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Dennis	Dennis	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Some dancer might imagine Mark can't shock himself.
# sentence_bad = Mark might imagine some dancer can't shock himself.
# two_prefix_prefix_good = Some dancer might imagine Mark can't shock
# two_prefix_prefix_bad = Mark might imagine some dancer can't shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3213
1	Mark	Mark	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	some	some	DET	DT	_	5	det	_	_
5	dancer	dancer	NOUN	NN	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	shock	shock	VERB	VB	VerbForm=Inf	3	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Alice wouldn't say Clyde knows himself.
# sentence_bad = Clyde wouldn't say Alice knows himself.
# two_prefix_prefix_good = Alice wouldn't say Clyde knows
# two_prefix_prefix_bad = Clyde wouldn't say Alice knows
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3214
1	Clyde	Clyde	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Alice	Alice	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Beverly's niece might think Gregory did remember himself.
# sentence_bad = Gregory might think Beverly's niece did remember himself.
# two_prefix_prefix_good = Beverly's niece might think Gregory did remember
# two_prefix_prefix_bad = Gregory might think Beverly's niece did remember
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3215
1	Gregory	Gregory	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Beverly's	_	_	_	_	_	_	_	_
4	Beverly	Beverly	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	niece	niece	NOUN	NN	Number=Sing	8	nsubj	_	_
7	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
8	remember	remember	VERB	VB	VerbForm=Inf	3	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Martha's sister doesn't think James finds himself.
# sentence_bad = James doesn't think Martha's sister finds himself.
# two_prefix_prefix_good = Martha's sister doesn't think James finds
# two_prefix_prefix_bad = James doesn't think Martha's sister finds
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3216
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Martha's	_	_	_	_	_	_	_	_
5	Martha	Martha	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	sister	sister	NOUN	NN	Number=Sing	8	nsubj	_	_
8	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Sharon thinks Homer could watch himself.
# sentence_bad = Homer thinks Sharon could watch himself.
# two_prefix_prefix_good = Sharon thinks Homer could watch
# two_prefix_prefix_bad = Homer thinks Sharon could watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3217
1	Homer	Homer	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sharon	Sharon	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	watch	watch	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rachel thinks Matt did fire himself.
# sentence_bad = Matt thinks Rachel did fire himself.
# two_prefix_prefix_good = Rachel thinks Matt did fire
# two_prefix_prefix_bad = Matt thinks Rachel did fire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3218
1	Matt	Matt	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rachel	Rachel	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	fire	fire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = A man did think Carolyn scares herself.
# sentence_bad = Carolyn did think a man scares herself.
# two_prefix_prefix_good = A man did think Carolyn scares
# two_prefix_prefix_bad = Carolyn did think a man scares
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3219
1	Carolyn	Carolyn	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	_	_
5	man	man	NOUN	NN	Number=Sing	6	nsubj	_	_
6	scares	scare	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Laura says Bradley sounds like himself.
# sentence_bad = Bradley says Laura sounds like himself.
# two_prefix_prefix_good = Laura says Bradley sounds like
# two_prefix_prefix_bad = Bradley says Laura sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3220
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Laura	Laura	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	like	like	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Amelia thinks Roger complains about himself.
# sentence_bad = Roger thinks Amelia complains about himself.
# two_prefix_prefix_good = Amelia thinks Roger complains about
# two_prefix_prefix_bad = Roger thinks Amelia complains about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3221
1	Roger	Roger	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Amelia	Amelia	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kathleen doesn't say Michael didn't hurt himself.
# sentence_bad = Michael doesn't say Kathleen didn't hurt himself.
# two_prefix_prefix_good = Kathleen doesn't say Michael didn't hurt
# two_prefix_prefix_bad = Michael doesn't say Kathleen didn't hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3222
1	Michael	Michael	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kathleen	Kathleen	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	didn't	_	_	_	_	_	_	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	hurt	hurt	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Diane could explain Gregory's boyfriend thinks about himself.
# sentence_bad = Gregory's boyfriend could explain Diane thinks about himself.
# two_prefix_prefix_good = Diane could explain Gregory's boyfriend thinks about
# two_prefix_prefix_bad = Gregory's boyfriend could explain Diane thinks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3223
1-2	Gregory's	_	_	_	_	_	_	_	_
1	Gregory	Gregory	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6	Diane	Diane	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Ella can imagine Jason sees himself.
# sentence_bad = Jason can imagine Ella sees himself.
# two_prefix_prefix_good = Ella can imagine Jason sees
# two_prefix_prefix_bad = Jason can imagine Ella sees
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3224
1	Jason	Jason	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Ella	Ella	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Margaret didn't say Liam does alarm himself.
# sentence_bad = Liam didn't say Margaret does alarm himself.
# two_prefix_prefix_good = Margaret didn't say Liam does alarm
# two_prefix_prefix_bad = Liam didn't say Margaret does alarm
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3225
1	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Margaret	Margaret	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	alarm	alarm	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Stacey can't think Monet's ex-boyfriend can flee from himself.
# sentence_bad = Monet's ex-boyfriend can't think Stacey can flee from himself.
# two_prefix_prefix_good = Stacey can't think Monet's ex-boyfriend can flee from
# two_prefix_prefix_bad = Monet's ex-boyfriend can't think Stacey can flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3226
1-2	Monet's	_	_	_	_	_	_	_	_
1	Monet	Monet	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
7	Stacey	Stacey	PROPN	NNP	Number=Sing	9	nsubj	_	_
8	can	can	AUX	MD	VerbForm=Fin	9	aux	_	_
9	flee	flee	VERB	VB	VerbForm=Inf	6	ccomp	_	_
10	from	from	ADP	IN	_	11	case	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Melissa thinks Raymond did see himself.
# sentence_bad = Raymond thinks Melissa did see himself.
# two_prefix_prefix_good = Melissa thinks Raymond did see
# two_prefix_prefix_bad = Raymond thinks Melissa did see
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3227
1	Raymond	Raymond	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Melissa	Melissa	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	see	see	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Homer thinks Sandra doesn't respect herself.
# sentence_bad = Sandra thinks Homer doesn't respect herself.
# two_prefix_prefix_good = Homer thinks Sandra doesn't respect
# two_prefix_prefix_bad = Sandra thinks Homer doesn't respect
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3228
1	Sandra	Sandra	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Homer	Homer	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	respect	respect	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Craig thinks Beth won't approach herself.
# sentence_bad = Beth thinks Craig won't approach herself.
# two_prefix_prefix_good = Craig thinks Beth won't approach
# two_prefix_prefix_bad = Beth thinks Craig won't approach
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3229
1	Beth	Beth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Craig	Craig	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	approach	approach	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Natalie shouldn't say Mark can't see himself.
# sentence_bad = Mark shouldn't say Natalie can't see himself.
# two_prefix_prefix_good = Natalie shouldn't say Mark can't see
# two_prefix_prefix_bad = Mark shouldn't say Natalie can't see
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3230
1	Mark	Mark	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Natalie	Natalie	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	see	see	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Phillip explains Eva loves herself.
# sentence_bad = Eva explains Phillip loves herself.
# two_prefix_prefix_good = Phillip explains Eva loves
# two_prefix_prefix_bad = Eva explains Phillip loves
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3231
1	Eva	Eva	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Phillip	Phillip	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Emily could say Wayne will disturb himself.
# sentence_bad = Wayne could say Emily will disturb himself.
# two_prefix_prefix_good = Emily could say Wayne will disturb
# two_prefix_prefix_bad = Wayne could say Emily will disturb
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3232
1	Wayne	Wayne	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Emily	Emily	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	disturb	disturb	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Julia imagines Gary wouldn't find himself.
# sentence_bad = Gary imagines Julia wouldn't find himself.
# two_prefix_prefix_good = Julia imagines Gary wouldn't find
# two_prefix_prefix_bad = Gary imagines Julia wouldn't find
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3233
1	Gary	Gary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Julia	Julia	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	find	find	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kathleen explains Homer will visit himself.
# sentence_bad = Homer explains Kathleen will visit himself.
# two_prefix_prefix_good = Kathleen explains Homer will visit
# two_prefix_prefix_bad = Homer explains Kathleen will visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3234
1	Homer	Homer	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kathleen	Kathleen	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	visit	visit	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Valerie says Gary appreciates himself.
# sentence_bad = Gary says Valerie appreciates himself.
# two_prefix_prefix_good = Valerie says Gary appreciates
# two_prefix_prefix_bad = Gary says Valerie appreciates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3235
1	Gary	Gary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Valerie	Valerie	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	appreciates	appreciate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Aaron wouldn't say Holly talks about herself.
# sentence_bad = Holly wouldn't say Aaron talks about herself.
# two_prefix_prefix_good = Aaron wouldn't say Holly talks about
# two_prefix_prefix_bad = Holly wouldn't say Aaron talks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3236
1	Holly	Holly	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Aaron	Aaron	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Craig thinks an actress returns to herself.
# sentence_bad = An actress thinks Craig returns to herself.
# two_prefix_prefix_good = Craig thinks an actress returns to
# two_prefix_prefix_bad = An actress thinks Craig returns to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3237
1	An	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	3	nsubj	_	_
3	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Craig	Craig	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	returns	return	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nancy's ex-husband imagines Andrea will research herself.
# sentence_bad = Andrea imagines Nancy's ex-husband will research herself.
# two_prefix_prefix_good = Nancy's ex-husband imagines Andrea will research
# two_prefix_prefix_bad = Andrea imagines Nancy's ex-husband will research
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3238
1	Andrea	Andrea	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nancy's	Nancy's	PROPN	NNP	Number=Sing	4	compound	_	_
4	ex-husband	ex-husband	NOUN	NN	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	research	research	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Dawn shouldn't think Clyde praises himself.
# sentence_bad = Clyde shouldn't think Dawn praises himself.
# two_prefix_prefix_good = Dawn shouldn't think Clyde praises
# two_prefix_prefix_bad = Clyde shouldn't think Dawn praises
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3239
1	Clyde	Clyde	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Dawn	Dawn	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kirsten imagines Bruce can think about himself.
# sentence_bad = Bruce imagines Kirsten can think about himself.
# two_prefix_prefix_good = Kirsten imagines Bruce can think about
# two_prefix_prefix_bad = Bruce imagines Kirsten can think about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3240
1	Bruce	Bruce	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kirsten	Kirsten	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christina didn't think Larry shouldn't distract himself.
# sentence_bad = Larry didn't think Christina shouldn't distract himself.
# two_prefix_prefix_good = Christina didn't think Larry shouldn't distract
# two_prefix_prefix_bad = Larry didn't think Christina shouldn't distract
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3241
1	Larry	Larry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Christina	Christina	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	distract	distract	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = That lady should think Liam talks about himself.
# sentence_bad = Liam should think that lady talks about himself.
# two_prefix_prefix_good = That lady should think Liam talks about
# two_prefix_prefix_bad = Liam should think that lady talks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3242
1	Liam	Liam	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	that	that	SCONJ	IN	_	6	mark	_	_
5	lady	lady	NOUN	NN	Number=Sing	6	nsubj	_	_
6	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Samantha couldn't say Noah can aggravate himself.
# sentence_bad = Noah couldn't say Samantha can aggravate himself.
# two_prefix_prefix_good = Samantha couldn't say Noah can aggravate
# two_prefix_prefix_bad = Noah couldn't say Samantha can aggravate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3243
1	Noah	Noah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Samantha	Samantha	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	aggravate	aggravate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Sara says Chad's brother notices himself.
# sentence_bad = Chad's brother says Sara notices himself.
# two_prefix_prefix_good = Sara says Chad's brother notices
# two_prefix_prefix_bad = Chad's brother says Sara notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3244
1-2	Chad's	_	_	_	_	_	_	_	_
1	Chad	Chad	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	brother	brother	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Sara	Sara	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Omar says Kirsten cares for herself.
# sentence_bad = Kirsten says Omar cares for herself.
# two_prefix_prefix_good = Omar says Kirsten cares for
# two_prefix_prefix_bad = Kirsten says Omar cares for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3245
1	Kirsten	Kirsten	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Omar	Omar	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Maria explains Daniel leaves himself.
# sentence_bad = Daniel explains Maria leaves himself.
# two_prefix_prefix_good = Maria explains Daniel leaves
# two_prefix_prefix_bad = Daniel explains Maria leaves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3246
1	Daniel	Daniel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Maria	Maria	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tamara won't say Matt would hire himself.
# sentence_bad = Matt won't say Tamara would hire himself.
# two_prefix_prefix_good = Tamara won't say Matt would hire
# two_prefix_prefix_bad = Matt won't say Tamara would hire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3247
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tamara	Tamara	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	hire	hire	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Deanna thinks Vincent could reference himself.
# sentence_bad = Vincent thinks Deanna could reference himself.
# two_prefix_prefix_good = Deanna thinks Vincent could reference
# two_prefix_prefix_bad = Vincent thinks Deanna could reference
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3248
1	Vincent	Vincent	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Deanna	Deanna	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	reference	reference	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rose says Russell attacks himself.
# sentence_bad = Russell says Rose attacks himself.
# two_prefix_prefix_good = Rose says Russell attacks
# two_prefix_prefix_bad = Russell says Rose attacks
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3249
1	Russell	Russell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rose	Rose	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tamara couldn't explain Curtis sounds like himself.
# sentence_bad = Curtis couldn't explain Tamara sounds like himself.
# two_prefix_prefix_good = Tamara couldn't explain Curtis sounds like
# two_prefix_prefix_bad = Curtis couldn't explain Tamara sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3250
1	Curtis	Curtis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tamara	Tamara	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	like	like	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Paul did say Kendra can hate herself.
# sentence_bad = Kendra did say Paul can hate herself.
# two_prefix_prefix_good = Paul did say Kendra can hate
# two_prefix_prefix_bad = Kendra did say Paul can hate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3251
1	Kendra	Kendra	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Paul	Paul	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	hate	hate	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = George explains Tiffany escapes from herself.
# sentence_bad = Tiffany explains George escapes from herself.
# two_prefix_prefix_good = George explains Tiffany escapes from
# two_prefix_prefix_bad = Tiffany explains George escapes from
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3252
1	Tiffany	Tiffany	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	George	George	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	escapes	escape	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Patrick thinks Claire fires herself.
# sentence_bad = Claire thinks Patrick fires herself.
# two_prefix_prefix_good = Patrick thinks Claire fires
# two_prefix_prefix_bad = Claire thinks Patrick fires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3253
1	Claire	Claire	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Patrick	Patrick	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Maria thinks Bruce shouldn't confuse himself.
# sentence_bad = Bruce thinks Maria shouldn't confuse himself.
# two_prefix_prefix_good = Maria thinks Bruce shouldn't confuse
# two_prefix_prefix_bad = Bruce thinks Maria shouldn't confuse
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3254
1	Bruce	Bruce	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Maria	Maria	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	confuse	confuse	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Douglas imagines Rachel wouldn't complain about herself.
# sentence_bad = Rachel imagines Douglas wouldn't complain about herself.
# two_prefix_prefix_good = Douglas imagines Rachel wouldn't complain about
# two_prefix_prefix_bad = Rachel imagines Douglas wouldn't complain about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3255
1	Rachel	Rachel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Douglas	Douglas	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	complain	complain	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Guy thinks Anna complains about herself.
# sentence_bad = Anna thinks Guy complains about herself.
# two_prefix_prefix_good = Guy thinks Anna complains about
# two_prefix_prefix_bad = Anna thinks Guy complains about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3256
1	Anna	Anna	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Guy	Guy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Theresa explains Keith hides himself.
# sentence_bad = Keith explains Theresa hides himself.
# two_prefix_prefix_good = Theresa explains Keith hides
# two_prefix_prefix_bad = Keith explains Theresa hides
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3257
1	Keith	Keith	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Theresa	Theresa	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hides	hide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Dawn shouldn't explain Liam shouldn't conceal himself.
# sentence_bad = Liam shouldn't explain Dawn shouldn't conceal himself.
# two_prefix_prefix_good = Dawn shouldn't explain Liam shouldn't conceal
# two_prefix_prefix_bad = Liam shouldn't explain Dawn shouldn't conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3258
1	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Dawn	Dawn	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	conceal	conceal	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Sheila thinks Kenneth hugs himself.
# sentence_bad = Kenneth thinks Sheila hugs himself.
# two_prefix_prefix_good = Sheila thinks Kenneth hugs
# two_prefix_prefix_bad = Kenneth thinks Sheila hugs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3259
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sheila	Sheila	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Omar explains Dawn could forget herself.
# sentence_bad = Dawn explains Omar could forget herself.
# two_prefix_prefix_good = Omar explains Dawn could forget
# two_prefix_prefix_bad = Dawn explains Omar could forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3260
1	Dawn	Dawn	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Omar	Omar	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	forget	forget	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Travis thinks Bethany won't worry herself.
# sentence_bad = Bethany thinks Travis won't worry herself.
# two_prefix_prefix_good = Travis thinks Bethany won't worry
# two_prefix_prefix_bad = Bethany thinks Travis won't worry
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3261
1	Bethany	Bethany	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Travis	Travis	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	worry	worry	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Frank did imagine Judy respects herself.
# sentence_bad = Judy did imagine Frank respects herself.
# two_prefix_prefix_good = Frank did imagine Judy respects
# two_prefix_prefix_bad = Judy did imagine Frank respects
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3262
1	Judy	Judy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Frank	Frank	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Holly thinks Wayne could notice himself.
# sentence_bad = Wayne thinks Holly could notice himself.
# two_prefix_prefix_good = Holly thinks Wayne could notice
# two_prefix_prefix_bad = Wayne thinks Holly could notice
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3263
1	Wayne	Wayne	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Holly	Holly	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	notice	notice	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Nina should say George might admire himself.
# sentence_bad = George should say Nina might admire himself.
# two_prefix_prefix_good = Nina should say George might admire
# two_prefix_prefix_bad = George should say Nina might admire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3264
1	George	George	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Nina	Nina	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	admire	admire	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Maria can't think Scott boasts about himself.
# sentence_bad = Scott can't think Maria boasts about himself.
# two_prefix_prefix_good = Maria can't think Scott boasts about
# two_prefix_prefix_bad = Scott can't think Maria boasts about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3265
1	Scott	Scott	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Maria	Maria	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	boasts	boast	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Steven wouldn't imagine Lissa should irritate herself.
# sentence_bad = Lissa wouldn't imagine Steven should irritate herself.
# two_prefix_prefix_good = Steven wouldn't imagine Lissa should irritate
# two_prefix_prefix_bad = Lissa wouldn't imagine Steven should irritate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3266
1	Lissa	Lissa	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Steven	Steven	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	irritate	irritate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Valerie says Marcus couldn't escape from himself.
# sentence_bad = Marcus says Valerie couldn't escape from himself.
# two_prefix_prefix_good = Valerie says Marcus couldn't escape from
# two_prefix_prefix_bad = Marcus says Valerie couldn't escape from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3267
1	Marcus	Marcus	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Valerie	Valerie	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	escape	escape	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	from	from	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Helen's husband explains Samantha escapes from herself.
# sentence_bad = Samantha explains Helen's husband escapes from herself.
# two_prefix_prefix_good = Helen's husband explains Samantha escapes from
# two_prefix_prefix_bad = Samantha explains Helen's husband escapes from
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3268
1	Samantha	Samantha	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Helen's	_	_	_	_	_	_	_	_
3	Helen	Helen	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	husband	husband	NOUN	NN	Number=Sing	6	nsubj	_	_
6	escapes	escape	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	from	from	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Brett says Catherine will insult herself.
# sentence_bad = Catherine says Brett will insult herself.
# two_prefix_prefix_good = Brett says Catherine will insult
# two_prefix_prefix_bad = Catherine says Brett will insult
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3269
1	Catherine	Catherine	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Brett	Brett	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	insult	insult	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = James should think Karen does conceal herself.
# sentence_bad = Karen should think James does conceal herself.
# two_prefix_prefix_good = James should think Karen does conceal
# two_prefix_prefix_bad = Karen should think James does conceal
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3270
1	Karen	Karen	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	James	James	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	conceal	conceal	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kathleen imagines Benjamin shouldn't admire himself.
# sentence_bad = Benjamin imagines Kathleen shouldn't admire himself.
# two_prefix_prefix_good = Kathleen imagines Benjamin shouldn't admire
# two_prefix_prefix_bad = Benjamin imagines Kathleen shouldn't admire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3271
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kathleen	Kathleen	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	admire	admire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Bill's grandmother does explain Michael can bother himself.
# sentence_bad = Michael does explain Bill's grandmother can bother himself.
# two_prefix_prefix_good = Bill's grandmother does explain Michael can bother
# two_prefix_prefix_bad = Michael does explain Bill's grandmother can bother
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3272
1	Michael	Michael	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Bill's	_	_	_	_	_	_	_	_
4	Bill	Bill	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	grandmother	grandmother	NOUN	NN	Number=Sing	8	nsubj	_	_
7	can	can	AUX	MD	VerbForm=Fin	8	aux	_	_
8	bother	bother	VERB	VB	VerbForm=Inf	3	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Christina might say Adam fires himself.
# sentence_bad = Adam might say Christina fires himself.
# two_prefix_prefix_good = Christina might say Adam fires
# two_prefix_prefix_bad = Adam might say Christina fires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3273
1	Adam	Adam	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Christina	Christina	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Debra's ex-girlfriend won't explain Michael might bore himself.
# sentence_bad = Michael won't explain Debra's ex-girlfriend might bore himself.
# two_prefix_prefix_good = Debra's ex-girlfriend won't explain Michael might bore
# two_prefix_prefix_bad = Michael won't explain Debra's ex-girlfriend might bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3274
1	Michael	Michael	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Debra's	_	_	_	_	_	_	_	_
5	Debra	Debra	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	ex-girlfriend	ex-girlfriend	NOUN	NN	Number=Sing	9	nsubj	_	_
8	might	might	AUX	MD	VerbForm=Fin	9	aux	_	_
9	bore	bore	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Lisa imagines Brett should shock himself.
# sentence_bad = Brett imagines Lisa should shock himself.
# two_prefix_prefix_good = Lisa imagines Brett should shock
# two_prefix_prefix_bad = Brett imagines Lisa should shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3275
1	Brett	Brett	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Lisa	Lisa	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	shock	shock	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carl can't say Melinda might complain about herself.
# sentence_bad = Melinda can't say Carl might complain about herself.
# two_prefix_prefix_good = Carl can't say Melinda might complain about
# two_prefix_prefix_bad = Melinda can't say Carl might complain about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3276
1	Melinda	Melinda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carl	Carl	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	complain	complain	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Monica's sister should imagine some boy does watch himself.
# sentence_bad = Some boy should imagine Monica's sister does watch himself.
# two_prefix_prefix_good = Monica's sister should imagine some boy does watch
# two_prefix_prefix_bad = Some boy should imagine Monica's sister does watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3277
1	Some	some	DET	DT	_	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	4	nsubj	_	_
3	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Monica's	_	_	_	_	_	_	_	_
5	Monica	Monica	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	sister	sister	NOUN	NN	Number=Sing	9	nsubj	_	_
8	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
9	watch	watch	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Keith says Donna heals herself.
# sentence_bad = Donna says Keith heals herself.
# two_prefix_prefix_good = Keith says Donna heals
# two_prefix_prefix_bad = Donna says Keith heals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3278
1-2	Donna	_	_	_	_	_	_	_	_
1	Don	Don	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	na	to	PROPN	NNP	Number=Sing	1	flat	_	_
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Keith	Keith	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	heals	heal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Brian couldn't say Amy can't sound like herself.
# sentence_bad = Amy couldn't say Brian can't sound like herself.
# two_prefix_prefix_good = Brian couldn't say Amy can't sound like
# two_prefix_prefix_bad = Amy couldn't say Brian can't sound like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3279
1	Amy	Amy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brian	Brian	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	sound	sound	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	like	like	ADP	IN	_	10	case	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Craig says Angela thinks about herself.
# sentence_bad = Angela says Craig thinks about herself.
# two_prefix_prefix_good = Craig says Angela thinks about
# two_prefix_prefix_bad = Angela says Craig thinks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3280
1	Angela	Angela	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Craig	Craig	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gregory didn't say Maria shouldn't forget herself.
# sentence_bad = Maria didn't say Gregory shouldn't forget herself.
# two_prefix_prefix_good = Gregory didn't say Maria shouldn't forget
# two_prefix_prefix_bad = Maria didn't say Gregory shouldn't forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3281
1	Maria	Maria	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Gregory	Gregory	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	forget	forget	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Marcus thinks Heather hires herself.
# sentence_bad = Heather thinks Marcus hires herself.
# two_prefix_prefix_good = Marcus thinks Heather hires
# two_prefix_prefix_bad = Heather thinks Marcus hires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3282
1	Heather	Heather	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Marcus	Marcus	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hires	hire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Maria thinks Joseph returns to himself.
# sentence_bad = Joseph thinks Maria returns to himself.
# two_prefix_prefix_good = Maria thinks Joseph returns to
# two_prefix_prefix_bad = Joseph thinks Maria returns to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3283
1	Joseph	Joseph	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Maria	Maria	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	returns	return	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Beth imagines Timothy loves himself.
# sentence_bad = Timothy imagines Beth loves himself.
# two_prefix_prefix_good = Beth imagines Timothy loves
# two_prefix_prefix_bad = Timothy imagines Beth loves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3284
1	Timothy	Timothy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Beth	Beth	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Phillip says an actress did question herself.
# sentence_bad = An actress says Phillip did question herself.
# two_prefix_prefix_good = Phillip says an actress did question
# two_prefix_prefix_bad = An actress says Phillip did question
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3285
1	An	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	3	nsubj	_	_
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Phillip	Phillip	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	question	question	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Julie doesn't imagine Paul did investigate himself.
# sentence_bad = Paul doesn't imagine Julie did investigate himself.
# two_prefix_prefix_good = Julie doesn't imagine Paul did investigate
# two_prefix_prefix_bad = Paul doesn't imagine Julie did investigate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3286
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Julie	Julie	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	investigate	investigate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tamara explains Lawrence could embarrass himself.
# sentence_bad = Lawrence explains Tamara could embarrass himself.
# two_prefix_prefix_good = Tamara explains Lawrence could embarrass
# two_prefix_prefix_bad = Lawrence explains Tamara could embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3287
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tamara	Tamara	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	embarrass	embarrass	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Elizabeth explains Rebecca's husband scares himself.
# sentence_bad = Rebecca's husband explains Elizabeth scares himself.
# two_prefix_prefix_good = Elizabeth explains Rebecca's husband scares
# two_prefix_prefix_bad = Rebecca's husband explains Elizabeth scares
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3288
1-2	Rebecca's	_	_	_	_	_	_	_	_
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	husband	husband	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	scares	scare	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Adam wouldn't say Catherine will care for herself.
# sentence_bad = Catherine wouldn't say Adam will care for herself.
# two_prefix_prefix_good = Adam wouldn't say Catherine will care for
# two_prefix_prefix_bad = Catherine wouldn't say Adam will care for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3289
1	Catherine	Catherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Adam	Adam	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	care	care	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	for	for	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Patricia doesn't say Brian talks to himself.
# sentence_bad = Brian doesn't say Patricia talks to himself.
# two_prefix_prefix_good = Patricia doesn't say Brian talks to
# two_prefix_prefix_bad = Brian doesn't say Patricia talks to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3290
1	Brian	Brian	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Patricia	Patricia	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Rachel thinks Marcus should research himself.
# sentence_bad = Marcus thinks Rachel should research himself.
# two_prefix_prefix_good = Rachel thinks Marcus should research
# two_prefix_prefix_bad = Marcus thinks Rachel should research
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3291
1	Marcus	Marcus	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rachel	Rachel	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	research	research	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Melissa might imagine Aaron didn't attack himself.
# sentence_bad = Aaron might imagine Melissa didn't attack himself.
# two_prefix_prefix_good = Melissa might imagine Aaron didn't attack
# two_prefix_prefix_bad = Aaron might imagine Melissa didn't attack
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3292
1	Aaron	Aaron	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Melissa	Melissa	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	attack	attack	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carla might explain Ronald shouldn't care for himself.
# sentence_bad = Ronald might explain Carla shouldn't care for himself.
# two_prefix_prefix_good = Carla might explain Ronald shouldn't care for
# two_prefix_prefix_bad = Ronald might explain Carla shouldn't care for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3293
1	Ronald	Ronald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Carla	Carla	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	care	care	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	for	for	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Travis did explain Rebecca couldn't listen to herself.
# sentence_bad = Rebecca did explain Travis couldn't listen to herself.
# two_prefix_prefix_good = Travis did explain Rebecca couldn't listen to
# two_prefix_prefix_bad = Rebecca did explain Travis couldn't listen to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3294
1	Rebecca	Rebecca	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Travis	Travis	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	listen	listen	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sabrina won't explain Aaron could appreciate himself.
# sentence_bad = Aaron won't explain Sabrina could appreciate himself.
# two_prefix_prefix_good = Sabrina won't explain Aaron could appreciate
# two_prefix_prefix_bad = Aaron won't explain Sabrina could appreciate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3295
1	Aaron	Aaron	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sabrina	Sabrina	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	appreciate	appreciate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = That waitress says this boy thinks about himself.
# sentence_bad = This boy says that waitress thinks about himself.
# two_prefix_prefix_good = That waitress says this boy thinks about
# two_prefix_prefix_bad = This boy says that waitress thinks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3296
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	that	that	SCONJ	IN	_	6	mark	_	_
5	waitress	waitress	NOUN	NN	Number=Sing	6	nsubj	_	_
6	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Vanessa imagines Joel does reference himself.
# sentence_bad = Joel imagines Vanessa does reference himself.
# two_prefix_prefix_good = Vanessa imagines Joel does reference
# two_prefix_prefix_bad = Joel imagines Vanessa does reference
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3297
1	Joel	Joel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Vanessa	Vanessa	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	reference	reference	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Vincent imagines Michelle should approach herself.
# sentence_bad = Michelle imagines Vincent should approach herself.
# two_prefix_prefix_good = Vincent imagines Michelle should approach
# two_prefix_prefix_bad = Michelle imagines Vincent should approach
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3298
1	Michelle	Michelle	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Vincent	Vincent	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	approach	approach	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Margaret explains Carl could scare himself.
# sentence_bad = Carl explains Margaret could scare himself.
# two_prefix_prefix_good = Margaret explains Carl could scare
# two_prefix_prefix_bad = Carl explains Margaret could scare
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3299
1	Carl	Carl	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Margaret	Margaret	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	scare	scare	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Karla couldn't imagine Kevin doesn't annoy himself.
# sentence_bad = Kevin couldn't imagine Karla doesn't annoy himself.
# two_prefix_prefix_good = Karla couldn't imagine Kevin doesn't annoy
# two_prefix_prefix_bad = Kevin couldn't imagine Karla doesn't annoy
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3300
1	Kevin	Kevin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Karla	Karla	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	annoy	annoy	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Natalie would imagine Jeffrey shouldn't disturb himself.
# sentence_bad = Jeffrey would imagine Natalie shouldn't disturb himself.
# two_prefix_prefix_good = Natalie would imagine Jeffrey shouldn't disturb
# two_prefix_prefix_bad = Jeffrey would imagine Natalie shouldn't disturb
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3301
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Natalie	Natalie	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	disturb	disturb	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Connie won't think Liam's husband sees himself.
# sentence_bad = Liam's husband won't think Connie sees himself.
# two_prefix_prefix_good = Connie won't think Liam's husband sees
# two_prefix_prefix_bad = Liam's husband won't think Connie sees
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3302
1-2	Liam's	_	_	_	_	_	_	_	_
1	Liam	Liam	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	husband	husband	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
7	Connie	Connie	PROPN	NNP	Number=Sing	8	nsubj	_	_
8	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Brad did say Kristen reveals herself.
# sentence_bad = Kristen did say Brad reveals herself.
# two_prefix_prefix_good = Brad did say Kristen reveals
# two_prefix_prefix_bad = Kristen did say Brad reveals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3303
1	Kristen	Kristen	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Brad	Brad	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Rebecca imagines Gary flees from himself.
# sentence_bad = Gary imagines Rebecca flees from himself.
# two_prefix_prefix_good = Rebecca imagines Gary flees from
# two_prefix_prefix_bad = Gary imagines Rebecca flees from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3304
1	Gary	Gary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rebecca	Rebecca	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	flees	flee	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	from	from	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Cindy says Grace's nephew might flee from himself.
# sentence_bad = Grace's nephew says Cindy might flee from himself.
# two_prefix_prefix_good = Cindy says Grace's nephew might flee from
# two_prefix_prefix_bad = Grace's nephew says Cindy might flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3305
1-2	Grace's	_	_	_	_	_	_	_	_
1	Grace	Grace	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	nephew	nephew	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Cindy	Cindy	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	flee	flee	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	from	from	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Alicia should imagine Rodney couldn't impress himself.
# sentence_bad = Rodney should imagine Alicia couldn't impress himself.
# two_prefix_prefix_good = Alicia should imagine Rodney couldn't impress
# two_prefix_prefix_bad = Rodney should imagine Alicia couldn't impress
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3306
1	Rodney	Rodney	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Alicia	Alicia	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	impress	impress	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carol says Brett didn't astound himself.
# sentence_bad = Brett says Carol didn't astound himself.
# two_prefix_prefix_good = Carol says Brett didn't astound
# two_prefix_prefix_bad = Brett says Carol didn't astound
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3307
1	Brett	Brett	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carol	Carol	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	astound	astound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Todd thinks Andrea describes herself.
# sentence_bad = Andrea thinks Todd describes herself.
# two_prefix_prefix_good = Todd thinks Andrea describes
# two_prefix_prefix_bad = Andrea thinks Todd describes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3308
1	Andrea	Andrea	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Todd	Todd	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Homer's ex-girlfriend explains Richard does think about himself.
# sentence_bad = Richard explains Homer's ex-girlfriend does think about himself.
# two_prefix_prefix_good = Homer's ex-girlfriend explains Richard does think about
# two_prefix_prefix_bad = Richard explains Homer's ex-girlfriend does think about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3309
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Homer's	_	_	_	_	_	_	_	_
3	Homer	Homer	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	ex-girlfriend	ex-girlfriend	NOUN	NN	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	think	think	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stacy would think Paul's boyfriend sees himself.
# sentence_bad = Paul's boyfriend would think Stacy sees himself.
# two_prefix_prefix_good = Stacy would think Paul's boyfriend sees
# two_prefix_prefix_bad = Paul's boyfriend would think Stacy sees
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3310
1-2	Paul's	_	_	_	_	_	_	_	_
1	Paul	Paul	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
6	Stacy	Stacy	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Larry imagines some actor's granddaughter might disagree with herself.
# sentence_bad = Some actor's granddaughter imagines Larry might disagree with herself.
# two_prefix_prefix_good = Larry imagines some actor's granddaughter might disagree with
# two_prefix_prefix_bad = Some actor's granddaughter imagines Larry might disagree with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3311
1	Some	some	DET	DT	_	2	det	_	_
2-3	actor's	_	_	_	_	_	_	_	_
2	actor	actor	NOUN	NN	Number=Sing	4	nmod:poss	_	_
3	's	's	PART	POS	_	2	case	_	_
4	granddaughter	granddaughter	NOUN	NN	Number=Sing	5	nsubj	_	_
5	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	Larry	Larry	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	might	might	AUX	MD	VerbForm=Fin	8	aux	_	_
8	disagree	disagree	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	with	with	ADP	IN	_	10	case	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Elaine explains Curtis might astound himself.
# sentence_bad = Curtis explains Elaine might astound himself.
# two_prefix_prefix_good = Elaine explains Curtis might astound
# two_prefix_prefix_bad = Curtis explains Elaine might astound
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3312
1	Curtis	Curtis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Elaine	Elaine	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	astound	astound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Randolf didn't imagine Sally questions herself.
# sentence_bad = Sally didn't imagine Randolf questions herself.
# two_prefix_prefix_good = Randolf didn't imagine Sally questions
# two_prefix_prefix_bad = Sally didn't imagine Randolf questions
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3313
1	Sally	Sally	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Randolf	Randolf	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Eric imagines Laura talks about herself.
# sentence_bad = Laura imagines Eric talks about herself.
# two_prefix_prefix_good = Eric imagines Laura talks about
# two_prefix_prefix_bad = Laura imagines Eric talks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3314
1	Laura	Laura	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Eric	Eric	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Naomi says Kevin can sound like himself.
# sentence_bad = Kevin says Naomi can sound like himself.
# two_prefix_prefix_good = Naomi says Kevin can sound like
# two_prefix_prefix_bad = Kevin says Naomi can sound like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3315
1	Kevin	Kevin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Naomi	Naomi	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	sound	sound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	like	like	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carolyn imagines Andrew talks about himself.
# sentence_bad = Andrew imagines Carolyn talks about himself.
# two_prefix_prefix_good = Carolyn imagines Andrew talks about
# two_prefix_prefix_bad = Andrew imagines Carolyn talks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3316
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carolyn	Carolyn	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Laurie imagines Vincent does return to himself.
# sentence_bad = Vincent imagines Laurie does return to himself.
# two_prefix_prefix_good = Laurie imagines Vincent does return to
# two_prefix_prefix_bad = Vincent imagines Laurie does return to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3317
1	Vincent	Vincent	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Laurie	Laurie	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	return	return	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Heather imagines Michael might flee from himself.
# sentence_bad = Michael imagines Heather might flee from himself.
# two_prefix_prefix_good = Heather imagines Michael might flee from
# two_prefix_prefix_bad = Michael imagines Heather might flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3318
1	Michael	Michael	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Heather	Heather	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	flee	flee	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	from	from	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Aaron might think Rachel observes herself.
# sentence_bad = Rachel might think Aaron observes herself.
# two_prefix_prefix_good = Aaron might think Rachel observes
# two_prefix_prefix_bad = Rachel might think Aaron observes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3319
1	Rachel	Rachel	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Aaron	Aaron	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = The boy thinks Candice conceals herself.
# sentence_bad = Candice thinks the boy conceals herself.
# two_prefix_prefix_good = The boy thinks Candice conceals
# two_prefix_prefix_bad = Candice thinks the boy conceals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3320
1	Candice	Candice	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	_	_
4	boy	boy	NOUN	NN	Number=Sing	5	nsubj	_	_
5	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lucille shouldn't say Timothy observes himself.
# sentence_bad = Timothy shouldn't say Lucille observes himself.
# two_prefix_prefix_good = Lucille shouldn't say Timothy observes
# two_prefix_prefix_bad = Timothy shouldn't say Lucille observes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3321
1	Timothy	Timothy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lucille	Lucille	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Irene didn't explain Paul does research himself.
# sentence_bad = Paul didn't explain Irene does research himself.
# two_prefix_prefix_good = Irene didn't explain Paul does research
# two_prefix_prefix_bad = Paul didn't explain Irene does research
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3322
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Irene	Irene	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	research	research	NOUN	NN	Number=Sing	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl:npmod	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Gregory could explain Tonya respects herself.
# sentence_bad = Tonya could explain Gregory respects herself.
# two_prefix_prefix_good = Gregory could explain Tonya respects
# two_prefix_prefix_bad = Tonya could explain Gregory respects
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3323
1	Tonya	Tonya	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Gregory	Gregory	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Becky thinks this boy couldn't approach himself.
# sentence_bad = This boy thinks Becky couldn't approach himself.
# two_prefix_prefix_good = Becky thinks this boy couldn't approach
# two_prefix_prefix_bad = This boy thinks Becky couldn't approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3324
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Becky	Becky	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	approach	approach	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Tammy thinks Denise's son can listen to himself.
# sentence_bad = Denise's son thinks Tammy can listen to himself.
# two_prefix_prefix_good = Tammy thinks Denise's son can listen to
# two_prefix_prefix_bad = Denise's son thinks Tammy can listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3325
1-2	Denise's	_	_	_	_	_	_	_	_
1	Denise	Denise	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Tammy	Tammy	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	listen	listen	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jeffrey might imagine the actress escapes from herself.
# sentence_bad = The actress might imagine Jeffrey escapes from herself.
# two_prefix_prefix_good = Jeffrey might imagine the actress escapes from
# two_prefix_prefix_bad = The actress might imagine Jeffrey escapes from
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3326
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	4	nsubj	_	_
3	might	might	AUX	MD	VerbForm=Fin	4	aux	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	escapes	escape	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	from	from	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Eva didn't think Marcus admires himself.
# sentence_bad = Marcus didn't think Eva admires himself.
# two_prefix_prefix_good = Eva didn't think Marcus admires
# two_prefix_prefix_bad = Marcus didn't think Eva admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3327
1	Marcus	Marcus	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Eva	Eva	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Christine explains Stephen leaves himself.
# sentence_bad = Stephen explains Christine leaves himself.
# two_prefix_prefix_good = Christine explains Stephen leaves
# two_prefix_prefix_bad = Stephen explains Christine leaves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3328
1	Stephen	Stephen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Christine	Christine	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Dawn can explain Gerald does disturb himself.
# sentence_bad = Gerald can explain Dawn does disturb himself.
# two_prefix_prefix_good = Dawn can explain Gerald does disturb
# two_prefix_prefix_bad = Gerald can explain Dawn does disturb
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3329
1	Gerald	Gerald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Dawn	Dawn	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	disturb	disturb	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sarah could imagine Benjamin shouldn't hate himself.
# sentence_bad = Benjamin could imagine Sarah shouldn't hate himself.
# two_prefix_prefix_good = Sarah could imagine Benjamin shouldn't hate
# two_prefix_prefix_bad = Benjamin could imagine Sarah shouldn't hate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3330
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Sarah	Sarah	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	hate	hate	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kathleen thinks Scott hires himself.
# sentence_bad = Scott thinks Kathleen hires himself.
# two_prefix_prefix_good = Kathleen thinks Scott hires
# two_prefix_prefix_bad = Scott thinks Kathleen hires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3331
1	Scott	Scott	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kathleen	Kathleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hires	hire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Richard won't imagine Bethany criticizes herself.
# sentence_bad = Bethany won't imagine Richard criticizes herself.
# two_prefix_prefix_good = Richard won't imagine Bethany criticizes
# two_prefix_prefix_bad = Bethany won't imagine Richard criticizes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3332
1	Bethany	Bethany	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Richard	Richard	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Naomi couldn't imagine Adam doesn't leave himself.
# sentence_bad = Adam couldn't imagine Naomi doesn't leave himself.
# two_prefix_prefix_good = Naomi couldn't imagine Adam doesn't leave
# two_prefix_prefix_bad = Adam couldn't imagine Naomi doesn't leave
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3333
1	Adam	Adam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Naomi	Naomi	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	leave	leave	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Vanessa shouldn't say Paul can't disturb himself.
# sentence_bad = Paul shouldn't say Vanessa can't disturb himself.
# two_prefix_prefix_good = Vanessa shouldn't say Paul can't disturb
# two_prefix_prefix_bad = Paul shouldn't say Vanessa can't disturb
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3334
1	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Vanessa	Vanessa	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	disturb	disturb	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Martin imagines Carla wouldn't upset herself.
# sentence_bad = Carla imagines Martin wouldn't upset herself.
# two_prefix_prefix_good = Martin imagines Carla wouldn't upset
# two_prefix_prefix_bad = Carla imagines Martin wouldn't upset
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3335
1	Carla	Carla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Martin	Martin	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	upset	upset	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sarah couldn't say Douglas helps himself.
# sentence_bad = Douglas couldn't say Sarah helps himself.
# two_prefix_prefix_good = Sarah couldn't say Douglas helps
# two_prefix_prefix_bad = Douglas couldn't say Sarah helps
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3336
1	Douglas	Douglas	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sarah	Sarah	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Donna can say Jerry cares for himself.
# sentence_bad = Jerry can say Donna cares for himself.
# two_prefix_prefix_good = Donna can say Jerry cares for
# two_prefix_prefix_bad = Jerry can say Donna cares for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3337
1	Jerry	Jerry	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Donna	_	_	_	_	_	_	_	_
4	Don	Don	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	na	to	PART	TO	Abbr=Yes	6	mark	_	_
6	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	for	for	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lawrence imagines Beth reveals herself.
# sentence_bad = Beth imagines Lawrence reveals herself.
# two_prefix_prefix_good = Lawrence imagines Beth reveals
# two_prefix_prefix_bad = Beth imagines Lawrence reveals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3338
1	Beth	Beth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Steven would explain Irene talks to herself.
# sentence_bad = Irene would explain Steven talks to herself.
# two_prefix_prefix_good = Steven would explain Irene talks to
# two_prefix_prefix_bad = Irene would explain Steven talks to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3339
1	Irene	Irene	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Steven	Steven	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = George would explain Sally criticizes herself.
# sentence_bad = Sally would explain George criticizes herself.
# two_prefix_prefix_good = George would explain Sally criticizes
# two_prefix_prefix_bad = Sally would explain George criticizes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3340
1	Sally	Sally	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	George	George	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Brenda will say Guy watches himself.
# sentence_bad = Guy will say Brenda watches himself.
# two_prefix_prefix_good = Brenda will say Guy watches
# two_prefix_prefix_bad = Guy will say Brenda watches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3341
1	Guy	Guy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Brenda	Brenda	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Derek will think Debra hugs herself.
# sentence_bad = Debra will think Derek hugs herself.
# two_prefix_prefix_good = Derek will think Debra hugs
# two_prefix_prefix_bad = Debra will think Derek hugs
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3342
1	Debra	Debra	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Derek	Derek	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Thomas can't explain Christina hugs herself.
# sentence_bad = Christina can't explain Thomas hugs herself.
# two_prefix_prefix_good = Thomas can't explain Christina hugs
# two_prefix_prefix_bad = Christina can't explain Thomas hugs
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3343
1	Christina	Christina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Thomas	Thomas	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Ann thinks some guy questions himself.
# sentence_bad = Some guy thinks Ann questions himself.
# two_prefix_prefix_good = Ann thinks some guy questions
# two_prefix_prefix_bad = Some guy thinks Ann questions
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3344
1	Some	some	DET	DT	_	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Ann	Ann	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Susan does imagine Melissa's brother watches himself.
# sentence_bad = Melissa's brother does imagine Susan watches himself.
# two_prefix_prefix_good = Susan does imagine Melissa's brother watches
# two_prefix_prefix_bad = Melissa's brother does imagine Susan watches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3345
1-2	Melissa's	_	_	_	_	_	_	_	_
1	Melissa	Melissa	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	brother	brother	NOUN	NN	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
6	Susan	Susan	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Eric thinks Michelle listens to herself.
# sentence_bad = Michelle thinks Eric listens to herself.
# two_prefix_prefix_good = Eric thinks Michelle listens to
# two_prefix_prefix_bad = Michelle thinks Eric listens to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3346
1	Michelle	Michelle	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Eric	Eric	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	listens	listen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Debra thinks Scott might respect himself.
# sentence_bad = Scott thinks Debra might respect himself.
# two_prefix_prefix_good = Debra thinks Scott might respect
# two_prefix_prefix_bad = Scott thinks Debra might respect
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3347
1	Scott	Scott	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Debra	Debra	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	respect	respect	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Alice could think Dan can hurt himself.
# sentence_bad = Dan could think Alice can hurt himself.
# two_prefix_prefix_good = Alice could think Dan can hurt
# two_prefix_prefix_bad = Dan could think Alice can hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3348
1	Dan	Dan	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Alice	Alice	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	hurt	hurt	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Amelia should explain Thomas researches himself.
# sentence_bad = Thomas should explain Amelia researches himself.
# two_prefix_prefix_good = Amelia should explain Thomas researches
# two_prefix_prefix_bad = Thomas should explain Amelia researches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3349
1	Thomas	Thomas	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Amelia	Amelia	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	researches	research	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Liam thinks Sonia could admire herself.
# sentence_bad = Sonia thinks Liam could admire herself.
# two_prefix_prefix_good = Liam thinks Sonia could admire
# two_prefix_prefix_bad = Sonia thinks Liam could admire
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3350
1	Sonia	Sonia	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Liam	Liam	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	admire	admire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Marcus imagines Tamara attacks herself.
# sentence_bad = Tamara imagines Marcus attacks herself.
# two_prefix_prefix_good = Marcus imagines Tamara attacks
# two_prefix_prefix_bad = Tamara imagines Marcus attacks
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3351
1	Tamara	Tamara	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Marcus	Marcus	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tracy will think Thomas does escape from himself.
# sentence_bad = Thomas will think Tracy does escape from himself.
# two_prefix_prefix_good = Tracy will think Thomas does escape from
# two_prefix_prefix_bad = Thomas will think Tracy does escape from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3352
1	Thomas	Thomas	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tracy	Tracy	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	escape	escape	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	from	from	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Travis can explain Carolyn disturbs herself.
# sentence_bad = Carolyn can explain Travis disturbs herself.
# two_prefix_prefix_good = Travis can explain Carolyn disturbs
# two_prefix_prefix_bad = Carolyn can explain Travis disturbs
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3353
1	Carolyn	Carolyn	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Travis	Travis	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	disturbs	disturb	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Bradley says Deanna thinks about herself.
# sentence_bad = Deanna says Bradley thinks about herself.
# two_prefix_prefix_good = Bradley says Deanna thinks about
# two_prefix_prefix_bad = Deanna says Bradley thinks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3354
1	Deanna	Deanna	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Bradley	Bradley	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Eva's grandmother can imagine Russell knows himself.
# sentence_bad = Russell can imagine Eva's grandmother knows himself.
# two_prefix_prefix_good = Eva's grandmother can imagine Russell knows
# two_prefix_prefix_bad = Russell can imagine Eva's grandmother knows
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3355
1	Russell	Russell	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Eva's	_	_	_	_	_	_	_	_
4	Eva	Eva	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	grandmother	grandmother	NOUN	NN	Number=Sing	7	nsubj	_	_
7	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Laura can explain Kevin doesn't talk to himself.
# sentence_bad = Kevin can explain Laura doesn't talk to himself.
# two_prefix_prefix_good = Laura can explain Kevin doesn't talk to
# two_prefix_prefix_bad = Kevin can explain Laura doesn't talk to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3356
1	Kevin	Kevin	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Laura	Laura	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	doesn't	_	_	_	_	_	_	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	talk	talk	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jodi explains Brian's son listens to himself.
# sentence_bad = Brian's son explains Jodi listens to himself.
# two_prefix_prefix_good = Jodi explains Brian's son listens to
# two_prefix_prefix_bad = Brian's son explains Jodi listens to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3357
1-2	Brian's	_	_	_	_	_	_	_	_
1	Brian	Brian	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Jodi	Jodi	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	listens	listen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Colleen's ex-boyfriend imagines Diana wouldn't discuss herself.
# sentence_bad = Diana imagines Colleen's ex-boyfriend wouldn't discuss herself.
# two_prefix_prefix_good = Colleen's ex-boyfriend imagines Diana wouldn't discuss
# two_prefix_prefix_bad = Diana imagines Colleen's ex-boyfriend wouldn't discuss
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3358
1	Diana	Diana	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Colleen's	_	_	_	_	_	_	_	_
3	Colleen	Colleen	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	discuss	discuss	VERB	VB	VerbForm=Inf	2	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Karen can think Carlos fires himself.
# sentence_bad = Carlos can think Karen fires himself.
# two_prefix_prefix_good = Karen can think Carlos fires
# two_prefix_prefix_bad = Carlos can think Karen fires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3359
1	Carlos	Carlos	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Karen	Karen	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Derek imagines Cindy conceals herself.
# sentence_bad = Cindy imagines Derek conceals herself.
# two_prefix_prefix_good = Derek imagines Cindy conceals
# two_prefix_prefix_bad = Cindy imagines Derek conceals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3360
1	Cindy	Cindy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Derek	Derek	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Robert wouldn't say this driver's ex-wife finds herself.
# sentence_bad = This driver's ex-wife wouldn't say Robert finds herself.
# two_prefix_prefix_good = Robert wouldn't say this driver's ex-wife finds
# two_prefix_prefix_bad = This driver's ex-wife wouldn't say Robert finds
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3361
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2-3	driver's	_	_	_	_	_	_	_	_
2	driver	driver	NOUN	NN	Number=Sing	4	nmod:poss	_	_
3	's	's	PART	POS	_	2	case	_	_
4	ex-wife	ex-wife	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
8	Robert	Robert	PROPN	NNP	Number=Sing	9	nsubj	_	_
9	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	7	punct	_	SpaceAfter=No



# sentence_good = Amanda thinks this senator's ex-boyfriend watches himself.
# sentence_bad = This senator's ex-boyfriend thinks Amanda watches himself.
# two_prefix_prefix_good = Amanda thinks this senator's ex-boyfriend watches
# two_prefix_prefix_bad = This senator's ex-boyfriend thinks Amanda watches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3362
1	This	this	DET	DT	Number=Sing|PronType=Dem	3	det	_	_
2	senator's	senator'	ADJ	NNS	Number=Plur	3	compound	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Amanda	Amanda	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Monica's mother thinks Marcus respects himself.
# sentence_bad = Marcus thinks Monica's mother respects himself.
# two_prefix_prefix_good = Monica's mother thinks Marcus respects
# two_prefix_prefix_bad = Marcus thinks Monica's mother respects
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3363
1	Marcus	Marcus	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Monica's	_	_	_	_	_	_	_	_
3	Monica	Monica	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	mother	mother	NOUN	NN	Number=Sing	6	nsubj	_	_
6	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Elaine's daughter imagines Dennis might escape from himself.
# sentence_bad = Dennis imagines Elaine's daughter might escape from himself.
# two_prefix_prefix_good = Elaine's daughter imagines Dennis might escape from
# two_prefix_prefix_bad = Dennis imagines Elaine's daughter might escape from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3364
1	Dennis	Dennis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Elaine's	_	_	_	_	_	_	_	_
3	Elaine	Elaine	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	daughter	daughter	NOUN	NN	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	escape	escape	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	from	from	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Debra imagines Christopher should heal himself.
# sentence_bad = Christopher imagines Debra should heal himself.
# two_prefix_prefix_good = Debra imagines Christopher should heal
# two_prefix_prefix_bad = Christopher imagines Debra should heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3365
1	Christopher	Christopher	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Debra	Debra	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	heal	heal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = William says Christine wouldn't criticize herself.
# sentence_bad = Christine says William wouldn't criticize herself.
# two_prefix_prefix_good = William says Christine wouldn't criticize
# two_prefix_prefix_bad = Christine says William wouldn't criticize
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3366
1	Christine	Christine	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	William	William	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	criticize	criticize	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Todd thinks Kristin loves herself.
# sentence_bad = Kristin thinks Todd loves herself.
# two_prefix_prefix_good = Todd thinks Kristin loves
# two_prefix_prefix_bad = Kristin thinks Todd loves
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3367
1	Kristin	Kristin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Todd	Todd	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Karla thinks Omar can't research himself.
# sentence_bad = Omar thinks Karla can't research himself.
# two_prefix_prefix_good = Karla thinks Omar can't research
# two_prefix_prefix_bad = Omar thinks Karla can't research
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3368
1	Omar	Omar	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Karla	Karla	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	research	research	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Barbara imagines Paul disturbs himself.
# sentence_bad = Paul imagines Barbara disturbs himself.
# two_prefix_prefix_good = Barbara imagines Paul disturbs
# two_prefix_prefix_bad = Paul imagines Barbara disturbs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3369
1	Paul	Paul	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Barbara	Barbara	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	disturbs	disturb	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Frank thinks Eva didn't confuse herself.
# sentence_bad = Eva thinks Frank didn't confuse herself.
# two_prefix_prefix_good = Frank thinks Eva didn't confuse
# two_prefix_prefix_bad = Eva thinks Frank didn't confuse
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3370
1	Eva	Eva	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Frank	Frank	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	confuse	confuse	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Emily explains Russell insults himself.
# sentence_bad = Russell explains Emily insults himself.
# two_prefix_prefix_good = Emily explains Russell insults
# two_prefix_prefix_bad = Russell explains Emily insults
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3371
1	Russell	Russell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Emily	Emily	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samuel doesn't explain Bethany describes herself.
# sentence_bad = Bethany doesn't explain Samuel describes herself.
# two_prefix_prefix_good = Samuel doesn't explain Bethany describes
# two_prefix_prefix_bad = Bethany doesn't explain Samuel describes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3372
1	Bethany	Bethany	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Samuel	Samuel	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jane should explain Theodore admires himself.
# sentence_bad = Theodore should explain Jane admires himself.
# two_prefix_prefix_good = Jane should explain Theodore admires
# two_prefix_prefix_bad = Theodore should explain Jane admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3373
1	Theodore	Theodore	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Jane	Jane	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Julia says Brett notices himself.
# sentence_bad = Brett says Julia notices himself.
# two_prefix_prefix_good = Julia says Brett notices
# two_prefix_prefix_bad = Brett says Julia notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3374
1	Brett	Brett	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Julia	Julia	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Colleen says Craig's ex-boyfriend reveals himself.
# sentence_bad = Craig's ex-boyfriend says Colleen reveals himself.
# two_prefix_prefix_good = Colleen says Craig's ex-boyfriend reveals
# two_prefix_prefix_bad = Craig's ex-boyfriend says Colleen reveals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3375
1-2	Craig's	_	_	_	_	_	_	_	_
1	Craig	Craig	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Colleen	Colleen	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Some adult's granddaughter will imagine David helps himself.
# sentence_bad = David will imagine some adult's granddaughter helps himself.
# two_prefix_prefix_good = Some adult's granddaughter will imagine David helps
# two_prefix_prefix_bad = David will imagine some adult's granddaughter helps
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3376
1	David	David	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	some	some	DET	DT	_	5	det	_	_
5-6	adult's	_	_	_	_	_	_	_	_
5	adult	adult	NOUN	NN	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	granddaughter	granddaughter	NOUN	NN	Number=Sing	8	nsubj	_	_
8	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Ann could explain Curtis reveals himself.
# sentence_bad = Curtis could explain Ann reveals himself.
# two_prefix_prefix_good = Ann could explain Curtis reveals
# two_prefix_prefix_bad = Curtis could explain Ann reveals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3377
1	Curtis	Curtis	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Ann	Ann	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Thomas says Cheryl doesn't research herself.
# sentence_bad = Cheryl says Thomas doesn't research herself.
# two_prefix_prefix_good = Thomas says Cheryl doesn't research
# two_prefix_prefix_bad = Cheryl says Thomas doesn't research
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3378
1	Cheryl	Cheryl	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Thomas	Thomas	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	research	research	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Every actress should say Michael should heal himself.
# sentence_bad = Michael should say every actress should heal himself.
# two_prefix_prefix_good = Every actress should say Michael should heal
# two_prefix_prefix_bad = Michael should say every actress should heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3379
1	Michael	Michael	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	every	every	DET	DT	_	5	det	_	_
5	actress	actress	NOUN	NN	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	heal	heal	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Mitchell explains Sandra criticizes herself.
# sentence_bad = Sandra explains Mitchell criticizes herself.
# two_prefix_prefix_good = Mitchell explains Sandra criticizes
# two_prefix_prefix_bad = Sandra explains Mitchell criticizes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3380
1	Sandra	Sandra	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = The guy explains Meredith should irritate herself.
# sentence_bad = Meredith explains the guy should irritate herself.
# two_prefix_prefix_good = The guy explains Meredith should irritate
# two_prefix_prefix_bad = Meredith explains the guy should irritate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3381
1	Meredith	Meredith	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	_	_
4	guy	guy	NOUN	NN	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	irritate	irritate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christina did say Phillip wouldn't hug himself.
# sentence_bad = Phillip did say Christina wouldn't hug himself.
# two_prefix_prefix_good = Christina did say Phillip wouldn't hug
# two_prefix_prefix_bad = Phillip did say Christina wouldn't hug
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3382
1	Phillip	Phillip	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Christina	Christina	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	hug	hug	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jill should explain John wouldn't attack himself.
# sentence_bad = John should explain Jill wouldn't attack himself.
# two_prefix_prefix_good = Jill should explain John wouldn't attack
# two_prefix_prefix_bad = John should explain Jill wouldn't attack
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3383
1	John	John	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Jill	Jill	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	attack	attack	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Helen shouldn't say Joseph references himself.
# sentence_bad = Joseph shouldn't say Helen references himself.
# two_prefix_prefix_good = Helen shouldn't say Joseph references
# two_prefix_prefix_bad = Joseph shouldn't say Helen references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3384
1	Joseph	Joseph	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Helen	Helen	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carl can't imagine Deborah conceals herself.
# sentence_bad = Deborah can't imagine Carl conceals herself.
# two_prefix_prefix_good = Carl can't imagine Deborah conceals
# two_prefix_prefix_bad = Deborah can't imagine Carl conceals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3385
1	Deborah	Deborah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carl	Carl	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = That actress imagines Richard boasts about himself.
# sentence_bad = Richard imagines that actress boasts about himself.
# two_prefix_prefix_good = That actress imagines Richard boasts about
# two_prefix_prefix_bad = Richard imagines that actress boasts about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3386
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	that	that	DET	DT	Number=Sing|PronType=Dem	4	det	_	_
4	actress	actress	NOUN	NN	Number=Sing	5	nsubj	_	_
5	boasts	boast	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Teresa explains Jeffrey investigates himself.
# sentence_bad = Jeffrey explains Teresa investigates himself.
# two_prefix_prefix_good = Teresa explains Jeffrey investigates
# two_prefix_prefix_bad = Jeffrey explains Teresa investigates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3387
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Teresa	Teresa	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Theresa wouldn't say Steven does praise himself.
# sentence_bad = Steven wouldn't say Theresa does praise himself.
# two_prefix_prefix_good = Theresa wouldn't say Steven does praise
# two_prefix_prefix_bad = Steven wouldn't say Theresa does praise
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3388
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Theresa	Theresa	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	praise	praise	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Vincent won't say Margaret remembers herself.
# sentence_bad = Margaret won't say Vincent remembers herself.
# two_prefix_prefix_good = Vincent won't say Margaret remembers
# two_prefix_prefix_bad = Margaret won't say Vincent remembers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3389
1	Margaret	Margaret	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Vincent	Vincent	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kathleen thinks Andrew discusses himself.
# sentence_bad = Andrew thinks Kathleen discusses himself.
# two_prefix_prefix_good = Kathleen thinks Andrew discusses
# two_prefix_prefix_bad = Andrew thinks Kathleen discusses
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3390
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kathleen	Kathleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	discusses	discuss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Theresa says Guy couldn't kiss himself.
# sentence_bad = Guy says Theresa couldn't kiss himself.
# two_prefix_prefix_good = Theresa says Guy couldn't kiss
# two_prefix_prefix_bad = Guy says Theresa couldn't kiss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3391
1	Guy	Guy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Theresa	Theresa	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	kiss	kiss	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Cynthia thinks Lawrence can't question himself.
# sentence_bad = Lawrence thinks Cynthia can't question himself.
# two_prefix_prefix_good = Cynthia thinks Lawrence can't question
# two_prefix_prefix_bad = Lawrence thinks Cynthia can't question
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3392
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Cynthia	Cynthia	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	question	question	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christopher's grandson could imagine Catherine can criticize herself.
# sentence_bad = Catherine could imagine Christopher's grandson can criticize herself.
# two_prefix_prefix_good = Christopher's grandson could imagine Catherine can criticize
# two_prefix_prefix_bad = Catherine could imagine Christopher's grandson can criticize
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3393
1	Catherine	Catherine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Christopher's	_	_	_	_	_	_	_	_
4	Christopher	Christopher	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	grandson	grandson	NOUN	NN	Number=Sing	8	nsubj	_	_
7	can	can	AUX	MD	VerbForm=Fin	8	aux	_	_
8	criticize	criticize	VERB	VB	VerbForm=Inf	3	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Heather does imagine Steven respects himself.
# sentence_bad = Steven does imagine Heather respects himself.
# two_prefix_prefix_good = Heather does imagine Steven respects
# two_prefix_prefix_bad = Steven does imagine Heather respects
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3394
1	Steven	Steven	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Heather	Heather	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Robert might explain Christine will research herself.
# sentence_bad = Christine might explain Robert will research herself.
# two_prefix_prefix_good = Robert might explain Christine will research
# two_prefix_prefix_bad = Christine might explain Robert will research
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3395
1	Christine	Christine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Robert	Robert	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	research	research	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Janice wouldn't imagine Joseph didn't think about himself.
# sentence_bad = Joseph wouldn't imagine Janice didn't think about himself.
# two_prefix_prefix_good = Janice wouldn't imagine Joseph didn't think about
# two_prefix_prefix_bad = Joseph wouldn't imagine Janice didn't think about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3396
1	Joseph	Joseph	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Janice	Janice	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	didn't	_	_	_	_	_	_	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	think	think	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	about	about	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Charles didn't imagine Ruth won't describe herself.
# sentence_bad = Ruth didn't imagine Charles won't describe herself.
# two_prefix_prefix_good = Charles didn't imagine Ruth won't describe
# two_prefix_prefix_bad = Ruth didn't imagine Charles won't describe
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3397
1	Ruth	Ruth	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Charles	Charles	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	describe	describe	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Peter's ex-husband imagines Carmen investigates herself.
# sentence_bad = Carmen imagines Peter's ex-husband investigates herself.
# two_prefix_prefix_good = Peter's ex-husband imagines Carmen investigates
# two_prefix_prefix_bad = Carmen imagines Peter's ex-husband investigates
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3398
1	Carmen	Carmen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Peter's	_	_	_	_	_	_	_	_
3	Peter	Peter	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	ex-husband	ex-husband	NOUN	NN	Number=Sing	6	nsubj	_	_
6	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Natalie explains Carlos's brother sees himself.
# sentence_bad = Carlos's brother explains Natalie sees himself.
# two_prefix_prefix_good = Natalie explains Carlos's brother sees
# two_prefix_prefix_bad = Carlos's brother explains Natalie sees
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3399
1	Carlos's	Carlos'	PROPN	NNPS	Number=Plur	2	compound	_	_
2	brother	brother	NOUN	NN	Number=Sing	3	nsubj	_	_
3	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Natalie	Natalie	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Brett doesn't think Nina approaches herself.
# sentence_bad = Nina doesn't think Brett approaches herself.
# two_prefix_prefix_good = Brett doesn't think Nina approaches
# two_prefix_prefix_bad = Nina doesn't think Brett approaches
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3400
1	Nina	Nina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brett	Brett	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Brad says Carolyn did irritate herself.
# sentence_bad = Carolyn says Brad did irritate herself.
# two_prefix_prefix_good = Brad says Carolyn did irritate
# two_prefix_prefix_bad = Carolyn says Brad did irritate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3401
1	Carolyn	Carolyn	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Brad	Brad	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	irritate	irritate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Katherine doesn't explain Joel observes himself.
# sentence_bad = Joel doesn't explain Katherine observes himself.
# two_prefix_prefix_good = Katherine doesn't explain Joel observes
# two_prefix_prefix_bad = Joel doesn't explain Katherine observes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3402
1	Joel	Joel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Katherine	Katherine	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Linda says Ronald won't shock himself.
# sentence_bad = Ronald says Linda won't shock himself.
# two_prefix_prefix_good = Linda says Ronald won't shock
# two_prefix_prefix_bad = Ronald says Linda won't shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3403
1	Ronald	Ronald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Linda	Linda	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	shock	shock	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carmen doesn't imagine Christopher would discover himself.
# sentence_bad = Christopher doesn't imagine Carmen would discover himself.
# two_prefix_prefix_good = Carmen doesn't imagine Christopher would discover
# two_prefix_prefix_bad = Christopher doesn't imagine Carmen would discover
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3404
1	Christopher	Christopher	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carmen	Carmen	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	discover	discover	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tiffany says William will approach himself.
# sentence_bad = William says Tiffany will approach himself.
# two_prefix_prefix_good = Tiffany says William will approach
# two_prefix_prefix_bad = William says Tiffany will approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3405
1	William	William	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tiffany	Tiffany	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	approach	approach	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Amelia might imagine Samuel notices himself.
# sentence_bad = Samuel might imagine Amelia notices himself.
# two_prefix_prefix_good = Amelia might imagine Samuel notices
# two_prefix_prefix_bad = Samuel might imagine Amelia notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3406
1	Samuel	Samuel	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Amelia	Amelia	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Charles thinks Monica cares for herself.
# sentence_bad = Monica thinks Charles cares for herself.
# two_prefix_prefix_good = Charles thinks Monica cares for
# two_prefix_prefix_bad = Monica thinks Charles cares for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3407
1	Monica	Monica	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Charles	Charles	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samantha should think Frank should visit himself.
# sentence_bad = Frank should think Samantha should visit himself.
# two_prefix_prefix_good = Samantha should think Frank should visit
# two_prefix_prefix_bad = Frank should think Samantha should visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3408
1	Frank	Frank	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Samantha	Samantha	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	visit	visit	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Leslie won't think Scott won't listen to himself.
# sentence_bad = Scott won't think Leslie won't listen to himself.
# two_prefix_prefix_good = Leslie won't think Scott won't listen to
# two_prefix_prefix_bad = Scott won't think Leslie won't listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3409
1	Scott	Scott	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Leslie	Leslie	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	listen	listen	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	to	to	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = The boy says Sarah listens to herself.
# sentence_bad = Sarah says the boy listens to herself.
# two_prefix_prefix_good = The boy says Sarah listens to
# two_prefix_prefix_bad = Sarah says the boy listens to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3410
1	Sarah	Sarah	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	_	_
4	boy	boy	NOUN	NN	Number=Sing	5	nsubj	_	_
5	listens	listen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gary imagines Cheryl should see herself.
# sentence_bad = Cheryl imagines Gary should see herself.
# two_prefix_prefix_good = Gary imagines Cheryl should see
# two_prefix_prefix_bad = Cheryl imagines Gary should see
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3411
1	Cheryl	Cheryl	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gary	Gary	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	see	see	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Keith doesn't imagine Julia praises herself.
# sentence_bad = Julia doesn't imagine Keith praises herself.
# two_prefix_prefix_good = Keith doesn't imagine Julia praises
# two_prefix_prefix_bad = Julia doesn't imagine Keith praises
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3412
1	Julia	Julia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Keith	Keith	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Travis might imagine Rose couldn't listen to herself.
# sentence_bad = Rose might imagine Travis couldn't listen to herself.
# two_prefix_prefix_good = Travis might imagine Rose couldn't listen to
# two_prefix_prefix_bad = Rose might imagine Travis couldn't listen to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3413
1	Rose	Rose	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Travis	Travis	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	listen	listen	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Martin imagines Christine can't know herself.
# sentence_bad = Christine imagines Martin can't know herself.
# two_prefix_prefix_good = Martin imagines Christine can't know
# two_prefix_prefix_bad = Christine imagines Martin can't know
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3414
1	Christine	Christine	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Martin	Martin	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	know	know	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Julie explains Natalie's grandson will approach himself.
# sentence_bad = Natalie's grandson explains Julie will approach himself.
# two_prefix_prefix_good = Julie explains Natalie's grandson will approach
# two_prefix_prefix_bad = Natalie's grandson explains Julie will approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3415
1-2	Natalie's	_	_	_	_	_	_	_	_
1	Natalie	Natalie	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandson	grandson	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Julie	Julie	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	approach	approach	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Marie doesn't explain Joseph will reveal himself.
# sentence_bad = Joseph doesn't explain Marie will reveal himself.
# two_prefix_prefix_good = Marie doesn't explain Joseph will reveal
# two_prefix_prefix_bad = Joseph doesn't explain Marie will reveal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3416
1	Joseph	Joseph	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Marie	Marie	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	reveal	reveal	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Liam explains Erin knows herself.
# sentence_bad = Erin explains Liam knows herself.
# two_prefix_prefix_good = Liam explains Erin knows
# two_prefix_prefix_bad = Erin explains Liam knows
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3417
1	Erin	Erin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Benjamin explains Heather couldn't scare herself.
# sentence_bad = Heather explains Benjamin couldn't scare herself.
# two_prefix_prefix_good = Benjamin explains Heather couldn't scare
# two_prefix_prefix_bad = Heather explains Benjamin couldn't scare
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3418
1	Heather	Heather	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Benjamin	Benjamin	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	scare	scare	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Deanna imagines Randolf won't irritate himself.
# sentence_bad = Randolf imagines Deanna won't irritate himself.
# two_prefix_prefix_good = Deanna imagines Randolf won't irritate
# two_prefix_prefix_bad = Randolf imagines Deanna won't irritate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3419
1	Randolf	Randolf	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Deanna	Deanna	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	irritate	irritate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Brad didn't say Paul's wife should escape from herself.
# sentence_bad = Paul's wife didn't say Brad should escape from herself.
# two_prefix_prefix_good = Brad didn't say Paul's wife should escape from
# two_prefix_prefix_bad = Paul's wife didn't say Brad should escape from
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3420
1-2	Paul's	_	_	_	_	_	_	_	_
1	Paul	Paul	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	wife	wife	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	Brad	Brad	PROPN	NNP	Number=Sing	9	nsubj	_	_
8	should	should	AUX	MD	VerbForm=Fin	9	aux	_	_
9	escape	escape	VERB	VB	VerbForm=Inf	6	ccomp	_	_
10	from	from	ADP	IN	_	11	case	_	_
11	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Karla won't think Matt sounds like himself.
# sentence_bad = Matt won't think Karla sounds like himself.
# two_prefix_prefix_good = Karla won't think Matt sounds like
# two_prefix_prefix_bad = Matt won't think Karla sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3421
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Karla	Karla	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	like	like	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carolyn thinks Matt did discuss himself.
# sentence_bad = Matt thinks Carolyn did discuss himself.
# two_prefix_prefix_good = Carolyn thinks Matt did discuss
# two_prefix_prefix_bad = Matt thinks Carolyn did discuss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3422
1	Matt	Matt	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carolyn	Carolyn	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	discuss	discuss	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Suzanne does think Mitchell can appreciate himself.
# sentence_bad = Mitchell does think Suzanne can appreciate himself.
# two_prefix_prefix_good = Suzanne does think Mitchell can appreciate
# two_prefix_prefix_bad = Mitchell does think Suzanne can appreciate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3423
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Suzanne	Suzanne	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	appreciate	appreciate	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Diana could imagine Gregory returns to himself.
# sentence_bad = Gregory could imagine Diana returns to himself.
# two_prefix_prefix_good = Diana could imagine Gregory returns to
# two_prefix_prefix_bad = Gregory could imagine Diana returns to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3424
1	Gregory	Gregory	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Diana	Diana	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	returns	return	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Deanna should explain Gerald might flee from himself.
# sentence_bad = Gerald should explain Deanna might flee from himself.
# two_prefix_prefix_good = Deanna should explain Gerald might flee from
# two_prefix_prefix_bad = Gerald should explain Deanna might flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3425
1	Gerald	Gerald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Deanna	Deanna	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	flee	flee	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	from	from	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sonia says Phillip doesn't forget himself.
# sentence_bad = Phillip says Sonia doesn't forget himself.
# two_prefix_prefix_good = Sonia says Phillip doesn't forget
# two_prefix_prefix_bad = Phillip says Sonia doesn't forget
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3426
1	Phillip	Phillip	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sonia	Sonia	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	forget	forget	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Anna wouldn't say Larry could heal himself.
# sentence_bad = Larry wouldn't say Anna could heal himself.
# two_prefix_prefix_good = Anna wouldn't say Larry could heal
# two_prefix_prefix_bad = Larry wouldn't say Anna could heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3427
1	Larry	Larry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Anna	Anna	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	heal	heal	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Danielle imagines every boy talks to himself.
# sentence_bad = Every boy imagines Danielle talks to himself.
# two_prefix_prefix_good = Danielle imagines every boy talks to
# two_prefix_prefix_bad = Every boy imagines Danielle talks to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3428
1	Every	every	DET	DT	_	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Danielle	Danielle	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Stacy will explain Brian talks about himself.
# sentence_bad = Brian will explain Stacy talks about himself.
# two_prefix_prefix_good = Stacy will explain Brian talks about
# two_prefix_prefix_bad = Brian will explain Stacy talks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3429
1	Brian	Brian	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Stacy	Stacy	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Paul wouldn't imagine Rose knows herself.
# sentence_bad = Rose wouldn't imagine Paul knows herself.
# two_prefix_prefix_good = Paul wouldn't imagine Rose knows
# two_prefix_prefix_bad = Rose wouldn't imagine Paul knows
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3430
1	Rose	Rose	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Paul	Paul	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Monica does say Roger leaves himself.
# sentence_bad = Roger does say Monica leaves himself.
# two_prefix_prefix_good = Monica does say Roger leaves
# two_prefix_prefix_bad = Roger does say Monica leaves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3431
1	Roger	Roger	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Monica	Monica	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nancy wouldn't imagine Mark can't kiss himself.
# sentence_bad = Mark wouldn't imagine Nancy can't kiss himself.
# two_prefix_prefix_good = Nancy wouldn't imagine Mark can't kiss
# two_prefix_prefix_bad = Mark wouldn't imagine Nancy can't kiss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3432
1	Mark	Mark	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Nancy	Nancy	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	kiss	kiss	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Rodney says Suzanne should leave herself.
# sentence_bad = Suzanne says Rodney should leave herself.
# two_prefix_prefix_good = Rodney says Suzanne should leave
# two_prefix_prefix_bad = Suzanne says Rodney should leave
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3433
1	Suzanne	Suzanne	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rodney	Rodney	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	leave	leave	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Homer explains Catherine attacks herself.
# sentence_bad = Catherine explains Homer attacks herself.
# two_prefix_prefix_good = Homer explains Catherine attacks
# two_prefix_prefix_bad = Catherine explains Homer attacks
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3434
1	Catherine	Catherine	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Homer	Homer	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Alice says Donald doesn't remember himself.
# sentence_bad = Donald says Alice doesn't remember himself.
# two_prefix_prefix_good = Alice says Donald doesn't remember
# two_prefix_prefix_bad = Donald says Alice doesn't remember
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3435
1	Donald	Donald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Alice	Alice	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	remember	remember	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sandra won't think Brad can escape from himself.
# sentence_bad = Brad won't think Sandra can escape from himself.
# two_prefix_prefix_good = Sandra won't think Brad can escape from
# two_prefix_prefix_bad = Brad won't think Sandra can escape from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3436
1	Brad	Brad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sandra	Sandra	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	escape	escape	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	from	from	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Lisa wouldn't think Jerry should hug himself.
# sentence_bad = Jerry wouldn't think Lisa should hug himself.
# two_prefix_prefix_good = Lisa wouldn't think Jerry should hug
# two_prefix_prefix_bad = Jerry wouldn't think Lisa should hug
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3437
1	Jerry	Jerry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lisa	Lisa	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	hug	hug	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Catherine thinks Travis will worry himself.
# sentence_bad = Travis thinks Catherine will worry himself.
# two_prefix_prefix_good = Catherine thinks Travis will worry
# two_prefix_prefix_bad = Travis thinks Catherine will worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3438
1	Travis	Travis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Catherine	Catherine	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	worry	worry	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = The waitress can explain Frank discovers himself.
# sentence_bad = Frank can explain the waitress discovers himself.
# two_prefix_prefix_good = The waitress can explain Frank discovers
# two_prefix_prefix_bad = Frank can explain the waitress discovers
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3439
1	Frank	Frank	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	_	_
5	waitress	waitress	NOUN	NN	Number=Sing	6	nsubj	_	_
6	discovers	discover	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Laura will explain Frank can't aggravate himself.
# sentence_bad = Frank will explain Laura can't aggravate himself.
# two_prefix_prefix_good = Laura will explain Frank can't aggravate
# two_prefix_prefix_bad = Frank will explain Laura can't aggravate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3440
1	Frank	Frank	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Laura	Laura	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	can't	_	_	_	_	_	_	_	_
5	ca	can	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	aggravate	aggravate	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Grace could say a boy can't approach himself.
# sentence_bad = A boy could say Grace can't approach himself.
# two_prefix_prefix_good = Grace could say a boy can't approach
# two_prefix_prefix_bad = A boy could say Grace can't approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3441
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	4	nsubj	_	_
3	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Grace	Grace	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	approach	approach	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Andrea thinks Bradley would disgust himself.
# sentence_bad = Bradley thinks Andrea would disgust himself.
# two_prefix_prefix_good = Andrea thinks Bradley would disgust
# two_prefix_prefix_bad = Bradley thinks Andrea would disgust
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3442
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Andrea	Andrea	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	disgust	disgust	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Amy says Mitchell hugs himself.
# sentence_bad = Mitchell says Amy hugs himself.
# two_prefix_prefix_good = Amy says Mitchell hugs
# two_prefix_prefix_bad = Mitchell says Amy hugs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3443
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Amy	Amy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Beverly's ex-husband couldn't say Kendra didn't scare herself.
# sentence_bad = Kendra couldn't say Beverly's ex-husband didn't scare herself.
# two_prefix_prefix_good = Beverly's ex-husband couldn't say Kendra didn't scare
# two_prefix_prefix_bad = Kendra couldn't say Beverly's ex-husband didn't scare
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3444
1	Kendra	Kendra	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Beverly's	_	_	_	_	_	_	_	_
5	Beverly	Beverly	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	ex-husband	ex-husband	NOUN	NN	Number=Sing	10	nsubj	_	_
8-9	didn't	_	_	_	_	_	_	_	_
8	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	scare	scare	VERB	VB	VerbForm=Inf	4	ccomp	_	_
11	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Julie will say Guy finds himself.
# sentence_bad = Guy will say Julie finds himself.
# two_prefix_prefix_good = Julie will say Guy finds
# two_prefix_prefix_bad = Guy will say Julie finds
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3445
1	Guy	Guy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Julie	Julie	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Vanessa can't explain Donald can't shock himself.
# sentence_bad = Donald can't explain Vanessa can't shock himself.
# two_prefix_prefix_good = Vanessa can't explain Donald can't shock
# two_prefix_prefix_bad = Donald can't explain Vanessa can't shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3446
1	Donald	Donald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Vanessa	Vanessa	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	shock	shock	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Peter explains Paula should praise herself.
# sentence_bad = Paula explains Peter should praise herself.
# two_prefix_prefix_good = Peter explains Paula should praise
# two_prefix_prefix_bad = Paula explains Peter should praise
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3447
1	Paula	Paula	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Peter	Peter	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	praise	praise	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tonya can think Charles will kiss himself.
# sentence_bad = Charles can think Tonya will kiss himself.
# two_prefix_prefix_good = Tonya can think Charles will kiss
# two_prefix_prefix_bad = Charles can think Tonya will kiss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3448
1	Charles	Charles	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tonya	Tonya	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	kiss	kiss	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Liam did explain Sheila hates herself.
# sentence_bad = Sheila did explain Liam hates herself.
# two_prefix_prefix_good = Liam did explain Sheila hates
# two_prefix_prefix_bad = Sheila did explain Liam hates
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3449
1	Sheila	Sheila	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Liam	Liam	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Paula won't imagine Kevin does approach himself.
# sentence_bad = Kevin won't imagine Paula does approach himself.
# two_prefix_prefix_good = Paula won't imagine Kevin does approach
# two_prefix_prefix_bad = Kevin won't imagine Paula does approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3450
1	Kevin	Kevin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Paula	Paula	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	approach	approach	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Victoria did say Benjamin won't argue about himself.
# sentence_bad = Benjamin did say Victoria won't argue about himself.
# two_prefix_prefix_good = Victoria did say Benjamin won't argue about
# two_prefix_prefix_bad = Benjamin did say Victoria won't argue about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3451
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Victoria	Victoria	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	argue	argue	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Julie thinks Wayne questions himself.
# sentence_bad = Wayne thinks Julie questions himself.
# two_prefix_prefix_good = Julie thinks Wayne questions
# two_prefix_prefix_bad = Wayne thinks Julie questions
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3452
1	Wayne	Wayne	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Julie	Julie	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Anna wouldn't explain Douglas doesn't research himself.
# sentence_bad = Douglas wouldn't explain Anna doesn't research himself.
# two_prefix_prefix_good = Anna wouldn't explain Douglas doesn't research
# two_prefix_prefix_bad = Douglas wouldn't explain Anna doesn't research
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3453
1	Douglas	Douglas	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Anna	Anna	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	research	research	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Todd's granddaughter didn't say Gary sounds like himself.
# sentence_bad = Gary didn't say Todd's granddaughter sounds like himself.
# two_prefix_prefix_good = Todd's granddaughter didn't say Gary sounds like
# two_prefix_prefix_bad = Gary didn't say Todd's granddaughter sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3454
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Todd's	_	_	_	_	_	_	_	_
5	Todd	Todd	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	granddaughter	granddaughter	NOUN	NN	Number=Sing	8	nsubj	_	_
8	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
9	like	like	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Peter does say Deanna talks to herself.
# sentence_bad = Deanna does say Peter talks to herself.
# two_prefix_prefix_good = Peter does say Deanna talks to
# two_prefix_prefix_bad = Deanna does say Peter talks to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3455
1	Deanna	Deanna	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Peter	Peter	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jennifer can't think Maria's nephew flees from himself.
# sentence_bad = Maria's nephew can't think Jennifer flees from himself.
# two_prefix_prefix_good = Jennifer can't think Maria's nephew flees from
# two_prefix_prefix_bad = Maria's nephew can't think Jennifer flees from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3456
1-2	Maria's	_	_	_	_	_	_	_	_
1	Maria	Maria	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	nephew	nephew	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
7	Jennifer	Jennifer	PROPN	NNP	Number=Sing	8	nsubj	_	_
8	flees	flee	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
9	from	from	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Susan says Kenneth will praise himself.
# sentence_bad = Kenneth says Susan will praise himself.
# two_prefix_prefix_good = Susan says Kenneth will praise
# two_prefix_prefix_bad = Kenneth says Susan will praise
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3457
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Susan	Susan	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	praise	praise	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gina didn't imagine the man would dislike himself.
# sentence_bad = The man didn't imagine Gina would dislike himself.
# two_prefix_prefix_good = Gina didn't imagine the man would dislike
# two_prefix_prefix_bad = The man didn't imagine Gina would dislike
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3458
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
3-4	didn't	_	_	_	_	_	_	_	_
3	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
4	n't	not	PART	RB	_	5	advmod	_	_
5	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
6	Gina	Gina	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
8	dislike	dislike	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Amanda should think Connie's son doesn't scare himself.
# sentence_bad = Connie's son should think Amanda doesn't scare himself.
# two_prefix_prefix_good = Amanda should think Connie's son doesn't scare
# two_prefix_prefix_bad = Connie's son should think Amanda doesn't scare
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3459
1-2	Connie's	_	_	_	_	_	_	_	_
1	Connie	Connie	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
6	Amanda	Amanda	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	doesn't	_	_	_	_	_	_	_	_
7	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	scare	scare	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Mary couldn't think Bruce visits himself.
# sentence_bad = Bruce couldn't think Mary visits himself.
# two_prefix_prefix_good = Mary couldn't think Bruce visits
# two_prefix_prefix_bad = Bruce couldn't think Mary visits
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3460
1	Bruce	Bruce	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Mary	Mary	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	visits	visit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Naomi could think Jerry heals himself.
# sentence_bad = Jerry could think Naomi heals himself.
# two_prefix_prefix_good = Naomi could think Jerry heals
# two_prefix_prefix_bad = Jerry could think Naomi heals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3461
1	Jerry	Jerry	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Naomi	Naomi	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	heals	heal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Natalie says John investigates himself.
# sentence_bad = John says Natalie investigates himself.
# two_prefix_prefix_good = Natalie says John investigates
# two_prefix_prefix_bad = John says Natalie investigates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3462
1	John	John	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Natalie	Natalie	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lucille won't think Melinda's ex-boyfriend should hire himself.
# sentence_bad = Melinda's ex-boyfriend won't think Lucille should hire himself.
# two_prefix_prefix_good = Lucille won't think Melinda's ex-boyfriend should hire
# two_prefix_prefix_bad = Melinda's ex-boyfriend won't think Lucille should hire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3463
1-2	Melinda's	_	_	_	_	_	_	_	_
1	Melinda	Melinda	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
7	Lucille	Lucille	PROPN	NNP	Number=Sing	9	nsubj	_	_
8	should	should	AUX	MD	VerbForm=Fin	9	aux	_	_
9	hire	hire	VERB	VB	VerbForm=Inf	6	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = William explains Leslie can't watch herself.
# sentence_bad = Leslie explains William can't watch herself.
# two_prefix_prefix_good = William explains Leslie can't watch
# two_prefix_prefix_bad = Leslie explains William can't watch
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3464
1	Leslie	Leslie	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	William	William	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	watch	watch	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rodney says Barbara shouldn't describe herself.
# sentence_bad = Barbara says Rodney shouldn't describe herself.
# two_prefix_prefix_good = Rodney says Barbara shouldn't describe
# two_prefix_prefix_bad = Barbara says Rodney shouldn't describe
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3465
1	Barbara	Barbara	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rodney	Rodney	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	describe	describe	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Teresa will imagine Alan should stun himself.
# sentence_bad = Alan will imagine Teresa should stun himself.
# two_prefix_prefix_good = Teresa will imagine Alan should stun
# two_prefix_prefix_bad = Alan will imagine Teresa should stun
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3466
1	Alan	Alan	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Teresa	Teresa	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	stun	stun	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Brian might explain Grace will complain about herself.
# sentence_bad = Grace might explain Brian will complain about herself.
# two_prefix_prefix_good = Brian might explain Grace will complain about
# two_prefix_prefix_bad = Grace might explain Brian will complain about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3467
1	Grace	Grace	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Brian	Brian	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	complain	complain	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Heidi does explain Dan can admire himself.
# sentence_bad = Dan does explain Heidi can admire himself.
# two_prefix_prefix_good = Heidi does explain Dan can admire
# two_prefix_prefix_bad = Dan does explain Heidi can admire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3468
1	Dan	Dan	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Heidi	Heidi	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	admire	admire	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sara says Michael observes himself.
# sentence_bad = Michael says Sara observes himself.
# two_prefix_prefix_good = Sara says Michael observes
# two_prefix_prefix_bad = Michael says Sara observes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3469
1	Michael	Michael	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sara	Sara	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Suzanne's ex-wife did say Mitchell conceals himself.
# sentence_bad = Mitchell did say Suzanne's ex-wife conceals himself.
# two_prefix_prefix_good = Suzanne's ex-wife did say Mitchell conceals
# two_prefix_prefix_bad = Mitchell did say Suzanne's ex-wife conceals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3470
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Suzanne's	_	_	_	_	_	_	_	_
4	Suzanne	Suzanne	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	ex-wife	ex-wife	NOUN	NN	Number=Sing	7	nsubj	_	_
7	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl:npmod	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Bethany says Brett does cure himself.
# sentence_bad = Brett says Bethany does cure himself.
# two_prefix_prefix_good = Bethany says Brett does cure
# two_prefix_prefix_bad = Brett says Bethany does cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3471
1	Brett	Brett	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Bethany	Bethany	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	cure	cure	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Allison thinks Robert's son works with himself.
# sentence_bad = Robert's son thinks Allison works with himself.
# two_prefix_prefix_good = Allison thinks Robert's son works with
# two_prefix_prefix_bad = Robert's son thinks Allison works with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3472
1-2	Robert's	_	_	_	_	_	_	_	_
1	Robert	Robert	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Allison	Allison	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	works	work	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	with	with	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Andrew says Tina shouldn't leave herself.
# sentence_bad = Tina says Andrew shouldn't leave herself.
# two_prefix_prefix_good = Andrew says Tina shouldn't leave
# two_prefix_prefix_bad = Tina says Andrew shouldn't leave
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3473
1	Tina	Tina	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Andrew	Andrew	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	leave	leave	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Alice didn't think Chad would hire himself.
# sentence_bad = Chad didn't think Alice would hire himself.
# two_prefix_prefix_good = Alice didn't think Chad would hire
# two_prefix_prefix_bad = Chad didn't think Alice would hire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3474
1	Chad	Chad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Alice	Alice	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	hire	hire	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Eva can't think Thomas will respect himself.
# sentence_bad = Thomas can't think Eva will respect himself.
# two_prefix_prefix_good = Eva can't think Thomas will respect
# two_prefix_prefix_bad = Thomas can't think Eva will respect
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3475
1	Thomas	Thomas	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Eva	Eva	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	respect	respect	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Candice does say Gary should research himself.
# sentence_bad = Gary does say Candice should research himself.
# two_prefix_prefix_good = Candice does say Gary should research
# two_prefix_prefix_bad = Gary does say Candice should research
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3476
1	Gary	Gary	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Candice	Candice	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	research	research	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Andrea thinks Matt could leave himself.
# sentence_bad = Matt thinks Andrea could leave himself.
# two_prefix_prefix_good = Andrea thinks Matt could leave
# two_prefix_prefix_bad = Matt thinks Andrea could leave
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3477
1	Matt	Matt	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Andrea	Andrea	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	leave	leave	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tammy imagines Andrew can't disturb himself.
# sentence_bad = Andrew imagines Tammy can't disturb himself.
# two_prefix_prefix_good = Tammy imagines Andrew can't disturb
# two_prefix_prefix_bad = Andrew imagines Tammy can't disturb
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3478
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tammy	Tammy	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	disturb	disturb	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jessica thinks Ronald discusses himself.
# sentence_bad = Ronald thinks Jessica discusses himself.
# two_prefix_prefix_good = Jessica thinks Ronald discusses
# two_prefix_prefix_bad = Ronald thinks Jessica discusses
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3479
1	Ronald	Ronald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jessica	Jessica	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	discusses	discuss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Wendy wouldn't imagine Joseph admires himself.
# sentence_bad = Joseph wouldn't imagine Wendy admires himself.
# two_prefix_prefix_good = Wendy wouldn't imagine Joseph admires
# two_prefix_prefix_bad = Joseph wouldn't imagine Wendy admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3480
1	Joseph	Joseph	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Wendy	Wendy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carlos will imagine Naomi shouldn't escape from herself.
# sentence_bad = Naomi will imagine Carlos shouldn't escape from herself.
# two_prefix_prefix_good = Carlos will imagine Naomi shouldn't escape from
# two_prefix_prefix_bad = Naomi will imagine Carlos shouldn't escape from
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3481
1	Naomi	Naomi	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Carlos	Carlos	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	escape	escape	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	from	from	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Stephen imagines Dana forgets herself.
# sentence_bad = Dana imagines Stephen forgets herself.
# two_prefix_prefix_good = Stephen imagines Dana forgets
# two_prefix_prefix_bad = Dana imagines Stephen forgets
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3482
1	Dana	Dana	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Stephen	Stephen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	forgets	forget	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lissa shouldn't think Rodney helps himself.
# sentence_bad = Rodney shouldn't think Lissa helps himself.
# two_prefix_prefix_good = Lissa shouldn't think Rodney helps
# two_prefix_prefix_bad = Rodney shouldn't think Lissa helps
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3483
1	Rodney	Rodney	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lissa	Lissa	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Rachelle imagines Russell shouldn't hurt himself.
# sentence_bad = Russell imagines Rachelle shouldn't hurt himself.
# two_prefix_prefix_good = Rachelle imagines Russell shouldn't hurt
# two_prefix_prefix_bad = Russell imagines Rachelle shouldn't hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3484
1	Russell	Russell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rachelle	Rachelle	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	hurt	hurt	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Douglas imagines Monica could hide herself.
# sentence_bad = Monica imagines Douglas could hide herself.
# two_prefix_prefix_good = Douglas imagines Monica could hide
# two_prefix_prefix_bad = Monica imagines Douglas could hide
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3485
1	Monica	Monica	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Douglas	Douglas	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	hide	hide	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Nina does say Paul could cure himself.
# sentence_bad = Paul does say Nina could cure himself.
# two_prefix_prefix_good = Nina does say Paul could cure
# two_prefix_prefix_bad = Paul does say Nina could cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3486
1	Paul	Paul	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Nina	Nina	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	cure	cure	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Aaron says Sonia reveals herself.
# sentence_bad = Sonia says Aaron reveals herself.
# two_prefix_prefix_good = Aaron says Sonia reveals
# two_prefix_prefix_bad = Sonia says Aaron reveals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3487
1	Sonia	Sonia	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Aaron	Aaron	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Wayne thinks Denise couldn't approach herself.
# sentence_bad = Denise thinks Wayne couldn't approach herself.
# two_prefix_prefix_good = Wayne thinks Denise couldn't approach
# two_prefix_prefix_bad = Denise thinks Wayne couldn't approach
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3488
1	Denise	Denise	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Wayne	Wayne	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	approach	approach	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Vanessa says Eric approaches himself.
# sentence_bad = Eric says Vanessa approaches himself.
# two_prefix_prefix_good = Vanessa says Eric approaches
# two_prefix_prefix_bad = Eric says Vanessa approaches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3489
1	Eric	Eric	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Donald's brother says Laura remembers herself.
# sentence_bad = Laura says Donald's brother remembers herself.
# two_prefix_prefix_good = Donald's brother says Laura remembers
# two_prefix_prefix_bad = Laura says Donald's brother remembers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3490
1	Laura	Laura	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Donald's	_	_	_	_	_	_	_	_
3	Donald	Donald	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	brother	brother	NOUN	NN	Number=Sing	6	nsubj	_	_
6	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sherry thinks Joseph reveals himself.
# sentence_bad = Joseph thinks Sherry reveals himself.
# two_prefix_prefix_good = Sherry thinks Joseph reveals
# two_prefix_prefix_bad = Joseph thinks Sherry reveals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3491
1	Joseph	Joseph	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sherry	Sherry	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jennifer doesn't imagine Samuel would kiss himself.
# sentence_bad = Samuel doesn't imagine Jennifer would kiss himself.
# two_prefix_prefix_good = Jennifer doesn't imagine Samuel would kiss
# two_prefix_prefix_bad = Samuel doesn't imagine Jennifer would kiss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3492
1	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jennifer	Jennifer	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	kiss	kiss	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Russell would imagine Sharon leaves herself.
# sentence_bad = Sharon would imagine Russell leaves herself.
# two_prefix_prefix_good = Russell would imagine Sharon leaves
# two_prefix_prefix_bad = Sharon would imagine Russell leaves
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3493
1	Sharon	Sharon	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Russell	Russell	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Craig would imagine Candice might see herself.
# sentence_bad = Candice would imagine Craig might see herself.
# two_prefix_prefix_good = Craig would imagine Candice might see
# two_prefix_prefix_bad = Candice would imagine Craig might see
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3494
1	Candice	Candice	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Craig	Craig	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	see	see	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Curtis would say Sharon should observe herself.
# sentence_bad = Sharon would say Curtis should observe herself.
# two_prefix_prefix_good = Curtis would say Sharon should observe
# two_prefix_prefix_bad = Sharon would say Curtis should observe
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3495
1	Sharon	Sharon	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Curtis	Curtis	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	observe	observe	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Chad says Dawn didn't help herself.
# sentence_bad = Dawn says Chad didn't help herself.
# two_prefix_prefix_good = Chad says Dawn didn't help
# two_prefix_prefix_bad = Dawn says Chad didn't help
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3496
1	Dawn	Dawn	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Chad	Chad	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	help	help	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tina thinks David should flee from himself.
# sentence_bad = David thinks Tina should flee from himself.
# two_prefix_prefix_good = Tina thinks David should flee from
# two_prefix_prefix_bad = David thinks Tina should flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3497
1	David	David	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tina	Tina	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	flee	flee	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	from	from	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samantha says Andrew shouldn't irritate himself.
# sentence_bad = Andrew says Samantha shouldn't irritate himself.
# two_prefix_prefix_good = Samantha says Andrew shouldn't irritate
# two_prefix_prefix_bad = Andrew says Samantha shouldn't irritate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3498
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Samantha	Samantha	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	irritate	irritate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christine couldn't think Bradley could escape from himself.
# sentence_bad = Bradley couldn't think Christine could escape from himself.
# two_prefix_prefix_good = Christine couldn't think Bradley could escape from
# two_prefix_prefix_bad = Bradley couldn't think Christine could escape from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3499
1	Bradley	Bradley	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Christine	Christine	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	escape	escape	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	from	from	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Sara couldn't think Liam won't argue about himself.
# sentence_bad = Liam couldn't think Sara won't argue about himself.
# two_prefix_prefix_good = Sara couldn't think Liam won't argue about
# two_prefix_prefix_bad = Liam couldn't think Sara won't argue about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3500
1	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sara	Sara	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	argue	argue	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	about	about	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tiffany might imagine Roger does conceal himself.
# sentence_bad = Roger might imagine Tiffany does conceal himself.
# two_prefix_prefix_good = Tiffany might imagine Roger does conceal
# two_prefix_prefix_bad = Roger might imagine Tiffany does conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3501
1	Roger	Roger	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tiffany	Tiffany	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	conceal	conceal	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lisa should think Donald could help himself.
# sentence_bad = Donald should think Lisa could help himself.
# two_prefix_prefix_good = Lisa should think Donald could help
# two_prefix_prefix_bad = Donald should think Lisa could help
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3502
1	Donald	Donald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Lisa	Lisa	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	help	help	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Martin's sister imagines Rodney's ex-husband complains about himself.
# sentence_bad = Rodney's ex-husband imagines Martin's sister complains about himself.
# two_prefix_prefix_good = Martin's sister imagines Rodney's ex-husband complains about
# two_prefix_prefix_bad = Rodney's ex-husband imagines Martin's sister complains about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3503
1-2	Rodney's	_	_	_	_	_	_	_	_
1	Rodney	Rodney	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-husband	ex-husband	NOUN	NN	Number=Sing	4	nsubj	_	_
4	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5-6	Martin's	_	_	_	_	_	_	_	_
5	Martin	Martin	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	sister	sister	NOUN	NN	Number=Sing	8	nsubj	_	_
8	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
9	about	about	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tara explains Brian hires himself.
# sentence_bad = Brian explains Tara hires himself.
# two_prefix_prefix_good = Tara explains Brian hires
# two_prefix_prefix_bad = Brian explains Tara hires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3504
1	Brian	Brian	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tara	Tara	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hires	hire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Guy thinks Helen talks to herself.
# sentence_bad = Helen thinks Guy talks to herself.
# two_prefix_prefix_good = Guy thinks Helen talks to
# two_prefix_prefix_bad = Helen thinks Guy talks to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3505
1	Helen	Helen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Guy	Guy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Connie says Wayne investigates himself.
# sentence_bad = Wayne says Connie investigates himself.
# two_prefix_prefix_good = Connie says Wayne investigates
# two_prefix_prefix_bad = Wayne says Connie investigates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3506
1	Wayne	Wayne	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Connie	Connie	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Marcus doesn't imagine Carla didn't return to herself.
# sentence_bad = Carla doesn't imagine Marcus didn't return to herself.
# two_prefix_prefix_good = Marcus doesn't imagine Carla didn't return to
# two_prefix_prefix_bad = Carla doesn't imagine Marcus didn't return to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3507
1	Carla	Carla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Marcus	Marcus	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	didn't	_	_	_	_	_	_	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	return	return	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	to	to	ADP	IN	_	10	case	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Diane doesn't say Chad could boast about himself.
# sentence_bad = Chad doesn't say Diane could boast about himself.
# two_prefix_prefix_good = Diane doesn't say Chad could boast about
# two_prefix_prefix_bad = Chad doesn't say Diane could boast about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3508
1	Chad	Chad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Diane	Diane	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	boast	boast	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kathleen can't say Dan forgets himself.
# sentence_bad = Dan can't say Kathleen forgets himself.
# two_prefix_prefix_good = Kathleen can't say Dan forgets
# two_prefix_prefix_bad = Dan can't say Kathleen forgets
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3509
1	Dan	Dan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kathleen	Kathleen	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	forgets	forget	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tracy couldn't think Edward watches himself.
# sentence_bad = Edward couldn't think Tracy watches himself.
# two_prefix_prefix_good = Tracy couldn't think Edward watches
# two_prefix_prefix_bad = Edward couldn't think Tracy watches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3510
1	Edward	Edward	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tracy	Tracy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Chad thinks Rose heals herself.
# sentence_bad = Rose thinks Chad heals herself.
# two_prefix_prefix_good = Chad thinks Rose heals
# two_prefix_prefix_bad = Rose thinks Chad heals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3511
1	Rose	Rose	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Chad	Chad	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	heals	heal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Paul explains Ella could work with herself.
# sentence_bad = Ella explains Paul could work with herself.
# two_prefix_prefix_good = Paul explains Ella could work with
# two_prefix_prefix_bad = Ella explains Paul could work with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3512
1	Ella	Ella	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Paul	Paul	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	work	work	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	with	with	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christine would explain Steven did worry himself.
# sentence_bad = Steven would explain Christine did worry himself.
# two_prefix_prefix_good = Christine would explain Steven did worry
# two_prefix_prefix_bad = Steven would explain Christine did worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3513
1	Steven	Steven	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Christine	Christine	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	worry	worry	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sabrina explains Kenneth might confuse himself.
# sentence_bad = Kenneth explains Sabrina might confuse himself.
# two_prefix_prefix_good = Sabrina explains Kenneth might confuse
# two_prefix_prefix_bad = Kenneth explains Sabrina might confuse
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3514
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sabrina	Sabrina	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	confuse	confuse	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Benjamin explains Janice does aggravate herself.
# sentence_bad = Janice explains Benjamin does aggravate herself.
# two_prefix_prefix_good = Benjamin explains Janice does aggravate
# two_prefix_prefix_bad = Janice explains Benjamin does aggravate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3515
1	Janice	Janice	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Benjamin	Benjamin	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	aggravate	aggravate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Connie explains a guy's son doesn't bother himself.
# sentence_bad = A guy's son explains Connie doesn't bother himself.
# two_prefix_prefix_good = Connie explains a guy's son doesn't bother
# two_prefix_prefix_bad = A guy's son explains Connie doesn't bother
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3516
1	A	a	DET	DT	Definite=Ind|PronType=Art	3	det	_	_
2	guy's	guy'	NOUN	NNS	Number=Plur	3	compound	_	_
3	son	son	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Connie	Connie	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	bother	bother	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Natalie explains Paul could aggravate himself.
# sentence_bad = Paul explains Natalie could aggravate himself.
# two_prefix_prefix_good = Natalie explains Paul could aggravate
# two_prefix_prefix_bad = Paul explains Natalie could aggravate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3517
1	Paul	Paul	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Natalie	Natalie	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	aggravate	aggravate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tanya will think James references himself.
# sentence_bad = James will think Tanya references himself.
# two_prefix_prefix_good = Tanya will think James references
# two_prefix_prefix_bad = James will think Tanya references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3518
1	James	James	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tanya	Tanya	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Samantha should imagine Walter notices himself.
# sentence_bad = Walter should imagine Samantha notices himself.
# two_prefix_prefix_good = Samantha should imagine Walter notices
# two_prefix_prefix_bad = Walter should imagine Samantha notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3519
1	Walter	Walter	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Samantha	Samantha	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Timothy can say Tara visits herself.
# sentence_bad = Tara can say Timothy visits herself.
# two_prefix_prefix_good = Timothy can say Tara visits
# two_prefix_prefix_bad = Tara can say Timothy visits
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3520
1	Tara	Tara	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Timothy	Timothy	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	visits	visit	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kirsten says Christopher praises himself.
# sentence_bad = Christopher says Kirsten praises himself.
# two_prefix_prefix_good = Kirsten says Christopher praises
# two_prefix_prefix_bad = Christopher says Kirsten praises
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3521
1	Christopher	Christopher	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kirsten	Kirsten	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Benjamin didn't imagine Rhonda's niece can't reference herself.
# sentence_bad = Rhonda's niece didn't imagine Benjamin can't reference herself.
# two_prefix_prefix_good = Benjamin didn't imagine Rhonda's niece can't reference
# two_prefix_prefix_bad = Rhonda's niece didn't imagine Benjamin can't reference
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3522
1-2	Rhonda's	_	_	_	_	_	_	_	_
1	Rhonda	Rhonda	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	niece	niece	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
7	Benjamin	Benjamin	PROPN	NNP	Number=Sing	10	nsubj	_	_
8-9	can't	_	_	_	_	_	_	_	_
8	ca	can	AUX	MD	VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	reference	reference	VERB	VB	VerbForm=Inf	6	ccomp	_	_
11	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Steve thinks Tonya cures herself.
# sentence_bad = Tonya thinks Steve cures herself.
# two_prefix_prefix_good = Steve thinks Tonya cures
# two_prefix_prefix_bad = Tonya thinks Steve cures
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3523
1	Tonya	Tonya	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Steve	Steve	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cures	cure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Frank's ex-husband thinks Claire will forget herself.
# sentence_bad = Claire thinks Frank's ex-husband will forget herself.
# two_prefix_prefix_good = Frank's ex-husband thinks Claire will forget
# two_prefix_prefix_bad = Claire thinks Frank's ex-husband will forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3524
1	Claire	Claire	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Frank's	_	_	_	_	_	_	_	_
3	Frank	Frank	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	ex-husband	ex-husband	NOUN	NN	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	forget	forget	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Theresa did think Joseph might talk to himself.
# sentence_bad = Joseph did think Theresa might talk to himself.
# two_prefix_prefix_good = Theresa did think Joseph might talk to
# two_prefix_prefix_bad = Joseph did think Theresa might talk to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3525
1	Joseph	Joseph	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Theresa	Theresa	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	talk	talk	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Stacy thinks Michael would help himself.
# sentence_bad = Michael thinks Stacy would help himself.
# two_prefix_prefix_good = Stacy thinks Michael would help
# two_prefix_prefix_bad = Michael thinks Stacy would help
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3526
1	Michael	Michael	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Stacy	Stacy	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	help	help	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Karla might explain Rodney will aggravate himself.
# sentence_bad = Rodney might explain Karla will aggravate himself.
# two_prefix_prefix_good = Karla might explain Rodney will aggravate
# two_prefix_prefix_bad = Rodney might explain Karla will aggravate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3527
1	Rodney	Rodney	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Karla	Karla	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	aggravate	aggravate	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Grace explains Robert could upset himself.
# sentence_bad = Robert explains Grace could upset himself.
# two_prefix_prefix_good = Grace explains Robert could upset
# two_prefix_prefix_bad = Robert explains Grace could upset
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3528
1	Robert	Robert	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Grace	Grace	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	upset	upset	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Travis shouldn't think Samantha does remember herself.
# sentence_bad = Samantha shouldn't think Travis does remember herself.
# two_prefix_prefix_good = Travis shouldn't think Samantha does remember
# two_prefix_prefix_bad = Samantha shouldn't think Travis does remember
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3529
1	Samantha	Samantha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Travis	Travis	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	remember	remember	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Alexander did think Dawn shouldn't alarm herself.
# sentence_bad = Dawn did think Alexander shouldn't alarm herself.
# two_prefix_prefix_good = Alexander did think Dawn shouldn't alarm
# two_prefix_prefix_bad = Dawn did think Alexander shouldn't alarm
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3530
1	Dawn	Dawn	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Alexander	Alexander	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	alarm	alarm	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nicole's father could imagine Stacey loves herself.
# sentence_bad = Stacey could imagine Nicole's father loves herself.
# two_prefix_prefix_good = Nicole's father could imagine Stacey loves
# two_prefix_prefix_bad = Stacey could imagine Nicole's father loves
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3531
1	Stacey	Stacey	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Nicole's	_	_	_	_	_	_	_	_
4	Nicole	Nicole	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	father	father	NOUN	NN	Number=Sing	7	nsubj	_	_
7	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Natalie imagines Bradley remembers himself.
# sentence_bad = Bradley imagines Natalie remembers himself.
# two_prefix_prefix_good = Natalie imagines Bradley remembers
# two_prefix_prefix_bad = Bradley imagines Natalie remembers
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3532
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Natalie	Natalie	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Paul imagines Jodi hugs herself.
# sentence_bad = Jodi imagines Paul hugs herself.
# two_prefix_prefix_good = Paul imagines Jodi hugs
# two_prefix_prefix_bad = Jodi imagines Paul hugs
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3533
1	Jodi	Jodi	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Beverly can't explain Travis can't attack himself.
# sentence_bad = Travis can't explain Beverly can't attack himself.
# two_prefix_prefix_good = Beverly can't explain Travis can't attack
# two_prefix_prefix_bad = Travis can't explain Beverly can't attack
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3534
1	Travis	Travis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Beverly	Beverly	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	can't	_	_	_	_	_	_	_	_
6	ca	can	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	attack	attack	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carmen imagines Dan will worry himself.
# sentence_bad = Dan imagines Carmen will worry himself.
# two_prefix_prefix_good = Carmen imagines Dan will worry
# two_prefix_prefix_bad = Dan imagines Carmen will worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3535
1	Dan	Dan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carmen	Carmen	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	worry	worry	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gerald thinks Linda doesn't forget herself.
# sentence_bad = Linda thinks Gerald doesn't forget herself.
# two_prefix_prefix_good = Gerald thinks Linda doesn't forget
# two_prefix_prefix_bad = Linda thinks Gerald doesn't forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3536
1	Linda	Linda	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gerald	Gerald	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	forget	forget	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Diana explains Theodore will praise himself.
# sentence_bad = Theodore explains Diana will praise himself.
# two_prefix_prefix_good = Diana explains Theodore will praise
# two_prefix_prefix_bad = Theodore explains Diana will praise
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3537
1	Theodore	Theodore	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Diana	Diana	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	praise	praise	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jill explains Guy can embarrass himself.
# sentence_bad = Guy explains Jill can embarrass himself.
# two_prefix_prefix_good = Jill explains Guy can embarrass
# two_prefix_prefix_bad = Guy explains Jill can embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3539
1	Guy	Guy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jill	Jill	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	embarrass	embarrass	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Nina explains Michael will think about himself.
# sentence_bad = Michael explains Nina will think about himself.
# two_prefix_prefix_good = Nina explains Michael will think about
# two_prefix_prefix_bad = Michael explains Nina will think about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3540
1	Michael	Michael	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nina	Nina	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jane says Samuel sounds like himself.
# sentence_bad = Samuel says Jane sounds like himself.
# two_prefix_prefix_good = Jane says Samuel sounds like
# two_prefix_prefix_bad = Samuel says Jane sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3541
1	Samuel	Samuel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jane	Jane	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	like	like	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = That girl imagines Roger appreciates himself.
# sentence_bad = Roger imagines that girl appreciates himself.
# two_prefix_prefix_good = That girl imagines Roger appreciates
# two_prefix_prefix_bad = Roger imagines that girl appreciates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3542
1	Roger	Roger	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	that	that	DET	DT	Number=Sing|PronType=Dem	4	det	_	_
4	girl	girl	NOUN	NN	Number=Sing	5	nsubj	_	_
5	appreciates	appreciate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Naomi could explain Omar hugs himself.
# sentence_bad = Omar could explain Naomi hugs himself.
# two_prefix_prefix_good = Naomi could explain Omar hugs
# two_prefix_prefix_bad = Omar could explain Naomi hugs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3543
1	Omar	Omar	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Naomi	Naomi	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Ann says Dan respects himself.
# sentence_bad = Dan says Ann respects himself.
# two_prefix_prefix_good = Ann says Dan respects
# two_prefix_prefix_bad = Dan says Ann respects
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3544
1	Dan	Dan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Ann	Ann	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tracy should say Brian could approach himself.
# sentence_bad = Brian should say Tracy could approach himself.
# two_prefix_prefix_good = Tracy should say Brian could approach
# two_prefix_prefix_bad = Brian should say Tracy could approach
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3545
1	Brian	Brian	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tracy	Tracy	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	approach	approach	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Beverly did say Robert does shock himself.
# sentence_bad = Robert did say Beverly does shock himself.
# two_prefix_prefix_good = Beverly did say Robert does shock
# two_prefix_prefix_bad = Robert did say Beverly does shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3546
1	Robert	Robert	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Beverly	Beverly	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	shock	shock	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Monica wouldn't say Alan wouldn't dislike himself.
# sentence_bad = Alan wouldn't say Monica wouldn't dislike himself.
# two_prefix_prefix_good = Monica wouldn't say Alan wouldn't dislike
# two_prefix_prefix_bad = Alan wouldn't say Monica wouldn't dislike
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3547
1	Alan	Alan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Monica	Monica	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	dislike	dislike	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Margaret wouldn't say Jason's son can't discover himself.
# sentence_bad = Jason's son wouldn't say Margaret can't discover himself.
# two_prefix_prefix_good = Margaret wouldn't say Jason's son can't discover
# two_prefix_prefix_bad = Jason's son wouldn't say Margaret can't discover
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3548
1-2	Jason's	_	_	_	_	_	_	_	_
1	Jason	Jason	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	Margaret	Margaret	PROPN	NNP	Number=Sing	10	nsubj	_	_
8-9	can't	_	_	_	_	_	_	_	_
8	ca	can	AUX	MD	VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	discover	discover	VERB	VB	VerbForm=Inf	6	ccomp	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Vanessa imagines those guys' grandson admires himself.
# sentence_bad = Those guys' grandson imagines Vanessa admires himself.
# two_prefix_prefix_good = Vanessa imagines those guys' grandson admires
# two_prefix_prefix_bad = Those guys' grandson imagines Vanessa admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3549
1	Those	that	DET	DT	Number=Plur|PronType=Dem	2	det	_	_
2-3	guys'	_	_	_	_	_	_	_	_
2	guys	guy	NOUN	NNS	Number=Plur	4	nmod:poss	_	_
3	'	's	PART	POS	_	2	case	_	_
4	grandson	grandson	NOUN	NN	Number=Sing	5	nsubj	_	_
5	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	Vanessa	Vanessa	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Beth explains Jason did worry himself.
# sentence_bad = Jason explains Beth did worry himself.
# two_prefix_prefix_good = Beth explains Jason did worry
# two_prefix_prefix_bad = Jason explains Beth did worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3550
1	Jason	Jason	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Beth	Beth	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	worry	worry	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Bill wouldn't think Nina would fire herself.
# sentence_bad = Nina wouldn't think Bill would fire herself.
# two_prefix_prefix_good = Bill wouldn't think Nina would fire
# two_prefix_prefix_bad = Nina wouldn't think Bill would fire
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3551
1	Nina	Nina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Bill	Bill	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	fire	fire	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Monica didn't explain Peter couldn't hurt himself.
# sentence_bad = Peter didn't explain Monica couldn't hurt himself.
# two_prefix_prefix_good = Monica didn't explain Peter couldn't hurt
# two_prefix_prefix_bad = Peter didn't explain Monica couldn't hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3552
1	Peter	Peter	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Monica	Monica	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	couldn't	_	_	_	_	_	_	_	_
6	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	hurt	hurt	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Rachelle does imagine Bradley could like himself.
# sentence_bad = Bradley does imagine Rachelle could like himself.
# two_prefix_prefix_good = Rachelle does imagine Bradley could like
# two_prefix_prefix_bad = Bradley does imagine Rachelle could like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3553
1	Bradley	Bradley	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Rachelle	Rachelle	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	like	like	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jacqueline imagines Edward might appreciate himself.
# sentence_bad = Edward imagines Jacqueline might appreciate himself.
# two_prefix_prefix_good = Jacqueline imagines Edward might appreciate
# two_prefix_prefix_bad = Edward imagines Jacqueline might appreciate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3554
1	Edward	Edward	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	appreciate	appreciate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lisa could explain Kevin boasts about himself.
# sentence_bad = Kevin could explain Lisa boasts about himself.
# two_prefix_prefix_good = Lisa could explain Kevin boasts about
# two_prefix_prefix_bad = Kevin could explain Lisa boasts about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3555
1	Kevin	Kevin	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Lisa	Lisa	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	boasts	boast	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Anne can't say Omar can discuss himself.
# sentence_bad = Omar can't say Anne can discuss himself.
# two_prefix_prefix_good = Anne can't say Omar can discuss
# two_prefix_prefix_bad = Omar can't say Anne can discuss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3556
1	Omar	Omar	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Anne	Anne	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	discuss	discuss	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Patricia says Andrew should observe himself.
# sentence_bad = Andrew says Patricia should observe himself.
# two_prefix_prefix_good = Patricia says Andrew should observe
# two_prefix_prefix_bad = Andrew says Patricia should observe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3557
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Patricia	Patricia	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	observe	observe	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Heather can say Walter watches himself.
# sentence_bad = Walter can say Heather watches himself.
# two_prefix_prefix_good = Heather can say Walter watches
# two_prefix_prefix_bad = Walter can say Heather watches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3558
1	Walter	Walter	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Heather	Heather	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Irene's father would explain Nancy will complain about herself.
# sentence_bad = Nancy would explain Irene's father will complain about herself.
# two_prefix_prefix_good = Irene's father would explain Nancy will complain about
# two_prefix_prefix_bad = Nancy would explain Irene's father will complain about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3559
1	Nancy	Nancy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Irene's	_	_	_	_	_	_	_	_
4	Irene	Irene	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	father	father	NOUN	NN	Number=Sing	8	nsubj	_	_
7	will	will	AUX	MD	VerbForm=Fin	8	aux	_	_
8	complain	complain	VERB	VB	VerbForm=Inf	3	ccomp	_	_
9	about	about	ADP	IN	_	10	case	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Bill did explain Jane can't distract herself.
# sentence_bad = Jane did explain Bill can't distract herself.
# two_prefix_prefix_good = Bill did explain Jane can't distract
# two_prefix_prefix_bad = Jane did explain Bill can't distract
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3560
1	Jane	Jane	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Bill	Bill	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	can't	_	_	_	_	_	_	_	_
5	ca	can	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	distract	distract	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sara says Samuel observes himself.
# sentence_bad = Samuel says Sara observes himself.
# two_prefix_prefix_good = Sara says Samuel observes
# two_prefix_prefix_bad = Samuel says Sara observes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3561
1	Samuel	Samuel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sara	Sara	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Andrea imagines Alan couldn't reveal himself.
# sentence_bad = Alan imagines Andrea couldn't reveal himself.
# two_prefix_prefix_good = Andrea imagines Alan couldn't reveal
# two_prefix_prefix_bad = Alan imagines Andrea couldn't reveal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3562
1	Alan	Alan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Andrea	Andrea	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	reveal	reveal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Noah can't say Melinda discovers herself.
# sentence_bad = Melinda can't say Noah discovers herself.
# two_prefix_prefix_good = Noah can't say Melinda discovers
# two_prefix_prefix_bad = Melinda can't say Noah discovers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3563
1	Melinda	Melinda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Noah	Noah	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	discovers	discover	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Rodney can imagine Beth shouldn't research herself.
# sentence_bad = Beth can imagine Rodney shouldn't research herself.
# two_prefix_prefix_good = Rodney can imagine Beth shouldn't research
# two_prefix_prefix_bad = Beth can imagine Rodney shouldn't research
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3564
1	Beth	Beth	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Rodney	Rodney	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	research	research	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Tanya thinks Christopher kisses himself.
# sentence_bad = Christopher thinks Tanya kisses himself.
# two_prefix_prefix_good = Tanya thinks Christopher kisses
# two_prefix_prefix_bad = Christopher thinks Tanya kisses
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3565
1	Christopher	Christopher	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tanya	Tanya	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	kisses	kiss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Robert should say Marla hides herself.
# sentence_bad = Marla should say Robert hides herself.
# two_prefix_prefix_good = Robert should say Marla hides
# two_prefix_prefix_bad = Marla should say Robert hides
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3566
1	Marla	Marla	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Robert	Robert	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hides	hide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = That waitress says Keith shouldn't see himself.
# sentence_bad = Keith says that waitress shouldn't see himself.
# two_prefix_prefix_good = That waitress says Keith shouldn't see
# two_prefix_prefix_bad = Keith says that waitress shouldn't see
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3567
1	Keith	Keith	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	that	that	SCONJ	IN	_	7	mark	_	_
4	waitress	waitress	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	see	see	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Monica might think Todd can't worry himself.
# sentence_bad = Todd might think Monica can't worry himself.
# two_prefix_prefix_good = Monica might think Todd can't worry
# two_prefix_prefix_bad = Todd might think Monica can't worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3568
1	Todd	Todd	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Monica	Monica	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	can't	_	_	_	_	_	_	_	_
5	ca	can	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	worry	worry	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = A lot of boys' daughter can say Matt might like himself.
# sentence_bad = Matt can say a lot of boys' daughter might like himself.
# two_prefix_prefix_good = A lot of boys' daughter can say Matt might like
# two_prefix_prefix_bad = Matt can say a lot of boys' daughter might like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3569
1	Matt	Matt	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	_	_
5	lot	lot	NOUN	NN	Number=Sing	11	nsubj	_	_
6	of	of	ADP	IN	_	9	case	_	_
7-8	boys'	_	_	_	_	_	_	_	_
7	boys	boy	NOUN	NNS	Number=Plur	9	nmod:poss	_	_
8	'	's	PART	POS	_	7	case	_	_
9	daughter	daughter	NOUN	NN	Number=Sing	5	nmod	_	_
10	might	might	AUX	MD	VerbForm=Fin	11	aux	_	_
11	like	like	VERB	VB	VerbForm=Inf	3	ccomp	_	_
12	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	11	obj	_	SpaceAfter=No
13	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Florence can't explain Curtis shouldn't know himself.
# sentence_bad = Curtis can't explain Florence shouldn't know himself.
# two_prefix_prefix_good = Florence can't explain Curtis shouldn't know
# two_prefix_prefix_bad = Curtis can't explain Florence shouldn't know
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3570
1	Curtis	Curtis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Florence	Florence	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	know	know	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Paula can't explain Brad hates himself.
# sentence_bad = Brad can't explain Paula hates himself.
# two_prefix_prefix_good = Paula can't explain Brad hates
# two_prefix_prefix_bad = Brad can't explain Paula hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3571
1	Brad	Brad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Paula	Paula	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Susan can't imagine Stephen praises himself.
# sentence_bad = Stephen can't imagine Susan praises himself.
# two_prefix_prefix_good = Susan can't imagine Stephen praises
# two_prefix_prefix_bad = Stephen can't imagine Susan praises
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3572
1	Stephen	Stephen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Susan	Susan	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Allison thinks Kenneth could listen to himself.
# sentence_bad = Kenneth thinks Allison could listen to himself.
# two_prefix_prefix_good = Allison thinks Kenneth could listen to
# two_prefix_prefix_bad = Kenneth thinks Allison could listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3573
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Allison	Allison	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	listen	listen	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = A dancer does say every man criticizes himself.
# sentence_bad = Every man does say a dancer criticizes himself.
# two_prefix_prefix_good = A dancer does say every man criticizes
# two_prefix_prefix_bad = Every man does say a dancer criticizes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3574
1	Every	every	DET	DT	_	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	4	nsubj	_	_
3	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	dancer	dancer	NOUN	NN	Number=Sing	7	nsubj	_	_
7	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Veronica imagines Gary could help himself.
# sentence_bad = Gary imagines Veronica could help himself.
# two_prefix_prefix_good = Veronica imagines Gary could help
# two_prefix_prefix_bad = Gary imagines Veronica could help
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3575
1	Gary	Gary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Veronica	Veronica	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	help	help	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Teresa shouldn't explain Matt did hurt himself.
# sentence_bad = Matt shouldn't explain Teresa did hurt himself.
# two_prefix_prefix_good = Teresa shouldn't explain Matt did hurt
# two_prefix_prefix_bad = Matt shouldn't explain Teresa did hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3576
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Teresa	Teresa	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	hurt	hurt	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Gina says a guy shouldn't hate himself.
# sentence_bad = A guy says Gina shouldn't hate himself.
# two_prefix_prefix_good = Gina says a guy shouldn't hate
# two_prefix_prefix_bad = A guy says Gina shouldn't hate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3577
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Gina	Gina	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	hate	hate	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = A girl shouldn't think Jerry references himself.
# sentence_bad = Jerry shouldn't think a girl references himself.
# two_prefix_prefix_good = A girl shouldn't think Jerry references
# two_prefix_prefix_bad = Jerry shouldn't think a girl references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3578
1	Jerry	Jerry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	girl	girl	NOUN	NN	Number=Sing	7	nsubj	_	_
7	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Suzanne imagines Lawrence fires himself.
# sentence_bad = Lawrence imagines Suzanne fires himself.
# two_prefix_prefix_good = Suzanne imagines Lawrence fires
# two_prefix_prefix_bad = Lawrence imagines Suzanne fires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3579
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Suzanne	Suzanne	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Marla won't explain Raymond shouldn't hide himself.
# sentence_bad = Raymond won't explain Marla shouldn't hide himself.
# two_prefix_prefix_good = Marla won't explain Raymond shouldn't hide
# two_prefix_prefix_bad = Raymond won't explain Marla shouldn't hide
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3580
1	Raymond	Raymond	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Marla	Marla	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	hide	hide	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Suzanne doesn't imagine Dan couldn't discover himself.
# sentence_bad = Dan doesn't imagine Suzanne couldn't discover himself.
# two_prefix_prefix_good = Suzanne doesn't imagine Dan couldn't discover
# two_prefix_prefix_bad = Dan doesn't imagine Suzanne couldn't discover
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3581
1	Dan	Dan	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Suzanne	Suzanne	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	couldn't	_	_	_	_	_	_	_	_
6	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	discover	discover	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Rose thinks Melissa's ex-husband appreciates himself.
# sentence_bad = Melissa's ex-husband thinks Rose appreciates himself.
# two_prefix_prefix_good = Rose thinks Melissa's ex-husband appreciates
# two_prefix_prefix_bad = Melissa's ex-husband thinks Rose appreciates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3582
1-2	Melissa's	_	_	_	_	_	_	_	_
1	Melissa	Melissa	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-husband	ex-husband	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Rose	Rose	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	appreciates	appreciate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Homer can say Susan notices herself.
# sentence_bad = Susan can say Homer notices herself.
# two_prefix_prefix_good = Homer can say Susan notices
# two_prefix_prefix_bad = Susan can say Homer notices
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3583
1	Susan	Susan	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Homer	Homer	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kendra might say Ronald hates himself.
# sentence_bad = Ronald might say Kendra hates himself.
# two_prefix_prefix_good = Kendra might say Ronald hates
# two_prefix_prefix_bad = Ronald might say Kendra hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3584
1	Ronald	Ronald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kendra	Kendra	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Steven didn't think Rhonda cares for herself.
# sentence_bad = Rhonda didn't think Steven cares for herself.
# two_prefix_prefix_good = Steven didn't think Rhonda cares for
# two_prefix_prefix_bad = Rhonda didn't think Steven cares for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3585
1	Rhonda	Rhonda	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Steven	Steven	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	for	for	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Regina couldn't say Donald's grandson could talk about himself.
# sentence_bad = Donald's grandson couldn't say Regina could talk about himself.
# two_prefix_prefix_good = Regina couldn't say Donald's grandson could talk about
# two_prefix_prefix_bad = Donald's grandson couldn't say Regina could talk about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3586
1-2	Donald's	_	_	_	_	_	_	_	_
1	Donald	Donald	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandson	grandson	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	Regina	Regina	PROPN	NNP	Number=Sing	9	nsubj	_	_
8	could	could	AUX	MD	VerbForm=Fin	9	aux	_	_
9	talk	talk	VERB	VB	VerbForm=Inf	6	ccomp	_	_
10	about	about	ADP	IN	_	11	case	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Joel's niece imagines Roger might astound himself.
# sentence_bad = Roger imagines Joel's niece might astound himself.
# two_prefix_prefix_good = Joel's niece imagines Roger might astound
# two_prefix_prefix_bad = Roger imagines Joel's niece might astound
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3587
1	Roger	Roger	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Joel's	_	_	_	_	_	_	_	_
3	Joel	Joel	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	niece	niece	NOUN	NN	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	astound	astound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Bill couldn't say Denise might criticize herself.
# sentence_bad = Denise couldn't say Bill might criticize herself.
# two_prefix_prefix_good = Bill couldn't say Denise might criticize
# two_prefix_prefix_bad = Denise couldn't say Bill might criticize
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3588
1	Denise	Denise	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Bill	Bill	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	criticize	criticize	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Cynthia explains Kevin might care for himself.
# sentence_bad = Kevin explains Cynthia might care for himself.
# two_prefix_prefix_good = Cynthia explains Kevin might care for
# two_prefix_prefix_bad = Kevin explains Cynthia might care for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3589
1	Kevin	Kevin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Cynthia	Cynthia	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	care	care	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	for	for	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Joseph wouldn't explain Patricia wouldn't hide herself.
# sentence_bad = Patricia wouldn't explain Joseph wouldn't hide herself.
# two_prefix_prefix_good = Joseph wouldn't explain Patricia wouldn't hide
# two_prefix_prefix_bad = Patricia wouldn't explain Joseph wouldn't hide
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3590
1	Patricia	Patricia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Joseph	Joseph	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	hide	hide	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Gerald explains Kathleen describes herself.
# sentence_bad = Kathleen explains Gerald describes herself.
# two_prefix_prefix_good = Gerald explains Kathleen describes
# two_prefix_prefix_bad = Kathleen explains Gerald describes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3591
1	Kathleen	Kathleen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gerald	Gerald	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jill can explain Bruce's brother won't hurt himself.
# sentence_bad = Bruce's brother can explain Jill won't hurt himself.
# two_prefix_prefix_good = Jill can explain Bruce's brother won't hurt
# two_prefix_prefix_bad = Bruce's brother can explain Jill won't hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3593
1-2	Bruce's	_	_	_	_	_	_	_	_
1	Bruce	Bruce	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	brother	brother	NOUN	NN	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6	Jill	Jill	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	won't	_	_	_	_	_	_	_	_
7	wo	will	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	hurt	hurt	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Mary did say Kristin's ex-boyfriend shouldn't disagree with himself.
# sentence_bad = Kristin's ex-boyfriend did say Mary shouldn't disagree with himself.
# two_prefix_prefix_good = Mary did say Kristin's ex-boyfriend shouldn't disagree with
# two_prefix_prefix_bad = Kristin's ex-boyfriend did say Mary shouldn't disagree with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3594
1-2	Kristin's	_	_	_	_	_	_	_	_
1	Kristin	Kristin	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
6	Mary	Mary	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	shouldn't	_	_	_	_	_	_	_	_
7	should	should	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	disagree	disagree	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	with	with	ADP	IN	_	11	case	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Stacy thinks Mark leaves himself.
# sentence_bad = Mark thinks Stacy leaves himself.
# two_prefix_prefix_good = Stacy thinks Mark leaves
# two_prefix_prefix_bad = Mark thinks Stacy leaves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3595
1	Mark	Mark	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Stacy	Stacy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Martin does explain Heather listens to herself.
# sentence_bad = Heather does explain Martin listens to herself.
# two_prefix_prefix_good = Martin does explain Heather listens to
# two_prefix_prefix_bad = Heather does explain Martin listens to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3596
1	Heather	Heather	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Martin	Martin	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	listens	listen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Raymond could explain Kirsten might find herself.
# sentence_bad = Kirsten could explain Raymond might find herself.
# two_prefix_prefix_good = Raymond could explain Kirsten might find
# two_prefix_prefix_bad = Kirsten could explain Raymond might find
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3597
1	Kirsten	Kirsten	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Raymond	Raymond	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	find	find	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Victoria thinks Paul could cure himself.
# sentence_bad = Paul thinks Victoria could cure himself.
# two_prefix_prefix_good = Victoria thinks Paul could cure
# two_prefix_prefix_bad = Paul thinks Victoria could cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3598
1	Paul	Paul	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Victoria	Victoria	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	cure	cure	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Catherine imagines Jerry appreciates himself.
# sentence_bad = Jerry imagines Catherine appreciates himself.
# two_prefix_prefix_good = Catherine imagines Jerry appreciates
# two_prefix_prefix_bad = Jerry imagines Catherine appreciates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3599
1	Jerry	Jerry	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Catherine	Catherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	appreciates	appreciate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tiffany says Peter couldn't visit himself.
# sentence_bad = Peter says Tiffany couldn't visit himself.
# two_prefix_prefix_good = Tiffany says Peter couldn't visit
# two_prefix_prefix_bad = Peter says Tiffany couldn't visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3600
1	Peter	Peter	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tiffany	Tiffany	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	visit	visit	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christine says Carlos praises himself.
# sentence_bad = Carlos says Christine praises himself.
# two_prefix_prefix_good = Christine says Carlos praises
# two_prefix_prefix_bad = Carlos says Christine praises
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3602
1	Carlos	Carlos	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Christine	Christine	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Thomas won't say Ann could scare herself.
# sentence_bad = Ann won't say Thomas could scare herself.
# two_prefix_prefix_good = Thomas won't say Ann could scare
# two_prefix_prefix_bad = Ann won't say Thomas could scare
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3603
1	Ann	Ann	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Thomas	Thomas	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	scare	scare	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Sally thinks Curtis shouldn't annoy himself.
# sentence_bad = Curtis thinks Sally shouldn't annoy himself.
# two_prefix_prefix_good = Sally thinks Curtis shouldn't annoy
# two_prefix_prefix_bad = Curtis thinks Sally shouldn't annoy
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3604
1	Curtis	Curtis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sally	Sally	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	annoy	annoy	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Heidi explains Dennis would help himself.
# sentence_bad = Dennis explains Heidi would help himself.
# two_prefix_prefix_good = Heidi explains Dennis would help
# two_prefix_prefix_bad = Dennis explains Heidi would help
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3605
1	Dennis	Dennis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Heidi	Heidi	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	help	help	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Florence could think Liam complains about himself.
# sentence_bad = Liam could think Florence complains about himself.
# two_prefix_prefix_good = Florence could think Liam complains about
# two_prefix_prefix_bad = Liam could think Florence complains about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3606
1	Liam	Liam	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Florence	Florence	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kevin's brother could say Amanda remembers herself.
# sentence_bad = Amanda could say Kevin's brother remembers herself.
# two_prefix_prefix_good = Kevin's brother could say Amanda remembers
# two_prefix_prefix_bad = Amanda could say Kevin's brother remembers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3607
1	Amanda	Amanda	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Kevin's	_	_	_	_	_	_	_	_
4	Kevin	Kevin	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	brother	brother	NOUN	NN	Number=Sing	7	nsubj	_	_
7	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lisa will imagine Vincent knows himself.
# sentence_bad = Vincent will imagine Lisa knows himself.
# two_prefix_prefix_good = Lisa will imagine Vincent knows
# two_prefix_prefix_bad = Vincent will imagine Lisa knows
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3608
1	Vincent	Vincent	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Lisa	Lisa	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = This girl says Tanya's boyfriend admires himself.
# sentence_bad = Tanya's boyfriend says this girl admires himself.
# two_prefix_prefix_good = This girl says Tanya's boyfriend admires
# two_prefix_prefix_bad = Tanya's boyfriend says this girl admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3609
1-2	Tanya's	_	_	_	_	_	_	_	_
1	Tanya	Tanya	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	girl	girl	NOUN	NN	Number=Sing	7	nsubj	_	_
7	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = James should imagine Meredith shouldn't notice herself.
# sentence_bad = Meredith should imagine James shouldn't notice herself.
# two_prefix_prefix_good = James should imagine Meredith shouldn't notice
# two_prefix_prefix_bad = Meredith should imagine James shouldn't notice
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3610
1	Meredith	Meredith	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	James	James	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	notice	notice	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Denise does imagine Mitchell could hire himself.
# sentence_bad = Mitchell does imagine Denise could hire himself.
# two_prefix_prefix_good = Denise does imagine Mitchell could hire
# two_prefix_prefix_bad = Mitchell does imagine Denise could hire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3611
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Denise	Denise	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	hire	hire	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Caroline says Larry hugs himself.
# sentence_bad = Larry says Caroline hugs himself.
# two_prefix_prefix_good = Caroline says Larry hugs
# two_prefix_prefix_bad = Larry says Caroline hugs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3612
1	Larry	Larry	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Caroline	Caroline	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = George did think Judy knows herself.
# sentence_bad = Judy did think George knows herself.
# two_prefix_prefix_good = George did think Judy knows
# two_prefix_prefix_bad = Judy did think George knows
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3613
1	Judy	Judy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	George	George	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Scott couldn't explain Mary does listen to herself.
# sentence_bad = Mary couldn't explain Scott does listen to herself.
# two_prefix_prefix_good = Scott couldn't explain Mary does listen to
# two_prefix_prefix_bad = Mary couldn't explain Scott does listen to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3615
1	Mary	Mary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Scott	Scott	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	listen	listen	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carla explains Dan would confuse himself.
# sentence_bad = Dan explains Carla would confuse himself.
# two_prefix_prefix_good = Carla explains Dan would confuse
# two_prefix_prefix_bad = Dan explains Carla would confuse
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3616
1	Dan	Dan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carla	Carla	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	confuse	confuse	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Brett wouldn't imagine Sherry might investigate herself.
# sentence_bad = Sherry wouldn't imagine Brett might investigate herself.
# two_prefix_prefix_good = Brett wouldn't imagine Sherry might investigate
# two_prefix_prefix_bad = Sherry wouldn't imagine Brett might investigate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3617
1	Sherry	Sherry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brett	Brett	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	investigate	investigate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Noah imagines Marla knows herself.
# sentence_bad = Marla imagines Noah knows herself.
# two_prefix_prefix_good = Noah imagines Marla knows
# two_prefix_prefix_bad = Marla imagines Noah knows
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3618
1	Marla	Marla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Noah	Noah	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Diana does say Brad questions himself.
# sentence_bad = Brad does say Diana questions himself.
# two_prefix_prefix_good = Diana does say Brad questions
# two_prefix_prefix_bad = Brad does say Diana questions
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3619
1	Brad	Brad	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Diana	Diana	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Joel can't think Dawn insults herself.
# sentence_bad = Dawn can't think Joel insults herself.
# two_prefix_prefix_good = Joel can't think Dawn insults
# two_prefix_prefix_bad = Dawn can't think Joel insults
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3620
1	Dawn	Dawn	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Joel	Joel	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Gina would explain Vincent sees himself.
# sentence_bad = Vincent would explain Gina sees himself.
# two_prefix_prefix_good = Gina would explain Vincent sees
# two_prefix_prefix_bad = Vincent would explain Gina sees
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3621
1	Vincent	Vincent	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Gina	Gina	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Karla says Steven should watch himself.
# sentence_bad = Steven says Karla should watch himself.
# two_prefix_prefix_good = Karla says Steven should watch
# two_prefix_prefix_bad = Steven says Karla should watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3622
1	Steven	Steven	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Karla	Karla	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	watch	watch	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = This guy didn't explain Jill talks about herself.
# sentence_bad = Jill didn't explain this guy talks about herself.
# two_prefix_prefix_good = This guy didn't explain Jill talks about
# two_prefix_prefix_bad = Jill didn't explain this guy talks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3623
1	Jill	Jill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	this	this	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	guy	guy	NOUN	NN	Number=Sing	7	nsubj	_	_
7	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Beverly says Eric admires himself.
# sentence_bad = Eric says Beverly admires himself.
# two_prefix_prefix_good = Beverly says Eric admires
# two_prefix_prefix_bad = Eric says Beverly admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3624
1	Eric	Eric	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Beverly	Beverly	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stephen can think Lisa would question herself.
# sentence_bad = Lisa can think Stephen would question herself.
# two_prefix_prefix_good = Stephen can think Lisa would question
# two_prefix_prefix_bad = Lisa can think Stephen would question
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3625
1	Lisa	Lisa	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Stephen	Stephen	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
6	question	question	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Timothy didn't say Grace doesn't know herself.
# sentence_bad = Grace didn't say Timothy doesn't know herself.
# two_prefix_prefix_good = Timothy didn't say Grace doesn't know
# two_prefix_prefix_bad = Grace didn't say Timothy doesn't know
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3626
1	Grace	Grace	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Timothy	Timothy	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	know	know	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Stacy doesn't imagine Craig's ex-husband notices himself.
# sentence_bad = Craig's ex-husband doesn't imagine Stacy notices himself.
# two_prefix_prefix_good = Stacy doesn't imagine Craig's ex-husband notices
# two_prefix_prefix_bad = Craig's ex-husband doesn't imagine Stacy notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3627
1-2	Craig's	_	_	_	_	_	_	_	_
1	Craig	Craig	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-husband	ex-husband	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
7	Stacy	Stacy	PROPN	NNP	Number=Sing	8	nsubj	_	_
8	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Emily says Mark reveals himself.
# sentence_bad = Mark says Emily reveals himself.
# two_prefix_prefix_good = Emily says Mark reveals
# two_prefix_prefix_bad = Mark says Emily reveals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3628
1	Mark	Mark	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Emily	Emily	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Vincent thinks Michelle shouldn't conceal herself.
# sentence_bad = Michelle thinks Vincent shouldn't conceal herself.
# two_prefix_prefix_good = Vincent thinks Michelle shouldn't conceal
# two_prefix_prefix_bad = Michelle thinks Vincent shouldn't conceal
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3629
1	Michelle	Michelle	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Vincent	Vincent	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stephen says Regina praises herself.
# sentence_bad = Regina says Stephen praises herself.
# two_prefix_prefix_good = Stephen says Regina praises
# two_prefix_prefix_bad = Regina says Stephen praises
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3630
1	Regina	Regina	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Stephen	Stephen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Julie explains Robert will notice himself.
# sentence_bad = Robert explains Julie will notice himself.
# two_prefix_prefix_good = Julie explains Robert will notice
# two_prefix_prefix_bad = Robert explains Julie will notice
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3631
1	Robert	Robert	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Julie	Julie	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	notice	notice	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Erin wouldn't say William should watch himself.
# sentence_bad = William wouldn't say Erin should watch himself.
# two_prefix_prefix_good = Erin wouldn't say William should watch
# two_prefix_prefix_bad = William wouldn't say Erin should watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3632
1	William	William	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Erin	Erin	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	watch	watch	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carla thinks this guy might conceal himself.
# sentence_bad = This guy thinks Carla might conceal himself.
# two_prefix_prefix_good = Carla thinks this guy might conceal
# two_prefix_prefix_bad = This guy thinks Carla might conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3633
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Carla	Carla	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	conceal	conceal	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Homer won't think Valerie wouldn't work with herself.
# sentence_bad = Valerie won't think Homer wouldn't work with herself.
# two_prefix_prefix_good = Homer won't think Valerie wouldn't work with
# two_prefix_prefix_bad = Valerie won't think Homer wouldn't work with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3634
1	Valerie	Valerie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Homer	Homer	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	work	work	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	with	with	ADP	IN	_	10	case	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jeffrey wouldn't imagine Rachelle didn't like herself.
# sentence_bad = Rachelle wouldn't imagine Jeffrey didn't like herself.
# two_prefix_prefix_good = Jeffrey wouldn't imagine Rachelle didn't like
# two_prefix_prefix_bad = Rachelle wouldn't imagine Jeffrey didn't like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3635
1	Rachelle	Rachelle	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	didn't	_	_	_	_	_	_	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	like	like	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Matt will imagine Regina might discover herself.
# sentence_bad = Regina will imagine Matt might discover herself.
# two_prefix_prefix_good = Matt will imagine Regina might discover
# two_prefix_prefix_bad = Regina will imagine Matt might discover
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3636
1	Regina	Regina	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Matt	Matt	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	discover	discover	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Elizabeth imagines Gary loves himself.
# sentence_bad = Gary imagines Elizabeth loves himself.
# two_prefix_prefix_good = Elizabeth imagines Gary loves
# two_prefix_prefix_bad = Gary imagines Elizabeth loves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3637
1	Gary	Gary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kristin thinks Richard can't criticize himself.
# sentence_bad = Richard thinks Kristin can't criticize himself.
# two_prefix_prefix_good = Kristin thinks Richard can't criticize
# two_prefix_prefix_bad = Richard thinks Kristin can't criticize
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3638
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kristin	Kristin	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	criticize	criticize	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sarah did imagine Carlos shouldn't observe himself.
# sentence_bad = Carlos did imagine Sarah shouldn't observe himself.
# two_prefix_prefix_good = Sarah did imagine Carlos shouldn't observe
# two_prefix_prefix_bad = Carlos did imagine Sarah shouldn't observe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3639
1	Carlos	Carlos	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Sarah	Sarah	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	observe	observe	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Cynthia thinks Bill didn't describe himself.
# sentence_bad = Bill thinks Cynthia didn't describe himself.
# two_prefix_prefix_good = Cynthia thinks Bill didn't describe
# two_prefix_prefix_bad = Bill thinks Cynthia didn't describe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3640
1	Bill	Bill	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Cynthia	Cynthia	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	describe	describe	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Melissa's girlfriend says Aaron might hire himself.
# sentence_bad = Aaron says Melissa's girlfriend might hire himself.
# two_prefix_prefix_good = Melissa's girlfriend says Aaron might hire
# two_prefix_prefix_bad = Aaron says Melissa's girlfriend might hire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3641
1	Aaron	Aaron	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Melissa's	_	_	_	_	_	_	_	_
3	Melissa	Melissa	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	girlfriend	girlfriend	NOUN	NN	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	hire	hire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Diane can't say Alexander hires himself.
# sentence_bad = Alexander can't say Diane hires himself.
# two_prefix_prefix_good = Diane can't say Alexander hires
# two_prefix_prefix_bad = Alexander can't say Diane hires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3642
1	Alexander	Alexander	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Diane	Diane	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hires	hire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Janice should say Alan remembers himself.
# sentence_bad = Alan should say Janice remembers himself.
# two_prefix_prefix_good = Janice should say Alan remembers
# two_prefix_prefix_bad = Alan should say Janice remembers
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3643
1	Alan	Alan	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Janice	Janice	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Every guy imagines Kirsten cares for herself.
# sentence_bad = Kirsten imagines every guy cares for herself.
# two_prefix_prefix_good = Every guy imagines Kirsten cares for
# two_prefix_prefix_bad = Kirsten imagines every guy cares for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3644
1	Kirsten	Kirsten	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	every	every	DET	DT	_	4	det	_	_
4	guy	guy	NOUN	NN	Number=Sing	5	nsubj	_	_
5	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	for	for	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kimberley imagines Kevin won't criticize himself.
# sentence_bad = Kevin imagines Kimberley won't criticize himself.
# two_prefix_prefix_good = Kimberley imagines Kevin won't criticize
# two_prefix_prefix_bad = Kevin imagines Kimberley won't criticize
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3645
1	Kevin	Kevin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kimberley	Kimberley	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	criticize	criticize	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Richard didn't explain Judy can alarm herself.
# sentence_bad = Judy didn't explain Richard can alarm herself.
# two_prefix_prefix_good = Richard didn't explain Judy can alarm
# two_prefix_prefix_bad = Judy didn't explain Richard can alarm
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3646
1	Judy	Judy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Richard	Richard	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	alarm	alarm	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Marcus could explain Elaine observes herself.
# sentence_bad = Elaine could explain Marcus observes herself.
# two_prefix_prefix_good = Marcus could explain Elaine observes
# two_prefix_prefix_bad = Elaine could explain Marcus observes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3647
1	Elaine	Elaine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Marcus	Marcus	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Angela couldn't think Vincent does distract himself.
# sentence_bad = Vincent couldn't think Angela does distract himself.
# two_prefix_prefix_good = Angela couldn't think Vincent does distract
# two_prefix_prefix_bad = Vincent couldn't think Angela does distract
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3648
1	Vincent	Vincent	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Angela	Angela	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	distract	distract	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carlos says Matt's grandmother won't question herself.
# sentence_bad = Matt's grandmother says Carlos won't question herself.
# two_prefix_prefix_good = Carlos says Matt's grandmother won't question
# two_prefix_prefix_bad = Matt's grandmother says Carlos won't question
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3649
1-2	Matt's	_	_	_	_	_	_	_	_
1	Matt	Matt	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandmother	grandmother	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Carlos	Carlos	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	question	question	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Nina did think Gina's nephew praises himself.
# sentence_bad = Gina's nephew did think Nina praises himself.
# two_prefix_prefix_good = Nina did think Gina's nephew praises
# two_prefix_prefix_bad = Gina's nephew did think Nina praises
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3650
1-2	Gina's	_	_	_	_	_	_	_	_
1	Gina	Gina	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	nephew	nephew	NOUN	NN	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
6	Nina	Nina	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Samuel explains Becca would confuse herself.
# sentence_bad = Becca explains Samuel would confuse herself.
# two_prefix_prefix_good = Samuel explains Becca would confuse
# two_prefix_prefix_bad = Becca explains Samuel would confuse
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3651
1	Becca	Becca	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Samuel	Samuel	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	confuse	confuse	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Linda won't explain Carlos can return to himself.
# sentence_bad = Carlos won't explain Linda can return to himself.
# two_prefix_prefix_good = Linda won't explain Carlos can return to
# two_prefix_prefix_bad = Carlos won't explain Linda can return to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3652
1	Carlos	Carlos	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Linda	Linda	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	return	return	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = A woman could think Matt conceals himself.
# sentence_bad = Matt could think a woman conceals himself.
# two_prefix_prefix_good = A woman could think Matt conceals
# two_prefix_prefix_bad = Matt could think a woman conceals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3653
1	Matt	Matt	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	_	_
5	woman	woman	NOUN	NN	Number=Sing	6	nsubj	_	_
6	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sara imagines Kenneth couldn't talk about himself.
# sentence_bad = Kenneth imagines Sara couldn't talk about himself.
# two_prefix_prefix_good = Sara imagines Kenneth couldn't talk about
# two_prefix_prefix_bad = Kenneth imagines Sara couldn't talk about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3654
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sara	Sara	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	talk	talk	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christina says Dan did talk about himself.
# sentence_bad = Dan says Christina did talk about himself.
# two_prefix_prefix_good = Christina says Dan did talk about
# two_prefix_prefix_bad = Dan says Christina did talk about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3655
1	Dan	Dan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Christina	Christina	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	talk	talk	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Curtis can't imagine Stacy conceals herself.
# sentence_bad = Stacy can't imagine Curtis conceals herself.
# two_prefix_prefix_good = Curtis can't imagine Stacy conceals
# two_prefix_prefix_bad = Stacy can't imagine Curtis conceals
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3656
1	Stacy	Stacy	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Curtis	Curtis	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Dan might explain Florence researches herself.
# sentence_bad = Florence might explain Dan researches herself.
# two_prefix_prefix_good = Dan might explain Florence researches
# two_prefix_prefix_bad = Florence might explain Dan researches
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3658
1	Florence	Florence	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Dan	Dan	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	researches	research	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Margaret's father could think Janet shouldn't astound herself.
# sentence_bad = Janet could think Margaret's father shouldn't astound herself.
# two_prefix_prefix_good = Margaret's father could think Janet shouldn't astound
# two_prefix_prefix_bad = Janet could think Margaret's father shouldn't astound
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3659
1	Janet	Janet	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Margaret's	_	_	_	_	_	_	_	_
4	Margaret	Margaret	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	father	father	NOUN	NN	Number=Sing	9	nsubj	_	_
7-8	shouldn't	_	_	_	_	_	_	_	_
7	should	should	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	astound	astound	VERB	VB	VerbForm=Inf	3	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lori might explain Timothy might dislike himself.
# sentence_bad = Timothy might explain Lori might dislike himself.
# two_prefix_prefix_good = Lori might explain Timothy might dislike
# two_prefix_prefix_bad = Timothy might explain Lori might dislike
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3660
1	Timothy	Timothy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Lori	Lori	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	dislike	dislike	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = A guy couldn't explain Erin talks to herself.
# sentence_bad = Erin couldn't explain a guy talks to herself.
# two_prefix_prefix_good = A guy couldn't explain Erin talks to
# two_prefix_prefix_bad = Erin couldn't explain a guy talks to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3661
1	Erin	Erin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	a	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6	guy	guy	NOUN	NN	Number=Sing	7	nsubj	_	_
7	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Teresa explains Ronald should cure himself.
# sentence_bad = Ronald explains Teresa should cure himself.
# two_prefix_prefix_good = Teresa explains Ronald should cure
# two_prefix_prefix_bad = Ronald explains Teresa should cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3662
1	Ronald	Ronald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Teresa	Teresa	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	cure	cure	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Paula says Thomas can't cure himself.
# sentence_bad = Thomas says Paula can't cure himself.
# two_prefix_prefix_good = Paula says Thomas can't cure
# two_prefix_prefix_bad = Thomas says Paula can't cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3663
1	Thomas	Thomas	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Paula	Paula	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	cure	cure	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Some woman could think Carl notices himself.
# sentence_bad = Carl could think some woman notices himself.
# two_prefix_prefix_good = Some woman could think Carl notices
# two_prefix_prefix_bad = Carl could think some woman notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3664
1	Carl	Carl	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	some	some	DET	DT	_	5	det	_	_
5	woman	woman	NOUN	NN	Number=Sing	6	nsubj	_	_
6	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Erin can explain Joseph did embarrass himself.
# sentence_bad = Joseph can explain Erin did embarrass himself.
# two_prefix_prefix_good = Erin can explain Joseph did embarrass
# two_prefix_prefix_bad = Joseph can explain Erin did embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3665
1	Joseph	Joseph	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Erin	Erin	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	embarrass	embarrass	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Tiffany thinks Joel shouldn't listen to himself.
# sentence_bad = Joel thinks Tiffany shouldn't listen to himself.
# two_prefix_prefix_good = Tiffany thinks Joel shouldn't listen to
# two_prefix_prefix_bad = Joel thinks Tiffany shouldn't listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3666
1	Joel	Joel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tiffany	Tiffany	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	listen	listen	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kayla does say Theodore should disgust himself.
# sentence_bad = Theodore does say Kayla should disgust himself.
# two_prefix_prefix_good = Kayla does say Theodore should disgust
# two_prefix_prefix_bad = Theodore does say Kayla should disgust
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3667
1	Theodore	Theodore	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kayla	Kayla	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	disgust	disgust	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Victoria does say Homer will like himself.
# sentence_bad = Homer does say Victoria will like himself.
# two_prefix_prefix_good = Victoria does say Homer will like
# two_prefix_prefix_bad = Homer does say Victoria will like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3668
1	Homer	Homer	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Victoria	Victoria	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	like	like	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Bradley did explain Tammy sees herself.
# sentence_bad = Tammy did explain Bradley sees herself.
# two_prefix_prefix_good = Bradley did explain Tammy sees
# two_prefix_prefix_bad = Tammy did explain Bradley sees
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3669
1	Tammy	Tammy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Bradley	Bradley	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Alice couldn't imagine Russell researches himself.
# sentence_bad = Russell couldn't imagine Alice researches himself.
# two_prefix_prefix_good = Alice couldn't imagine Russell researches
# two_prefix_prefix_bad = Russell couldn't imagine Alice researches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3670
1	Russell	Russell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Alice	Alice	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	researches	research	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Dana thinks Brian remembers himself.
# sentence_bad = Brian thinks Dana remembers himself.
# two_prefix_prefix_good = Dana thinks Brian remembers
# two_prefix_prefix_bad = Brian thinks Dana remembers
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3671
1	Brian	Brian	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Dana	Dana	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jennifer's ex-husband thinks Sara should approach herself.
# sentence_bad = Sara thinks Jennifer's ex-husband should approach herself.
# two_prefix_prefix_good = Jennifer's ex-husband thinks Sara should approach
# two_prefix_prefix_bad = Sara thinks Jennifer's ex-husband should approach
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3672
1	Sara	Sara	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Jennifer's	_	_	_	_	_	_	_	_
3	Jennifer	Jennifer	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	ex-husband	ex-husband	NOUN	NN	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	approach	approach	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kristin wouldn't say Gregory admires himself.
# sentence_bad = Gregory wouldn't say Kristin admires himself.
# two_prefix_prefix_good = Kristin wouldn't say Gregory admires
# two_prefix_prefix_bad = Gregory wouldn't say Kristin admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3673
1	Gregory	Gregory	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kristin	Kristin	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Benjamin's grandson does imagine Monica hates herself.
# sentence_bad = Monica does imagine Benjamin's grandson hates herself.
# two_prefix_prefix_good = Benjamin's grandson does imagine Monica hates
# two_prefix_prefix_bad = Monica does imagine Benjamin's grandson hates
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3674
1	Monica	Monica	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Benjamin's	_	_	_	_	_	_	_	_
4	Benjamin	Benjamin	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	grandson	grandson	NOUN	NN	Number=Sing	7	nsubj	_	_
7	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Eric didn't explain Monica did dislike herself.
# sentence_bad = Monica didn't explain Eric did dislike herself.
# two_prefix_prefix_good = Eric didn't explain Monica did dislike
# two_prefix_prefix_bad = Monica didn't explain Eric did dislike
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3675
1	Monica	Monica	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Eric	Eric	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	dislike	dislike	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Eva thinks Joseph will conceal himself.
# sentence_bad = Joseph thinks Eva will conceal himself.
# two_prefix_prefix_good = Eva thinks Joseph will conceal
# two_prefix_prefix_bad = Joseph thinks Eva will conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3676
1	Joseph	Joseph	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Eva	Eva	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Timothy explains Karen attacks herself.
# sentence_bad = Karen explains Timothy attacks herself.
# two_prefix_prefix_good = Timothy explains Karen attacks
# two_prefix_prefix_bad = Karen explains Timothy attacks
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3677
1	Karen	Karen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Timothy	Timothy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Some actress explains Gregory did question himself.
# sentence_bad = Gregory explains some actress did question himself.
# two_prefix_prefix_good = Some actress explains Gregory did question
# two_prefix_prefix_bad = Gregory explains some actress did question
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3678
1	Gregory	Gregory	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	some	some	DET	DT	_	4	det	_	_
4	actress	actress	NOUN	NN	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	question	question	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carmen doesn't say Gary watches himself.
# sentence_bad = Gary doesn't say Carmen watches himself.
# two_prefix_prefix_good = Carmen doesn't say Gary watches
# two_prefix_prefix_bad = Gary doesn't say Carmen watches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3679
1	Gary	Gary	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carmen	Carmen	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	watches	watch	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Donald explains Catherine cures herself.
# sentence_bad = Catherine explains Donald cures herself.
# two_prefix_prefix_good = Donald explains Catherine cures
# two_prefix_prefix_bad = Catherine explains Donald cures
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3680
1	Catherine	Catherine	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Donald	Donald	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cures	cure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Bradley thinks Claire loves herself.
# sentence_bad = Claire thinks Bradley loves herself.
# two_prefix_prefix_good = Bradley thinks Claire loves
# two_prefix_prefix_bad = Claire thinks Bradley loves
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3681
1	Claire	Claire	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Bradley	Bradley	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sheila explains Richard could bore himself.
# sentence_bad = Richard explains Sheila could bore himself.
# two_prefix_prefix_good = Sheila explains Richard could bore
# two_prefix_prefix_bad = Richard explains Sheila could bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3682
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sheila	Sheila	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	bore	bore	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sherry explains Guy couldn't dislike himself.
# sentence_bad = Guy explains Sherry couldn't dislike himself.
# two_prefix_prefix_good = Sherry explains Guy couldn't dislike
# two_prefix_prefix_bad = Guy explains Sherry couldn't dislike
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3683
1	Guy	Guy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sherry	Sherry	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	dislike	dislike	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Aaron thinks Judy insults herself.
# sentence_bad = Judy thinks Aaron insults herself.
# two_prefix_prefix_good = Aaron thinks Judy insults
# two_prefix_prefix_bad = Judy thinks Aaron insults
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3684
1	Judy	Judy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Aaron	Aaron	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kristin's grandson explains Erin likes herself.
# sentence_bad = Erin explains Kristin's grandson likes herself.
# two_prefix_prefix_good = Kristin's grandson explains Erin likes
# two_prefix_prefix_bad = Erin explains Kristin's grandson likes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3685
1	Erin	Erin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Kristin's	_	_	_	_	_	_	_	_
3	Kristin	Kristin	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	grandson	grandson	NOUN	NN	Number=Sing	6	nsubj	_	_
6	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lucille thinks Andrew won't upset himself.
# sentence_bad = Andrew thinks Lucille won't upset himself.
# two_prefix_prefix_good = Lucille thinks Andrew won't upset
# two_prefix_prefix_bad = Andrew thinks Lucille won't upset
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3686
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Lucille	Lucille	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	upset	upset	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jacqueline can't think Keith will notice himself.
# sentence_bad = Keith can't think Jacqueline will notice himself.
# two_prefix_prefix_good = Jacqueline can't think Keith will notice
# two_prefix_prefix_bad = Keith can't think Jacqueline will notice
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3687
1	Keith	Keith	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	notice	notice	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Angela should imagine Derek did cure himself.
# sentence_bad = Derek should imagine Angela did cure himself.
# two_prefix_prefix_good = Angela should imagine Derek did cure
# two_prefix_prefix_bad = Derek should imagine Angela did cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3688
1	Derek	Derek	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Angela	Angela	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	cure	cure	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Vincent shouldn't imagine Regina talks to herself.
# sentence_bad = Regina shouldn't imagine Vincent talks to herself.
# two_prefix_prefix_good = Vincent shouldn't imagine Regina talks to
# two_prefix_prefix_bad = Regina shouldn't imagine Vincent talks to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3689
1	Regina	Regina	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Vincent	Vincent	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Omar imagines Caroline praises herself.
# sentence_bad = Caroline imagines Omar praises herself.
# two_prefix_prefix_good = Omar imagines Caroline praises
# two_prefix_prefix_bad = Caroline imagines Omar praises
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3690
1	Caroline	Caroline	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Omar	Omar	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	praises	praise	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Patrick's grandfather says Lori kisses herself.
# sentence_bad = Lori says Patrick's grandfather kisses herself.
# two_prefix_prefix_good = Patrick's grandfather says Lori kisses
# two_prefix_prefix_bad = Lori says Patrick's grandfather kisses
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3691
1	Lori	Lori	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Patrick's	_	_	_	_	_	_	_	_
3	Patrick	Patrick	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	grandfather	grandfather	NOUN	NN	Number=Sing	6	nsubj	_	_
6	kisses	kiss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lissa will explain Frank hugs himself.
# sentence_bad = Frank will explain Lissa hugs himself.
# two_prefix_prefix_good = Lissa will explain Frank hugs
# two_prefix_prefix_bad = Frank will explain Lissa hugs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3692
1	Frank	Frank	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Lissa	Lissa	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Deborah shouldn't imagine Lawrence won't visit himself.
# sentence_bad = Lawrence shouldn't imagine Deborah won't visit himself.
# two_prefix_prefix_good = Deborah shouldn't imagine Lawrence won't visit
# two_prefix_prefix_bad = Lawrence shouldn't imagine Deborah won't visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3693
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Deborah	Deborah	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	visit	visit	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Bill won't think Andrea did notice herself.
# sentence_bad = Andrea won't think Bill did notice herself.
# two_prefix_prefix_good = Bill won't think Andrea did notice
# two_prefix_prefix_bad = Andrea won't think Bill did notice
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3694
1	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Bill	Bill	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	notice	notice	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Nicole imagines this boy shouldn't return to himself.
# sentence_bad = This boy imagines Nicole shouldn't return to himself.
# two_prefix_prefix_good = Nicole imagines this boy shouldn't return to
# two_prefix_prefix_bad = This boy imagines Nicole shouldn't return to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3695
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	boy	boy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Nicole	Nicole	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	return	return	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Irene explains Roger wouldn't know himself.
# sentence_bad = Roger explains Irene wouldn't know himself.
# two_prefix_prefix_good = Irene explains Roger wouldn't know
# two_prefix_prefix_bad = Roger explains Irene wouldn't know
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3696
1	Roger	Roger	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Irene	Irene	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	know	know	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Patricia explains Mark couldn't escape from himself.
# sentence_bad = Mark explains Patricia couldn't escape from himself.
# two_prefix_prefix_good = Patricia explains Mark couldn't escape from
# two_prefix_prefix_bad = Mark explains Patricia couldn't escape from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3697
1	Mark	Mark	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Patricia	Patricia	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	escape	escape	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	from	from	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Renee explains Kenneth doesn't kiss himself.
# sentence_bad = Kenneth explains Renee doesn't kiss himself.
# two_prefix_prefix_good = Renee explains Kenneth doesn't kiss
# two_prefix_prefix_bad = Kenneth explains Renee doesn't kiss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3698
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Renee	Renee	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	kiss	kiss	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Curtis thinks Kathleen could talk to herself.
# sentence_bad = Kathleen thinks Curtis could talk to herself.
# two_prefix_prefix_good = Curtis thinks Kathleen could talk to
# two_prefix_prefix_bad = Kathleen thinks Curtis could talk to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3699
1	Kathleen	Kathleen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Curtis	Curtis	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	talk	talk	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = An adult's daughter won't explain Marcus can remember himself.
# sentence_bad = Marcus won't explain an adult's daughter can remember himself.
# two_prefix_prefix_good = An adult's daughter won't explain Marcus can remember
# two_prefix_prefix_bad = Marcus won't explain an adult's daughter can remember
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3700
1	Marcus	Marcus	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	an	a	DET	DT	Definite=Ind|PronType=Art	6	det	_	_
6-7	adult's	_	_	_	_	_	_	_	_
6	adult	adult	NOUN	NN	Number=Sing	8	nmod:poss	_	_
7	's	's	PART	POS	_	6	case	_	_
8	daughter	daughter	NOUN	NN	Number=Sing	10	nsubj	_	_
9	can	can	AUX	MD	VerbForm=Fin	10	aux	_	_
10	remember	remember	VERB	VB	VerbForm=Inf	4	ccomp	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Randolf does imagine Eva can't praise herself.
# sentence_bad = Eva does imagine Randolf can't praise herself.
# two_prefix_prefix_good = Randolf does imagine Eva can't praise
# two_prefix_prefix_bad = Eva does imagine Randolf can't praise
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3701
1	Eva	Eva	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Randolf	Randolf	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	can't	_	_	_	_	_	_	_	_
5	ca	can	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	praise	praise	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Natalie couldn't say Mitchell hates himself.
# sentence_bad = Mitchell couldn't say Natalie hates himself.
# two_prefix_prefix_good = Natalie couldn't say Mitchell hates
# two_prefix_prefix_bad = Mitchell couldn't say Natalie hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3703
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Natalie	Natalie	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Emily explains Travis likes himself.
# sentence_bad = Travis explains Emily likes himself.
# two_prefix_prefix_good = Emily explains Travis likes
# two_prefix_prefix_bad = Travis explains Emily likes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3704
1	Travis	Travis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Emily	Emily	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Martha might say Patrick might hide himself.
# sentence_bad = Patrick might say Martha might hide himself.
# two_prefix_prefix_good = Martha might say Patrick might hide
# two_prefix_prefix_bad = Patrick might say Martha might hide
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3705
1	Patrick	Patrick	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Martha	Martha	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	hide	hide	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Roger thinks Nicole will reveal herself.
# sentence_bad = Nicole thinks Roger will reveal herself.
# two_prefix_prefix_good = Roger thinks Nicole will reveal
# two_prefix_prefix_bad = Nicole thinks Roger will reveal
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3706
1	Nicole	Nicole	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Roger	Roger	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	reveal	reveal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Elaine should say Randolf hugs himself.
# sentence_bad = Randolf should say Elaine hugs himself.
# two_prefix_prefix_good = Elaine should say Randolf hugs
# two_prefix_prefix_bad = Randolf should say Elaine hugs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3707
1	Randolf	Randolf	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Elaine	Elaine	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lawrence will imagine Heidi wouldn't bother herself.
# sentence_bad = Heidi will imagine Lawrence wouldn't bother herself.
# two_prefix_prefix_good = Lawrence will imagine Heidi wouldn't bother
# two_prefix_prefix_bad = Heidi will imagine Lawrence wouldn't bother
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3708
1	Heidi	Heidi	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Lawrence	Lawrence	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	bother	bother	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Guy explains Sharon could boast about herself.
# sentence_bad = Sharon explains Guy could boast about herself.
# two_prefix_prefix_good = Guy explains Sharon could boast about
# two_prefix_prefix_bad = Sharon explains Guy could boast about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3709
1	Sharon	Sharon	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Guy	Guy	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	boast	boast	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Brett couldn't explain Jennifer wouldn't discuss herself.
# sentence_bad = Jennifer couldn't explain Brett wouldn't discuss herself.
# two_prefix_prefix_good = Brett couldn't explain Jennifer wouldn't discuss
# two_prefix_prefix_bad = Jennifer couldn't explain Brett wouldn't discuss
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3710
1	Jennifer	Jennifer	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Brett	Brett	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	discuss	discuss	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Theresa thinks Vincent boasts about himself.
# sentence_bad = Vincent thinks Theresa boasts about himself.
# two_prefix_prefix_good = Theresa thinks Vincent boasts about
# two_prefix_prefix_bad = Vincent thinks Theresa boasts about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3711
1	Vincent	Vincent	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Theresa	Theresa	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	boasts	boast	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rachel imagines Kevin could conceal himself.
# sentence_bad = Kevin imagines Rachel could conceal himself.
# two_prefix_prefix_good = Rachel imagines Kevin could conceal
# two_prefix_prefix_bad = Kevin imagines Rachel could conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3712
1	Kevin	Kevin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Rachel	Rachel	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samantha's sister explains Donald's ex-boyfriend didn't flee from himself.
# sentence_bad = Donald's ex-boyfriend explains Samantha's sister didn't flee from himself.
# two_prefix_prefix_good = Samantha's sister explains Donald's ex-boyfriend didn't flee from
# two_prefix_prefix_bad = Donald's ex-boyfriend explains Samantha's sister didn't flee from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3713
1-2	Donald's	_	_	_	_	_	_	_	_
1	Donald	Donald	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5-6	Samantha's	_	_	_	_	_	_	_	_
5	Samantha	Samantha	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	sister	sister	NOUN	NN	Number=Sing	10	nsubj	_	_
8-9	didn't	_	_	_	_	_	_	_	_
8	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	flee	flee	VERB	VB	VerbForm=Inf	4	ccomp	_	_
11	from	from	ADP	IN	_	12	case	_	_
12	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obl	_	SpaceAfter=No
13	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jodi's father explains Marie's grandmother won't dislike herself.
# sentence_bad = Marie's grandmother explains Jodi's father won't dislike herself.
# two_prefix_prefix_good = Jodi's father explains Marie's grandmother won't dislike
# two_prefix_prefix_bad = Marie's grandmother explains Jodi's father won't dislike
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3714
1-2	Marie's	_	_	_	_	_	_	_	_
1	Marie	Marie	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandmother	grandmother	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5-6	Jodi's	_	_	_	_	_	_	_	_
5	Jodi	Jodi	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	father	father	NOUN	NN	Number=Sing	10	nsubj	_	_
8-9	won't	_	_	_	_	_	_	_	_
8	wo	will	AUX	MD	VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	dislike	dislike	VERB	VB	VerbForm=Inf	4	ccomp	_	_
11	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jeffrey should say Meredith won't describe herself.
# sentence_bad = Meredith should say Jeffrey won't describe herself.
# two_prefix_prefix_good = Jeffrey should say Meredith won't describe
# two_prefix_prefix_bad = Meredith should say Jeffrey won't describe
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3715
1	Meredith	Meredith	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	describe	describe	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = James will explain Michelle shouldn't forget herself.
# sentence_bad = Michelle will explain James shouldn't forget herself.
# two_prefix_prefix_good = James will explain Michelle shouldn't forget
# two_prefix_prefix_bad = Michelle will explain James shouldn't forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3716
1	Michelle	Michelle	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	James	James	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	forget	forget	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Claire explains Liam's brother doesn't irritate himself.
# sentence_bad = Liam's brother explains Claire doesn't irritate himself.
# two_prefix_prefix_good = Claire explains Liam's brother doesn't irritate
# two_prefix_prefix_bad = Liam's brother explains Claire doesn't irritate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3717
1-2	Liam's	_	_	_	_	_	_	_	_
1	Liam	Liam	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	brother	brother	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Claire	Claire	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	irritate	irritate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jennifer thinks Rodney likes himself.
# sentence_bad = Rodney thinks Jennifer likes himself.
# two_prefix_prefix_good = Jennifer thinks Rodney likes
# two_prefix_prefix_bad = Rodney thinks Jennifer likes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3718
1	Rodney	Rodney	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jennifer	Jennifer	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Karla would say Charles could distract himself.
# sentence_bad = Charles would say Karla could distract himself.
# two_prefix_prefix_good = Karla would say Charles could distract
# two_prefix_prefix_bad = Charles would say Karla could distract
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3719
1	Charles	Charles	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Karla	Karla	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	distract	distract	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kayla does say Craig wouldn't love himself.
# sentence_bad = Craig does say Kayla wouldn't love himself.
# two_prefix_prefix_good = Kayla does say Craig wouldn't love
# two_prefix_prefix_bad = Craig does say Kayla wouldn't love
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3720
1	Craig	Craig	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kayla	Kayla	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	love	love	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Paul says Kristin finds herself.
# sentence_bad = Kristin says Paul finds herself.
# two_prefix_prefix_good = Paul says Kristin finds
# two_prefix_prefix_bad = Kristin says Paul finds
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3721
1	Kristin	Kristin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Paul	Paul	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Naomi can explain Benjamin would work with himself.
# sentence_bad = Benjamin can explain Naomi would work with himself.
# two_prefix_prefix_good = Naomi can explain Benjamin would work with
# two_prefix_prefix_bad = Benjamin can explain Naomi would work with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3722
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Naomi	Naomi	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
6	work	work	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	with	with	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carol shouldn't think Joel won't leave himself.
# sentence_bad = Joel shouldn't think Carol won't leave himself.
# two_prefix_prefix_good = Carol shouldn't think Joel won't leave
# two_prefix_prefix_bad = Joel shouldn't think Carol won't leave
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3723
1	Joel	Joel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carol	Carol	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	won't	_	_	_	_	_	_	_	_
6	wo	will	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	leave	leave	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Donna should think Chad could listen to himself.
# sentence_bad = Chad should think Donna could listen to himself.
# two_prefix_prefix_good = Donna should think Chad could listen to
# two_prefix_prefix_bad = Chad should think Donna could listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3724
1	Chad	Chad	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Donna	_	_	_	_	_	_	_	_
4	Don	Don	PROPN	NNP	Number=Sing	7	nsubj	_	_
5	na	to	PROPN	NNP	Number=Sing	4	flat	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	listen	listen	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kathleen thinks Kevin helps himself.
# sentence_bad = Kevin thinks Kathleen helps himself.
# two_prefix_prefix_good = Kathleen thinks Kevin helps
# two_prefix_prefix_bad = Kevin thinks Kathleen helps
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3725
1	Kevin	Kevin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kathleen	Kathleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Mary can't imagine Mitchell's nephew won't respect himself.
# sentence_bad = Mitchell's nephew can't imagine Mary won't respect himself.
# two_prefix_prefix_good = Mary can't imagine Mitchell's nephew won't respect
# two_prefix_prefix_bad = Mitchell's nephew can't imagine Mary won't respect
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3726
1-2	Mitchell's	_	_	_	_	_	_	_	_
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	nephew	nephew	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
7	Mary	Mary	PROPN	NNP	Number=Sing	10	nsubj	_	_
8-9	won't	_	_	_	_	_	_	_	_
8	wo	will	AUX	MD	VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	respect	respect	VERB	VB	VerbForm=Inf	6	ccomp	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = William thinks teachers' ex-wife listens to herself.
# sentence_bad = Teachers' ex-wife thinks William listens to herself.
# two_prefix_prefix_good = William thinks teachers' ex-wife listens to
# two_prefix_prefix_bad = Teachers' ex-wife thinks William listens to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3727
1	Teachers	teacher	NOUN	NNS	Number=Plur	3	nmod:poss	_	SpaceAfter=No
2	'	's	PART	POS	_	1	case	_	_
3	ex-wife	ex-wife	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	William	William	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	listens	listen	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Martha won't explain Bill likes himself.
# sentence_bad = Bill won't explain Martha likes himself.
# two_prefix_prefix_good = Martha won't explain Bill likes
# two_prefix_prefix_bad = Bill won't explain Martha likes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3728
1	Bill	Bill	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Martha	Martha	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Michelle imagines Timothy didn't hug himself.
# sentence_bad = Timothy imagines Michelle didn't hug himself.
# two_prefix_prefix_good = Michelle imagines Timothy didn't hug
# two_prefix_prefix_bad = Timothy imagines Michelle didn't hug
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3729
1	Timothy	Timothy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Michelle	Michelle	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	hug	hug	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Julia wouldn't imagine Mitchell describes himself.
# sentence_bad = Mitchell wouldn't imagine Julia describes himself.
# two_prefix_prefix_good = Julia wouldn't imagine Mitchell describes
# two_prefix_prefix_bad = Mitchell wouldn't imagine Julia describes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3730
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Julia	Julia	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Carla shouldn't explain Steven scares himself.
# sentence_bad = Steven shouldn't explain Carla scares himself.
# two_prefix_prefix_good = Carla shouldn't explain Steven scares
# two_prefix_prefix_bad = Steven shouldn't explain Carla scares
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3731
1	Steven	Steven	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carla	Carla	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	scares	scare	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jessica thinks Lawrence wouldn't question himself.
# sentence_bad = Lawrence thinks Jessica wouldn't question himself.
# two_prefix_prefix_good = Jessica thinks Lawrence wouldn't question
# two_prefix_prefix_bad = Lawrence thinks Jessica wouldn't question
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3732
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jessica	Jessica	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	question	question	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Anna will explain Thomas couldn't hurt himself.
# sentence_bad = Thomas will explain Anna couldn't hurt himself.
# two_prefix_prefix_good = Anna will explain Thomas couldn't hurt
# two_prefix_prefix_bad = Thomas will explain Anna couldn't hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3733
1	Thomas	Thomas	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Anna	Anna	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	hurt	hurt	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Cheryl thinks Joel will admire himself.
# sentence_bad = Joel thinks Cheryl will admire himself.
# two_prefix_prefix_good = Cheryl thinks Joel will admire
# two_prefix_prefix_bad = Joel thinks Cheryl will admire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3734
1	Joel	Joel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Cheryl	Cheryl	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	admire	admire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Randolf thinks Marla could hide herself.
# sentence_bad = Marla thinks Randolf could hide herself.
# two_prefix_prefix_good = Randolf thinks Marla could hide
# two_prefix_prefix_bad = Marla thinks Randolf could hide
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3735
1	Marla	Marla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Randolf	Randolf	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	hide	hide	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Margaret says Russell discovers himself.
# sentence_bad = Russell says Margaret discovers himself.
# two_prefix_prefix_good = Margaret says Russell discovers
# two_prefix_prefix_bad = Russell says Margaret discovers
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3736
1	Russell	Russell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Margaret	Margaret	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	discovers	discover	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Emily thinks Robert references himself.
# sentence_bad = Robert thinks Emily references himself.
# two_prefix_prefix_good = Emily thinks Robert references
# two_prefix_prefix_bad = Robert thinks Emily references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3737
1	Robert	Robert	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Emily	Emily	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Keith can explain Beth doesn't describe herself.
# sentence_bad = Beth can explain Keith doesn't describe herself.
# two_prefix_prefix_good = Keith can explain Beth doesn't describe
# two_prefix_prefix_bad = Beth can explain Keith doesn't describe
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3738
1	Beth	Beth	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Keith	Keith	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	doesn't	_	_	_	_	_	_	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	describe	describe	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Pamela says Thomas can embarrass himself.
# sentence_bad = Thomas says Pamela can embarrass himself.
# two_prefix_prefix_good = Pamela says Thomas can embarrass
# two_prefix_prefix_bad = Thomas says Pamela can embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3739
1	Thomas	Thomas	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Pamela	Pamela	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	embarrass	embarrass	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Marie explains Richard can't annoy himself.
# sentence_bad = Richard explains Marie can't annoy himself.
# two_prefix_prefix_good = Marie explains Richard can't annoy
# two_prefix_prefix_bad = Richard explains Marie can't annoy
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3740
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Marie	Marie	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	annoy	annoy	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = That dancer can't say Chad sounds like himself.
# sentence_bad = Chad can't say that dancer sounds like himself.
# two_prefix_prefix_good = That dancer can't say Chad sounds like
# two_prefix_prefix_bad = Chad can't say that dancer sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3741
1	Chad	Chad	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	that	that	DET	DT	Number=Sing|PronType=Dem	6	det	_	_
6	dancer	dancer	NOUN	NN	Number=Sing	7	nsubj	_	_
7	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	like	like	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Every guy imagines Karla can't forget herself.
# sentence_bad = Karla imagines every guy can't forget herself.
# two_prefix_prefix_good = Every guy imagines Karla can't forget
# two_prefix_prefix_bad = Karla imagines every guy can't forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3742
1	Karla	Karla	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	every	every	DET	DT	_	4	det	_	_
4	guy	guy	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	can't	_	_	_	_	_	_	_	_
5	ca	can	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	forget	forget	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Meredith imagines Jerry should think about himself.
# sentence_bad = Jerry imagines Meredith should think about himself.
# two_prefix_prefix_good = Meredith imagines Jerry should think about
# two_prefix_prefix_bad = Jerry imagines Meredith should think about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3743
1	Jerry	Jerry	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Meredith	Meredith	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Brian explains Maria won't care for herself.
# sentence_bad = Maria explains Brian won't care for herself.
# two_prefix_prefix_good = Brian explains Maria won't care for
# two_prefix_prefix_bad = Maria explains Brian won't care for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3744
1	Maria	Maria	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Brian	Brian	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	care	care	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	for	for	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Cindy did think Gerald doesn't scare himself.
# sentence_bad = Gerald did think Cindy doesn't scare himself.
# two_prefix_prefix_good = Cindy did think Gerald doesn't scare
# two_prefix_prefix_bad = Gerald did think Cindy doesn't scare
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3745
1	Gerald	Gerald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Cindy	Cindy	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	doesn't	_	_	_	_	_	_	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	scare	scare	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Eva says George's boyfriend observes himself.
# sentence_bad = George's boyfriend says Eva observes himself.
# two_prefix_prefix_good = Eva says George's boyfriend observes
# two_prefix_prefix_bad = George's boyfriend says Eva observes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3746
1-2	George's	_	_	_	_	_	_	_	_
1	George	George	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Eva	Eva	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	observes	observe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Adam couldn't explain Tonya questions herself.
# sentence_bad = Tonya couldn't explain Adam questions herself.
# two_prefix_prefix_good = Adam couldn't explain Tonya questions
# two_prefix_prefix_bad = Tonya couldn't explain Adam questions
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3747
1	Tonya	Tonya	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Adam	Adam	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Grace could imagine Bruce's husband questions himself.
# sentence_bad = Bruce's husband could imagine Grace questions himself.
# two_prefix_prefix_good = Grace could imagine Bruce's husband questions
# two_prefix_prefix_bad = Bruce's husband could imagine Grace questions
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3748
1-2	Bruce's	_	_	_	_	_	_	_	_
1	Bruce	Bruce	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	husband	husband	NOUN	NN	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
6	Grace	Grace	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Connie's wife can't imagine Peter returns to himself.
# sentence_bad = Peter can't imagine Connie's wife returns to himself.
# two_prefix_prefix_good = Connie's wife can't imagine Peter returns to
# two_prefix_prefix_bad = Peter can't imagine Connie's wife returns to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3749
1	Peter	Peter	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Connie's	_	_	_	_	_	_	_	_
5	Connie	Connie	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	wife	wife	NOUN	NN	Number=Sing	8	nsubj	_	_
8	returns	return	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
9	to	to	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Cheryl says Raymond doesn't bore himself.
# sentence_bad = Raymond says Cheryl doesn't bore himself.
# two_prefix_prefix_good = Cheryl says Raymond doesn't bore
# two_prefix_prefix_bad = Raymond says Cheryl doesn't bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3750
1	Raymond	Raymond	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Cheryl	Cheryl	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	bore	bore	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Theodore didn't explain Martha hires herself.
# sentence_bad = Martha didn't explain Theodore hires herself.
# two_prefix_prefix_good = Theodore didn't explain Martha hires
# two_prefix_prefix_bad = Martha didn't explain Theodore hires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3751
1	Martha	Martha	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Theodore	Theodore	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hires	hire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Samuel didn't think Amelia cures herself.
# sentence_bad = Amelia didn't think Samuel cures herself.
# two_prefix_prefix_good = Samuel didn't think Amelia cures
# two_prefix_prefix_bad = Amelia didn't think Samuel cures
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3752
1	Amelia	Amelia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Samuel	Samuel	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	cures	cure	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Julie shouldn't say Edward shouldn't irritate himself.
# sentence_bad = Edward shouldn't say Julie shouldn't irritate himself.
# two_prefix_prefix_good = Julie shouldn't say Edward shouldn't irritate
# two_prefix_prefix_bad = Edward shouldn't say Julie shouldn't irritate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3753
1	Edward	Edward	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Julie	Julie	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	irritate	irritate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tracy could imagine George didn't dislike himself.
# sentence_bad = George could imagine Tracy didn't dislike himself.
# two_prefix_prefix_good = Tracy could imagine George didn't dislike
# two_prefix_prefix_bad = George could imagine Tracy didn't dislike
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3754
1	George	George	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tracy	Tracy	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	dislike	dislike	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Keith thinks Rachel didn't respect herself.
# sentence_bad = Rachel thinks Keith didn't respect herself.
# two_prefix_prefix_good = Keith thinks Rachel didn't respect
# two_prefix_prefix_bad = Rachel thinks Keith didn't respect
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3755
1	Rachel	Rachel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Keith	Keith	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	respect	respect	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kenneth can't say Stacey's girlfriend won't talk about herself.
# sentence_bad = Stacey's girlfriend can't say Kenneth won't talk about herself.
# two_prefix_prefix_good = Kenneth can't say Stacey's girlfriend won't talk about
# two_prefix_prefix_bad = Stacey's girlfriend can't say Kenneth won't talk about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3756
1-2	Stacey's	_	_	_	_	_	_	_	_
1	Stacey	Stacey	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	girlfriend	girlfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	Kenneth	Kenneth	PROPN	NNP	Number=Sing	10	nsubj	_	_
8-9	won't	_	_	_	_	_	_	_	_
8	wo	will	AUX	MD	VerbForm=Fin	10	aux	_	_
9	n't	not	PART	RB	_	10	advmod	_	_
10	talk	talk	VERB	VB	VerbForm=Inf	6	ccomp	_	_
11	about	about	ADP	IN	_	12	case	_	_
12	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obl	_	SpaceAfter=No
13	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Patients' grandson explains Debra wouldn't work with herself.
# sentence_bad = Debra explains patients' grandson wouldn't work with herself.
# two_prefix_prefix_good = Patients' grandson explains Debra wouldn't work with
# two_prefix_prefix_bad = Debra explains patients' grandson wouldn't work with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3758
1	Debra	Debra	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	patients'	_	_	_	_	_	_	_	_
3	patients	patient	NOUN	NNS	Number=Plur	5	nmod:poss	_	_
4	'	's	PART	POS	_	3	case	_	_
5	grandson	grandson	NOUN	NN	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	work	work	VERB	VB	VerbForm=Inf	2	ccomp	_	_
9	with	with	ADP	IN	_	10	case	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Roger says Dawn insults herself.
# sentence_bad = Dawn says Roger insults herself.
# two_prefix_prefix_good = Roger says Dawn insults
# two_prefix_prefix_bad = Dawn says Roger insults
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3759
1	Dawn	Dawn	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Roger	Roger	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Candice's boyfriend thinks Janet finds herself.
# sentence_bad = Janet thinks Candice's boyfriend finds herself.
# two_prefix_prefix_good = Candice's boyfriend thinks Janet finds
# two_prefix_prefix_bad = Janet thinks Candice's boyfriend finds
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3760
1	Janet	Janet	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Candice's	_	_	_	_	_	_	_	_
3	Candice	Candice	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	boyfriend	boyfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
6	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gary would say Naomi returns to herself.
# sentence_bad = Naomi would say Gary returns to herself.
# two_prefix_prefix_good = Gary would say Naomi returns to
# two_prefix_prefix_bad = Naomi would say Gary returns to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3761
1	Naomi	Naomi	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Gary	Gary	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	returns	return	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Deborah's father wouldn't think Marie can upset herself.
# sentence_bad = Marie wouldn't think Deborah's father can upset herself.
# two_prefix_prefix_good = Deborah's father wouldn't think Marie can upset
# two_prefix_prefix_bad = Marie wouldn't think Deborah's father can upset
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3762
1	Marie	Marie	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Deborah's	_	_	_	_	_	_	_	_
5	Deborah	Deborah	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	father	father	NOUN	NN	Number=Sing	9	nsubj	_	_
8	can	can	AUX	MD	VerbForm=Fin	9	aux	_	_
9	upset	upset	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Melinda will say Jeffrey didn't return to himself.
# sentence_bad = Jeffrey will say Melinda didn't return to himself.
# two_prefix_prefix_good = Melinda will say Jeffrey didn't return to
# two_prefix_prefix_bad = Jeffrey will say Melinda didn't return to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3763
1	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Melinda	Melinda	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	return	return	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Cindy explains Liam notices himself.
# sentence_bad = Liam explains Cindy notices himself.
# two_prefix_prefix_good = Cindy explains Liam notices
# two_prefix_prefix_bad = Liam explains Cindy notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3764
1	Liam	Liam	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Cindy	Cindy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Steven shouldn't explain Alicia does disturb herself.
# sentence_bad = Alicia shouldn't explain Steven does disturb herself.
# two_prefix_prefix_good = Steven shouldn't explain Alicia does disturb
# two_prefix_prefix_bad = Alicia shouldn't explain Steven does disturb
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3765
1	Alicia	Alicia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Steven	Steven	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	disturb	disturb	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jeffrey does explain Karen's girlfriend won't disagree with herself.
# sentence_bad = Karen's girlfriend does explain Jeffrey won't disagree with herself.
# two_prefix_prefix_good = Jeffrey does explain Karen's girlfriend won't disagree with
# two_prefix_prefix_bad = Karen's girlfriend does explain Jeffrey won't disagree with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3766
1-2	Karen's	_	_	_	_	_	_	_	_
1	Karen	Karen	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	girlfriend	girlfriend	NOUN	NN	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	won't	_	_	_	_	_	_	_	_
7	wo	will	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	disagree	disagree	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	with	with	ADP	IN	_	11	case	_	_
11	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Anne says Paul dislikes himself.
# sentence_bad = Paul says Anne dislikes himself.
# two_prefix_prefix_good = Anne says Paul dislikes
# two_prefix_prefix_bad = Paul says Anne dislikes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3767
1	Paul	Paul	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Anne	Anne	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	dislikes	dislike	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carol did imagine James does hurt himself.
# sentence_bad = James did imagine Carol does hurt himself.
# two_prefix_prefix_good = Carol did imagine James does hurt
# two_prefix_prefix_bad = James did imagine Carol does hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3768
1	James	James	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Carol	Carol	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	hurt	hurt	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Barbara explains Alexander did find himself.
# sentence_bad = Alexander explains Barbara did find himself.
# two_prefix_prefix_good = Barbara explains Alexander did find
# two_prefix_prefix_bad = Alexander explains Barbara did find
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3769
1	Alexander	Alexander	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Barbara	Barbara	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	find	find	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Brenda explains Bruce would conceal himself.
# sentence_bad = Bruce explains Brenda would conceal himself.
# two_prefix_prefix_good = Brenda explains Bruce would conceal
# two_prefix_prefix_bad = Bruce explains Brenda would conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3770
1	Bruce	Bruce	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Brenda	Brenda	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tamara imagines Gary talks about himself.
# sentence_bad = Gary imagines Tamara talks about himself.
# two_prefix_prefix_good = Tamara imagines Gary talks about
# two_prefix_prefix_bad = Gary imagines Tamara talks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3771
1	Gary	Gary	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tamara	Tamara	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christine says Bradley couldn't question himself.
# sentence_bad = Bradley says Christine couldn't question himself.
# two_prefix_prefix_good = Christine says Bradley couldn't question
# two_prefix_prefix_bad = Bradley says Christine couldn't question
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3772
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Christine	Christine	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	question	question	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sabrina explains Joel approaches himself.
# sentence_bad = Joel explains Sabrina approaches himself.
# two_prefix_prefix_good = Sabrina explains Joel approaches
# two_prefix_prefix_bad = Joel explains Sabrina approaches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3773
1	Joel	Joel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sabrina	Sabrina	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Nicole thinks every man references himself.
# sentence_bad = Every man thinks Nicole references himself.
# two_prefix_prefix_good = Nicole thinks every man references
# two_prefix_prefix_bad = Every man thinks Nicole references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3774
1	Every	every	DET	DT	_	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	3	nsubj	_	_
3	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Nicole	Nicole	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lawrence imagines Tammy might hurt herself.
# sentence_bad = Tammy imagines Lawrence might hurt herself.
# two_prefix_prefix_good = Lawrence imagines Tammy might hurt
# two_prefix_prefix_bad = Tammy imagines Lawrence might hurt
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3775
1	Tammy	Tammy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Lawrence	Lawrence	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	hurt	hurt	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Theodore explains Jessica helps herself.
# sentence_bad = Jessica explains Theodore helps herself.
# two_prefix_prefix_good = Theodore explains Jessica helps
# two_prefix_prefix_bad = Jessica explains Theodore helps
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3776
1	Jessica	Jessica	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Theodore	Theodore	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Victoria didn't imagine Russell does discover himself.
# sentence_bad = Russell didn't imagine Victoria does discover himself.
# two_prefix_prefix_good = Victoria didn't imagine Russell does discover
# two_prefix_prefix_bad = Russell didn't imagine Victoria does discover
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3777
1	Russell	Russell	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Victoria	Victoria	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	discover	discover	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Anna thinks Charles reveals himself.
# sentence_bad = Charles thinks Anna reveals himself.
# two_prefix_prefix_good = Anna thinks Charles reveals
# two_prefix_prefix_bad = Charles thinks Anna reveals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3778
1	Charles	Charles	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Anna	Anna	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jodi doesn't explain Curtis could scare himself.
# sentence_bad = Curtis doesn't explain Jodi could scare himself.
# two_prefix_prefix_good = Jodi doesn't explain Curtis could scare
# two_prefix_prefix_bad = Curtis doesn't explain Jodi could scare
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3779
1	Curtis	Curtis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Jodi	Jodi	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	scare	scare	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Homer did think Renee insults herself.
# sentence_bad = Renee did think Homer insults herself.
# two_prefix_prefix_good = Homer did think Renee insults
# two_prefix_prefix_bad = Renee did think Homer insults
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3780
1	Renee	Renee	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Homer	Homer	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Christopher says Debra could distract herself.
# sentence_bad = Debra says Christopher could distract herself.
# two_prefix_prefix_good = Christopher says Debra could distract
# two_prefix_prefix_bad = Debra says Christopher could distract
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3781
1	Debra	Debra	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Christopher	Christopher	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	distract	distract	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Eva says Dennis investigates himself.
# sentence_bad = Dennis says Eva investigates himself.
# two_prefix_prefix_good = Eva says Dennis investigates
# two_prefix_prefix_bad = Dennis says Eva investigates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3782
1	Dennis	Dennis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Eva	Eva	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christopher shouldn't explain Tamara can aggravate herself.
# sentence_bad = Tamara shouldn't explain Christopher can aggravate herself.
# two_prefix_prefix_good = Christopher shouldn't explain Tamara can aggravate
# two_prefix_prefix_bad = Tamara shouldn't explain Christopher can aggravate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3783
1	Tamara	Tamara	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Christopher	Christopher	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	aggravate	aggravate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Heidi will imagine Stephen escapes from himself.
# sentence_bad = Stephen will imagine Heidi escapes from himself.
# two_prefix_prefix_good = Heidi will imagine Stephen escapes from
# two_prefix_prefix_bad = Stephen will imagine Heidi escapes from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3784
1	Stephen	Stephen	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Heidi	Heidi	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	escapes	escape	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	from	from	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nicole explains Noah wouldn't like himself.
# sentence_bad = Noah explains Nicole wouldn't like himself.
# two_prefix_prefix_good = Nicole explains Noah wouldn't like
# two_prefix_prefix_bad = Noah explains Nicole wouldn't like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3785
1	Noah	Noah	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nicole	Nicole	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	like	like	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Eva thinks Daniel won't praise himself.
# sentence_bad = Daniel thinks Eva won't praise himself.
# two_prefix_prefix_good = Eva thinks Daniel won't praise
# two_prefix_prefix_bad = Daniel thinks Eva won't praise
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3786
1	Daniel	Daniel	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Eva	Eva	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	praise	praise	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Ella should think the Borgias' ex-husband admires himself.
# sentence_bad = The Borgias' ex-husband should think Ella admires himself.
# two_prefix_prefix_good = Ella should think the Borgias' ex-husband admires
# two_prefix_prefix_bad = The Borgias' ex-husband should think Ella admires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3787
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2-3	Borgias'	_	_	_	_	_	_	_	_
2	Borgias	Borgia	PROPN	NNPS	Number=Plur	4	nmod:poss	_	_
3	'	's	PART	POS	_	2	case	_	_
4	ex-husband	ex-husband	NOUN	NN	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
7	Ella	Ella	PROPN	NNP	Number=Sing	8	nsubj	_	_
8	admires	admire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Paula explains Gerald hates himself.
# sentence_bad = Gerald explains Paula hates himself.
# two_prefix_prefix_good = Paula explains Gerald hates
# two_prefix_prefix_bad = Gerald explains Paula hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3788
1	Gerald	Gerald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Paula	Paula	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kimberley could think Derek couldn't visit himself.
# sentence_bad = Derek could think Kimberley couldn't visit himself.
# two_prefix_prefix_good = Kimberley could think Derek couldn't visit
# two_prefix_prefix_bad = Derek could think Kimberley couldn't visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3789
1	Derek	Derek	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kimberley	Kimberley	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	visit	visit	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carol thinks Charles fires himself.
# sentence_bad = Charles thinks Carol fires himself.
# two_prefix_prefix_good = Carol thinks Charles fires
# two_prefix_prefix_bad = Charles thinks Carol fires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3790
1	Charles	Charles	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carol	Carol	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Benjamin's mother explains Marcus could talk about himself.
# sentence_bad = Marcus explains Benjamin's mother could talk about himself.
# two_prefix_prefix_good = Benjamin's mother explains Marcus could talk about
# two_prefix_prefix_bad = Marcus explains Benjamin's mother could talk about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3791
1	Marcus	Marcus	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Benjamin's	_	_	_	_	_	_	_	_
3	Benjamin	Benjamin	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	mother	mother	NOUN	NN	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	talk	talk	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Bradley did explain Marie investigates herself.
# sentence_bad = Marie did explain Bradley investigates herself.
# two_prefix_prefix_good = Bradley did explain Marie investigates
# two_prefix_prefix_bad = Marie did explain Bradley investigates
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3792
1	Marie	Marie	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Bradley	Bradley	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Laura explains Marcus discovers himself.
# sentence_bad = Marcus explains Laura discovers himself.
# two_prefix_prefix_good = Laura explains Marcus discovers
# two_prefix_prefix_bad = Marcus explains Laura discovers
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3793
1	Marcus	Marcus	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Laura	Laura	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	discovers	discover	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Emily thinks Jason could visit himself.
# sentence_bad = Jason thinks Emily could visit himself.
# two_prefix_prefix_good = Emily thinks Jason could visit
# two_prefix_prefix_bad = Jason thinks Emily could visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3795
1	Jason	Jason	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Emily	Emily	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	visit	visit	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Melinda will explain Mitchell wouldn't describe himself.
# sentence_bad = Mitchell will explain Melinda wouldn't describe himself.
# two_prefix_prefix_good = Melinda will explain Mitchell wouldn't describe
# two_prefix_prefix_bad = Mitchell will explain Melinda wouldn't describe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3796
1	Mitchell	Mitchell	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Melinda	Melinda	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	describe	describe	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Diana says Bradley couldn't research himself.
# sentence_bad = Bradley says Diana couldn't research himself.
# two_prefix_prefix_good = Diana says Bradley couldn't research
# two_prefix_prefix_bad = Bradley says Diana couldn't research
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3797
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Diana	Diana	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	research	research	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Dan explains the waitress might discover herself.
# sentence_bad = The waitress explains Dan might discover herself.
# two_prefix_prefix_good = Dan explains the waitress might discover
# two_prefix_prefix_bad = The waitress explains Dan might discover
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3798
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	waitress	waitress	NOUN	NN	Number=Sing	3	nsubj	_	_
3	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Dan	Dan	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	discover	discover	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Martin's nephew can say Christine won't astound herself.
# sentence_bad = Christine can say Martin's nephew won't astound herself.
# two_prefix_prefix_good = Martin's nephew can say Christine won't astound
# two_prefix_prefix_bad = Christine can say Martin's nephew won't astound
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3799
1	Christine	Christine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Martin's	_	_	_	_	_	_	_	_
4	Martin	Martin	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	nephew	nephew	NOUN	NN	Number=Sing	9	nsubj	_	_
7-8	won't	_	_	_	_	_	_	_	_
7	wo	will	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	astound	astound	VERB	VB	VerbForm=Inf	3	ccomp	_	_
10	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Rachelle didn't imagine Donald could aggravate himself.
# sentence_bad = Donald didn't imagine Rachelle could aggravate himself.
# two_prefix_prefix_good = Rachelle didn't imagine Donald could aggravate
# two_prefix_prefix_bad = Donald didn't imagine Rachelle could aggravate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3800
1	Donald	Donald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Rachelle	Rachelle	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	aggravate	aggravate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Elaine imagines Patrick won't upset himself.
# sentence_bad = Patrick imagines Elaine won't upset himself.
# two_prefix_prefix_good = Elaine imagines Patrick won't upset
# two_prefix_prefix_bad = Patrick imagines Elaine won't upset
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3801
1	Patrick	Patrick	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Elaine	Elaine	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	upset	upset	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Mary explains Russell can argue about himself.
# sentence_bad = Russell explains Mary can argue about himself.
# two_prefix_prefix_good = Mary explains Russell can argue about
# two_prefix_prefix_bad = Russell explains Mary can argue about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3802
1	Russell	Russell	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Mary	Mary	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	argue	argue	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Linda imagines Jerry can't appreciate himself.
# sentence_bad = Jerry imagines Linda can't appreciate himself.
# two_prefix_prefix_good = Linda imagines Jerry can't appreciate
# two_prefix_prefix_bad = Jerry imagines Linda can't appreciate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3803
1	Jerry	Jerry	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Linda	Linda	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	appreciate	appreciate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Beverly didn't imagine Eric describes himself.
# sentence_bad = Eric didn't imagine Beverly describes himself.
# two_prefix_prefix_good = Beverly didn't imagine Eric describes
# two_prefix_prefix_bad = Eric didn't imagine Beverly describes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3804
1	Eric	Eric	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Beverly	Beverly	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Karla could explain Adam can annoy himself.
# sentence_bad = Adam could explain Karla can annoy himself.
# two_prefix_prefix_good = Karla could explain Adam can annoy
# two_prefix_prefix_bad = Adam could explain Karla can annoy
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3805
1	Adam	Adam	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Karla	Karla	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	annoy	annoy	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Julie imagines Anne's brother can visit himself.
# sentence_bad = Anne's brother imagines Julie can visit himself.
# two_prefix_prefix_good = Julie imagines Anne's brother can visit
# two_prefix_prefix_bad = Anne's brother imagines Julie can visit
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3806
1-2	Anne's	_	_	_	_	_	_	_	_
1	Anne	Anne	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	brother	brother	NOUN	NN	Number=Sing	4	nsubj	_	_
4	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Julie	Julie	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	can	can	AUX	MD	VerbForm=Fin	7	aux	_	_
7	visit	visit	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Patrick says an actress will sound like herself.
# sentence_bad = An actress says Patrick will sound like herself.
# two_prefix_prefix_good = Patrick says an actress will sound like
# two_prefix_prefix_bad = An actress says Patrick will sound like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3807
1	An	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2	actress	actress	NOUN	NN	Number=Sing	3	nsubj	_	_
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Patrick	Patrick	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	sound	sound	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	like	like	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Joel imagines Deborah hates herself.
# sentence_bad = Deborah imagines Joel hates herself.
# two_prefix_prefix_good = Joel imagines Deborah hates
# two_prefix_prefix_bad = Deborah imagines Joel hates
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3808
1	Deborah	Deborah	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Joel	Joel	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Amelia imagines Richard attacks himself.
# sentence_bad = Richard imagines Amelia attacks himself.
# two_prefix_prefix_good = Amelia imagines Richard attacks
# two_prefix_prefix_bad = Richard imagines Amelia attacks
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3809
1	Richard	Richard	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Amelia	Amelia	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Margaret imagines Brad can't worry himself.
# sentence_bad = Brad imagines Margaret can't worry himself.
# two_prefix_prefix_good = Margaret imagines Brad can't worry
# two_prefix_prefix_bad = Brad imagines Margaret can't worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3810
1	Brad	Brad	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Margaret	Margaret	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	worry	worry	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = This man thinks Jacqueline fires herself.
# sentence_bad = Jacqueline thinks this man fires herself.
# two_prefix_prefix_good = This man thinks Jacqueline fires
# two_prefix_prefix_bad = Jacqueline thinks this man fires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3811
1	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	this	this	DET	DT	Number=Sing|PronType=Dem	4	det	_	_
4	man	man	NOUN	NN	Number=Sing	5	nsubj	_	_
5	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = A lot of senators' nephew thinks Tara shouldn't think about herself.
# sentence_bad = Tara thinks a lot of senators' nephew shouldn't think about herself.
# two_prefix_prefix_good = A lot of senators' nephew thinks Tara shouldn't think about
# two_prefix_prefix_bad = Tara thinks a lot of senators' nephew shouldn't think about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3812
1	Tara	Tara	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	a	a	DET	DT	Definite=Ind|PronType=Art	4	det	_	_
4	lot	lot	NOUN	NN	Number=Sing	11	nsubj	_	_
5	of	of	ADP	IN	_	8	case	_	_
6-7	senators'	_	_	_	_	_	_	_	_
6	senators	senator	NOUN	NNS	Number=Plur	8	nmod:poss	_	_
7	'	's	PART	POS	_	6	case	_	_
8	nephew	nephew	NOUN	NN	Number=Sing	4	nmod	_	_
9-10	shouldn't	_	_	_	_	_	_	_	_
9	should	should	AUX	MD	VerbForm=Fin	11	aux	_	_
10	n't	not	PART	RB	_	11	advmod	_	_
11	think	think	VERB	VB	VerbForm=Inf	2	ccomp	_	_
12	about	about	ADP	IN	_	13	case	_	_
13	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	11	obl	_	SpaceAfter=No
14	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Guy doesn't explain Carla thinks about herself.
# sentence_bad = Carla doesn't explain Guy thinks about herself.
# two_prefix_prefix_good = Guy doesn't explain Carla thinks about
# two_prefix_prefix_bad = Carla doesn't explain Guy thinks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3813
1	Carla	Carla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Guy	Guy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Andrea says Alan cares for himself.
# sentence_bad = Alan says Andrea cares for himself.
# two_prefix_prefix_good = Andrea says Alan cares for
# two_prefix_prefix_bad = Alan says Andrea cares for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3814
1	Alan	Alan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jennifer imagines Derek likes himself.
# sentence_bad = Derek imagines Jennifer likes himself.
# two_prefix_prefix_good = Jennifer imagines Derek likes
# two_prefix_prefix_bad = Derek imagines Jennifer likes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3815
1	Derek	Derek	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jennifer	Jennifer	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stacy explains Brett's son discovers himself.
# sentence_bad = Brett's son explains Stacy discovers himself.
# two_prefix_prefix_good = Stacy explains Brett's son discovers
# two_prefix_prefix_bad = Brett's son explains Stacy discovers
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3816
1-2	Brett's	_	_	_	_	_	_	_	_
1	Brett	Brett	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Stacy	Stacy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	discovers	discover	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kendra wouldn't think Craig did appreciate himself.
# sentence_bad = Craig wouldn't think Kendra did appreciate himself.
# two_prefix_prefix_good = Kendra wouldn't think Craig did appreciate
# two_prefix_prefix_bad = Craig wouldn't think Kendra did appreciate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3817
1	Craig	Craig	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kendra	Kendra	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	appreciate	appreciate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Julia says Kenneth does bore himself.
# sentence_bad = Kenneth says Julia does bore himself.
# two_prefix_prefix_good = Julia says Kenneth does bore
# two_prefix_prefix_bad = Kenneth says Julia does bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3818
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Julia	Julia	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	bore	bore	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kristin can say Benjamin's grandson forgets himself.
# sentence_bad = Benjamin's grandson can say Kristin forgets himself.
# two_prefix_prefix_good = Kristin can say Benjamin's grandson forgets
# two_prefix_prefix_bad = Benjamin's grandson can say Kristin forgets
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3819
1-2	Benjamin's	_	_	_	_	_	_	_	_
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandson	grandson	NOUN	NN	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
6	Kristin	Kristin	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	forgets	forget	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Derek wouldn't think Deborah does kiss herself.
# sentence_bad = Deborah wouldn't think Derek does kiss herself.
# two_prefix_prefix_good = Derek wouldn't think Deborah does kiss
# two_prefix_prefix_bad = Deborah wouldn't think Derek does kiss
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3820
1	Deborah	Deborah	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Derek	Derek	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
7	kiss	kiss	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Renee imagines Bradley finds himself.
# sentence_bad = Bradley imagines Renee finds himself.
# two_prefix_prefix_good = Renee imagines Bradley finds
# two_prefix_prefix_bad = Bradley imagines Renee finds
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3821
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Renee	Renee	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Richard thinks Jill should distract herself.
# sentence_bad = Jill thinks Richard should distract herself.
# two_prefix_prefix_good = Richard thinks Jill should distract
# two_prefix_prefix_bad = Jill thinks Richard should distract
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3822
1	Jill	Jill	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Richard	Richard	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	distract	distract	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rebecca might imagine Larry does leave himself.
# sentence_bad = Larry might imagine Rebecca does leave himself.
# two_prefix_prefix_good = Rebecca might imagine Larry does leave
# two_prefix_prefix_bad = Larry might imagine Rebecca does leave
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3823
1	Larry	Larry	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Rebecca	Rebecca	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
6	leave	leave	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Matt thinks Pamela should impress herself.
# sentence_bad = Pamela thinks Matt should impress herself.
# two_prefix_prefix_good = Matt thinks Pamela should impress
# two_prefix_prefix_bad = Pamela thinks Matt should impress
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3824
1	Pamela	Pamela	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Matt	Matt	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	impress	impress	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Naomi's girlfriend explains Thomas will hire himself.
# sentence_bad = Thomas explains Naomi's girlfriend will hire himself.
# two_prefix_prefix_good = Naomi's girlfriend explains Thomas will hire
# two_prefix_prefix_bad = Thomas explains Naomi's girlfriend will hire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3825
1	Thomas	Thomas	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Naomi's	_	_	_	_	_	_	_	_
3	Naomi	Naomi	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	girlfriend	girlfriend	NOUN	NN	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	hire	hire	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jane will think James researches himself.
# sentence_bad = James will think Jane researches himself.
# two_prefix_prefix_good = Jane will think James researches
# two_prefix_prefix_bad = James will think Jane researches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3826
1	James	James	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Jane	Jane	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	researches	research	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Steven can imagine Barbara didn't impress herself.
# sentence_bad = Barbara can imagine Steven didn't impress herself.
# two_prefix_prefix_good = Steven can imagine Barbara didn't impress
# two_prefix_prefix_bad = Barbara can imagine Steven didn't impress
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3827
1	Barbara	Barbara	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Steven	Steven	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	impress	impress	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Karen could think David will see himself.
# sentence_bad = David could think Karen will see himself.
# two_prefix_prefix_good = Karen could think David will see
# two_prefix_prefix_bad = David could think Karen will see
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3828
1	David	David	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Karen	Karen	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	see	see	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jeffrey's ex-girlfriend thinks Thomas should describe himself.
# sentence_bad = Thomas thinks Jeffrey's ex-girlfriend should describe himself.
# two_prefix_prefix_good = Jeffrey's ex-girlfriend thinks Thomas should describe
# two_prefix_prefix_bad = Thomas thinks Jeffrey's ex-girlfriend should describe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3829
1	Thomas	Thomas	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Jeffrey's	_	_	_	_	_	_	_	_
3	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	ex-girlfriend	ex-girlfriend	NOUN	NN	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	describe	describe	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Alan thinks Carrie could forget herself.
# sentence_bad = Carrie thinks Alan could forget herself.
# two_prefix_prefix_good = Alan thinks Carrie could forget
# two_prefix_prefix_bad = Carrie thinks Alan could forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3830
1	Carrie	Carrie	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Alan	Alan	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	forget	forget	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sabrina says Lawrence doesn't heal himself.
# sentence_bad = Lawrence says Sabrina doesn't heal himself.
# two_prefix_prefix_good = Sabrina says Lawrence doesn't heal
# two_prefix_prefix_bad = Lawrence says Sabrina doesn't heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3831
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Sabrina	Sabrina	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	heal	heal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Amanda imagines Bruce might annoy himself.
# sentence_bad = Bruce imagines Amanda might annoy himself.
# two_prefix_prefix_good = Amanda imagines Bruce might annoy
# two_prefix_prefix_bad = Bruce imagines Amanda might annoy
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3832
1	Bruce	Bruce	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Amanda	Amanda	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	annoy	annoy	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Maria's wife might explain Keith couldn't bore himself.
# sentence_bad = Keith might explain Maria's wife couldn't bore himself.
# two_prefix_prefix_good = Maria's wife might explain Keith couldn't bore
# two_prefix_prefix_bad = Keith might explain Maria's wife couldn't bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3833
1	Keith	Keith	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Maria's	_	_	_	_	_	_	_	_
4	Maria	Maria	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	wife	wife	NOUN	NN	Number=Sing	9	nsubj	_	_
7-8	couldn't	_	_	_	_	_	_	_	_
7	could	could	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	bore	bore	VERB	VB	VerbForm=Inf	3	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Teresa imagines Craig won't hide himself.
# sentence_bad = Craig imagines Teresa won't hide himself.
# two_prefix_prefix_good = Teresa imagines Craig won't hide
# two_prefix_prefix_bad = Craig imagines Teresa won't hide
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3834
1	Craig	Craig	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Teresa	Teresa	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	won't	_	_	_	_	_	_	_	_
4	wo	will	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	hide	hide	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tammy doesn't think John would watch himself.
# sentence_bad = John doesn't think Tammy would watch himself.
# two_prefix_prefix_good = Tammy doesn't think John would watch
# two_prefix_prefix_bad = John doesn't think Tammy would watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3835
1	John	John	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Tammy	Tammy	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	watch	watch	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Thomas wouldn't think the woman complains about herself.
# sentence_bad = The woman wouldn't think Thomas complains about herself.
# two_prefix_prefix_good = Thomas wouldn't think the woman complains about
# two_prefix_prefix_bad = The woman wouldn't think Thomas complains about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3836
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
3-4	wouldn't	_	_	_	_	_	_	_	_
3	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
4	n't	not	PART	RB	_	5	advmod	_	_
5	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
6	Thomas	Thomas	PROPN	NNP	Number=Sing	7	nsubj	_	_
7	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Peter will imagine Katherine leaves herself.
# sentence_bad = Katherine will imagine Peter leaves herself.
# two_prefix_prefix_good = Peter will imagine Katherine leaves
# two_prefix_prefix_bad = Katherine will imagine Peter leaves
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3837
1	Katherine	Katherine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Peter	Peter	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sabrina might think Joseph complains about himself.
# sentence_bad = Joseph might think Sabrina complains about himself.
# two_prefix_prefix_good = Sabrina might think Joseph complains about
# two_prefix_prefix_bad = Joseph might think Sabrina complains about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3838
1	Joseph	Joseph	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Sabrina	Sabrina	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nicole imagines Scott can conceal himself.
# sentence_bad = Scott imagines Nicole can conceal himself.
# two_prefix_prefix_good = Nicole imagines Scott can conceal
# two_prefix_prefix_bad = Scott imagines Nicole can conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3839
1	Scott	Scott	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nicole	Nicole	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Allison can imagine Derek reveals himself.
# sentence_bad = Derek can imagine Allison reveals himself.
# two_prefix_prefix_good = Allison can imagine Derek reveals
# two_prefix_prefix_bad = Derek can imagine Allison reveals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3840
1	Derek	Derek	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Allison	Allison	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Tina thinks Theodore will escape from himself.
# sentence_bad = Theodore thinks Tina will escape from himself.
# two_prefix_prefix_good = Tina thinks Theodore will escape from
# two_prefix_prefix_bad = Theodore thinks Tina will escape from
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3841
1	Theodore	Theodore	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tina	Tina	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	escape	escape	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	from	from	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Donna would explain Ronald didn't shock himself.
# sentence_bad = Ronald would explain Donna didn't shock himself.
# two_prefix_prefix_good = Donna would explain Ronald didn't shock
# two_prefix_prefix_bad = Ronald would explain Donna didn't shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3842
1	Ronald	Ronald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Donna	_	_	_	_	_	_	_	_
4	Don	Don	PROPN	NNP	Number=Sing	8	nsubj	_	_
5	na	to	PART	TO	Abbr=Yes	4	flat	_	_
6-7	didn't	_	_	_	_	_	_	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	shock	shock	VERB	VB	VerbForm=Inf	3	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Patricia says Guy might scare himself.
# sentence_bad = Guy says Patricia might scare himself.
# two_prefix_prefix_good = Patricia says Guy might scare
# two_prefix_prefix_bad = Guy says Patricia might scare
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3843
1	Guy	Guy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Patricia	Patricia	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	scare	scare	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Vanessa will think Mark did discuss himself.
# sentence_bad = Mark will think Vanessa did discuss himself.
# two_prefix_prefix_good = Vanessa will think Mark did discuss
# two_prefix_prefix_bad = Mark will think Vanessa did discuss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3844
1	Mark	Mark	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Vanessa	Vanessa	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	discuss	discuss	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = April explains Bradley scares himself.
# sentence_bad = Bradley explains April scares himself.
# two_prefix_prefix_good = April explains Bradley scares
# two_prefix_prefix_bad = Bradley explains April scares
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3845
1	Bradley	Bradley	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	April	April	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	scares	scare	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sonia doesn't think David might hate himself.
# sentence_bad = David doesn't think Sonia might hate himself.
# two_prefix_prefix_good = Sonia doesn't think David might hate
# two_prefix_prefix_bad = David doesn't think Sonia might hate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3846
1	David	David	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Sonia	Sonia	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	hate	hate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Margaret thinks Gerald would heal himself.
# sentence_bad = Gerald thinks Margaret would heal himself.
# two_prefix_prefix_good = Margaret thinks Gerald would heal
# two_prefix_prefix_bad = Gerald thinks Margaret would heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3847
1	Gerald	Gerald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Margaret	Margaret	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	heal	heal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = A man might think Linda did scare herself.
# sentence_bad = Linda might think a man did scare herself.
# two_prefix_prefix_good = A man might think Linda did scare
# two_prefix_prefix_bad = Linda might think a man did scare
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3848
1	Linda	Linda	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	a	a	DET	DT	Definite=Ind|PronType=Art	5	det	_	_
5	man	man	NOUN	NN	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	scare	scare	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Rhonda will say Ronald doesn't notice himself.
# sentence_bad = Ronald will say Rhonda doesn't notice himself.
# two_prefix_prefix_good = Rhonda will say Ronald doesn't notice
# two_prefix_prefix_bad = Ronald will say Rhonda doesn't notice
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3849
1	Ronald	Ronald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Rhonda	Rhonda	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	doesn't	_	_	_	_	_	_	_	_
5	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	notice	notice	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carolyn explains Douglas should hurt himself.
# sentence_bad = Douglas explains Carolyn should hurt himself.
# two_prefix_prefix_good = Carolyn explains Douglas should hurt
# two_prefix_prefix_bad = Douglas explains Carolyn should hurt
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3850
1	Douglas	Douglas	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carolyn	Carolyn	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	should	should	AUX	MD	VerbForm=Fin	5	aux	_	_
5	hurt	hurt	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kendra might say Scott would bore himself.
# sentence_bad = Scott might say Kendra would bore himself.
# two_prefix_prefix_good = Kendra might say Scott would bore
# two_prefix_prefix_bad = Scott might say Kendra would bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3851
1	Scott	Scott	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kendra	Kendra	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
6	bore	bore	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Marie's son thinks Beverly will complain about herself.
# sentence_bad = Beverly thinks Marie's son will complain about herself.
# two_prefix_prefix_good = Marie's son thinks Beverly will complain about
# two_prefix_prefix_bad = Beverly thinks Marie's son will complain about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3852
1	Beverly	Beverly	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Marie's	_	_	_	_	_	_	_	_
3	Marie	Marie	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	son	son	NOUN	NN	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	complain	complain	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Ronald says Kristin talks about herself.
# sentence_bad = Kristin says Ronald talks about herself.
# two_prefix_prefix_good = Ronald says Kristin talks about
# two_prefix_prefix_bad = Kristin says Ronald talks about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3853
1	Kristin	Kristin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Ronald	Ronald	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stacy won't think Matt references himself.
# sentence_bad = Matt won't think Stacy references himself.
# two_prefix_prefix_good = Stacy won't think Matt references
# two_prefix_prefix_bad = Matt won't think Stacy references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3854
1	Matt	Matt	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Stacy	Stacy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Bradley thinks Kevin's ex-wife might disagree with herself.
# sentence_bad = Kevin's ex-wife thinks Bradley might disagree with herself.
# two_prefix_prefix_good = Bradley thinks Kevin's ex-wife might disagree with
# two_prefix_prefix_bad = Kevin's ex-wife thinks Bradley might disagree with
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3855
1-2	Kevin's	_	_	_	_	_	_	_	_
1	Kevin	Kevin	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-wife	ex-wife	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Bradley	Bradley	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	disagree	disagree	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	with	with	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Thomas will imagine Sarah didn't worry herself.
# sentence_bad = Sarah will imagine Thomas didn't worry herself.
# two_prefix_prefix_good = Thomas will imagine Sarah didn't worry
# two_prefix_prefix_bad = Sarah will imagine Thomas didn't worry
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3856
1	Sarah	Sarah	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Thomas	Thomas	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	worry	worry	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Eva thinks Edward criticizes himself.
# sentence_bad = Edward thinks Eva criticizes himself.
# two_prefix_prefix_good = Eva thinks Edward criticizes
# two_prefix_prefix_bad = Edward thinks Eva criticizes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3857
1	Edward	Edward	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Eva	Eva	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gina would explain Theodore thinks about himself.
# sentence_bad = Theodore would explain Gina thinks about himself.
# two_prefix_prefix_good = Gina would explain Theodore thinks about
# two_prefix_prefix_bad = Theodore would explain Gina thinks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3858
1	Theodore	Theodore	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Gina	Gina	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	about	about	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Irene thinks Liam shouldn't embarrass himself.
# sentence_bad = Liam thinks Irene shouldn't embarrass himself.
# two_prefix_prefix_good = Irene thinks Liam shouldn't embarrass
# two_prefix_prefix_bad = Liam thinks Irene shouldn't embarrass
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3859
1	Liam	Liam	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Irene	Irene	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	embarrass	embarrass	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = William won't imagine Alice attacks herself.
# sentence_bad = Alice won't imagine William attacks herself.
# two_prefix_prefix_good = William won't imagine Alice attacks
# two_prefix_prefix_bad = Alice won't imagine William attacks
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3860
1	Alice	Alice	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	William	William	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jacqueline thinks Curtis didn't distract himself.
# sentence_bad = Curtis thinks Jacqueline didn't distract himself.
# two_prefix_prefix_good = Jacqueline thinks Curtis didn't distract
# two_prefix_prefix_bad = Curtis thinks Jacqueline didn't distract
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3861
1	Curtis	Curtis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	didn't	_	_	_	_	_	_	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	distract	distract	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stacey explains Brad could talk to himself.
# sentence_bad = Brad explains Stacey could talk to himself.
# two_prefix_prefix_good = Stacey explains Brad could talk to
# two_prefix_prefix_bad = Brad explains Stacey could talk to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3862
1	Brad	Brad	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Stacey	Stacey	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	could	could	AUX	MD	VerbForm=Fin	5	aux	_	_
5	talk	talk	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Christina thinks George can listen to himself.
# sentence_bad = George thinks Christina can listen to himself.
# two_prefix_prefix_good = Christina thinks George can listen to
# two_prefix_prefix_bad = George thinks Christina can listen to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3863
1	George	George	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Christina	Christina	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	listen	listen	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Larry can't imagine Caroline doesn't praise herself.
# sentence_bad = Caroline can't imagine Larry doesn't praise herself.
# two_prefix_prefix_good = Larry can't imagine Caroline doesn't praise
# two_prefix_prefix_bad = Caroline can't imagine Larry doesn't praise
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3864
1	Caroline	Caroline	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Larry	Larry	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	doesn't	_	_	_	_	_	_	_	_
6	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	praise	praise	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kirsten should say Ronald wouldn't alarm himself.
# sentence_bad = Ronald should say Kirsten wouldn't alarm himself.
# two_prefix_prefix_good = Kirsten should say Ronald wouldn't alarm
# two_prefix_prefix_bad = Ronald should say Kirsten wouldn't alarm
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3865
1	Ronald	Ronald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kirsten	Kirsten	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	alarm	alarm	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Nicole thinks Travis did conceal himself.
# sentence_bad = Travis thinks Nicole did conceal himself.
# two_prefix_prefix_good = Nicole thinks Travis did conceal
# two_prefix_prefix_bad = Travis thinks Nicole did conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3866
1	Travis	Travis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nicole	Nicole	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	conceal	conceal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Liam thinks Catherine does observe herself.
# sentence_bad = Catherine thinks Liam does observe herself.
# two_prefix_prefix_good = Liam thinks Catherine does observe
# two_prefix_prefix_bad = Catherine thinks Liam does observe
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3867
1	Catherine	Catherine	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Liam	Liam	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	observe	observe	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Becca explains Steven thinks about himself.
# sentence_bad = Steven explains Becca thinks about himself.
# two_prefix_prefix_good = Becca explains Steven thinks about
# two_prefix_prefix_bad = Steven explains Becca thinks about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3868
1	Steven	Steven	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Becca	Becca	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Some dancer can't say Gerald forgets himself.
# sentence_bad = Gerald can't say some dancer forgets himself.
# two_prefix_prefix_good = Some dancer can't say Gerald forgets
# two_prefix_prefix_bad = Gerald can't say some dancer forgets
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3869
1	Gerald	Gerald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	some	some	DET	DT	_	6	det	_	_
6	dancer	dancer	NOUN	NN	Number=Sing	7	nsubj	_	_
7	forgets	forget	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Dawn's ex-husband should think Kayla helps herself.
# sentence_bad = Kayla should think Dawn's ex-husband helps herself.
# two_prefix_prefix_good = Dawn's ex-husband should think Kayla helps
# two_prefix_prefix_bad = Kayla should think Dawn's ex-husband helps
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3870
1	Kayla	Kayla	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Dawn's	_	_	_	_	_	_	_	_
4	Dawn	Dawn	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	ex-husband	ex-husband	NOUN	NN	Number=Sing	7	nsubj	_	_
7	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Andrea says Eric knows himself.
# sentence_bad = Eric says Andrea knows himself.
# two_prefix_prefix_good = Andrea says Eric knows
# two_prefix_prefix_bad = Eric says Andrea knows
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3871
1	Eric	Eric	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Andrea	Andrea	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	knows	know	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Ruth's boyfriend does think Katherine did respect herself.
# sentence_bad = Katherine does think Ruth's boyfriend did respect herself.
# two_prefix_prefix_good = Ruth's boyfriend does think Katherine did respect
# two_prefix_prefix_bad = Katherine does think Ruth's boyfriend did respect
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3872
1	Katherine	Katherine	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Ruth's	Ruth's	PROPN	NNPS	Number=Plur	5	compound	_	_
5	boyfriend	boyfriend	NOUN	NN	Number=Sing	7	nsubj	_	_
6	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
7	respect	respect	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = That woman imagines Raymond likes himself.
# sentence_bad = Raymond imagines that woman likes himself.
# two_prefix_prefix_good = That woman imagines Raymond likes
# two_prefix_prefix_bad = Raymond imagines that woman likes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3873
1	Raymond	Raymond	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	that	that	SCONJ	IN	_	5	mark	_	_
4	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
5	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tracy thinks Alexander respects himself.
# sentence_bad = Alexander thinks Tracy respects himself.
# two_prefix_prefix_good = Tracy thinks Alexander respects
# two_prefix_prefix_bad = Alexander thinks Tracy respects
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3874
1	Alexander	Alexander	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tracy	Tracy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carlos says Bethany can't appreciate herself.
# sentence_bad = Bethany says Carlos can't appreciate herself.
# two_prefix_prefix_good = Carlos says Bethany can't appreciate
# two_prefix_prefix_bad = Bethany says Carlos can't appreciate
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3875
1	Bethany	Bethany	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Carlos	Carlos	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	appreciate	appreciate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Nina thinks Craig couldn't question himself.
# sentence_bad = Craig thinks Nina couldn't question himself.
# two_prefix_prefix_good = Nina thinks Craig couldn't question
# two_prefix_prefix_bad = Craig thinks Nina couldn't question
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3876
1	Craig	Craig	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nina	Nina	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	question	question	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = The Lutherans' grandson can't imagine Catherine could know herself.
# sentence_bad = Catherine can't imagine the Lutherans' grandson could know herself.
# two_prefix_prefix_good = The Lutherans' grandson can't imagine Catherine could know
# two_prefix_prefix_bad = Catherine can't imagine the Lutherans' grandson could know
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3877
1	Catherine	Catherine	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	the	the	DET	DT	Definite=Def|PronType=Art	6	det	_	_
6-7	Lutherans'	_	_	_	_	_	_	_	_
6	Lutherans	Lutheran	PROPN	NNPS	Number=Plur	8	nmod:poss	_	_
7	'	's	PART	POS	_	6	case	_	_
8	grandson	grandson	NOUN	NN	Number=Sing	10	nsubj	_	_
9	could	could	AUX	MD	VerbForm=Fin	10	aux	_	_
10	know	know	VERB	VB	VerbForm=Inf	4	ccomp	_	_
11	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	10	obj	_	SpaceAfter=No
12	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Nicole can say Douglas won't shock himself.
# sentence_bad = Douglas can say Nicole won't shock himself.
# two_prefix_prefix_good = Nicole can say Douglas won't shock
# two_prefix_prefix_bad = Douglas can say Nicole won't shock
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3878
1	Douglas	Douglas	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Nicole	Nicole	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	shock	shock	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Travis imagines Tiffany's daughter flees from herself.
# sentence_bad = Tiffany's daughter imagines Travis flees from herself.
# two_prefix_prefix_good = Travis imagines Tiffany's daughter flees from
# two_prefix_prefix_bad = Tiffany's daughter imagines Travis flees from
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3879
1	Tiffany's	Tiffany	PROPN	NNPS	Number=Plur	2	compound	_	_
2	daughter	daughter	NOUN	NN	Number=Sing	3	nsubj	_	_
3	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Travis	Travis	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	flees	flee	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	from	from	ADP	IN	_	7	case	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Diane won't think John wouldn't worry himself.
# sentence_bad = John won't think Diane wouldn't worry himself.
# two_prefix_prefix_good = Diane won't think John wouldn't worry
# two_prefix_prefix_bad = John won't think Diane wouldn't worry
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3880
1	John	John	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Diane	Diane	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	wouldn't	_	_	_	_	_	_	_	_
6	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	worry	worry	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kristen thinks Andrew references himself.
# sentence_bad = Andrew thinks Kristen references himself.
# two_prefix_prefix_good = Kristen thinks Andrew references
# two_prefix_prefix_bad = Andrew thinks Kristen references
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3881
1	Andrew	Andrew	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kristen	Kristen	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = The boy might think Teresa insults herself.
# sentence_bad = Teresa might think the boy insults herself.
# two_prefix_prefix_good = The boy might think Teresa insults
# two_prefix_prefix_bad = Teresa might think the boy insults
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3882
1	Teresa	Teresa	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	the	the	DET	DT	Definite=Def|PronType=Art	5	det	_	_
5	boy	boy	NOUN	NN	Number=Sing	6	nsubj	_	_
6	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Dan imagines Debra references herself.
# sentence_bad = Debra imagines Dan references herself.
# two_prefix_prefix_good = Dan imagines Debra references
# two_prefix_prefix_bad = Debra imagines Dan references
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3883
1	Debra	Debra	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Dan	Dan	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tamara's ex-wife would explain Randolf couldn't observe himself.
# sentence_bad = Randolf would explain Tamara's ex-wife couldn't observe himself.
# two_prefix_prefix_good = Tamara's ex-wife would explain Randolf couldn't observe
# two_prefix_prefix_bad = Randolf would explain Tamara's ex-wife couldn't observe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3884
1	Randolf	Randolf	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4-5	Tamara's	_	_	_	_	_	_	_	_
4	Tamara	Tamara	PROPN	NNP	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	ex-wife	ex-wife	NOUN	NN	Number=Sing	9	nsubj	_	_
7-8	couldn't	_	_	_	_	_	_	_	_
7	could	could	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	observe	observe	VERB	VB	VerbForm=Inf	3	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lawrence will explain Natalie's grandmother does scare herself.
# sentence_bad = Natalie's grandmother will explain Lawrence does scare herself.
# two_prefix_prefix_good = Lawrence will explain Natalie's grandmother does scare
# two_prefix_prefix_bad = Natalie's grandmother will explain Lawrence does scare
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3885
1-2	Natalie's	_	_	_	_	_	_	_	_
1	Natalie	Natalie	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandmother	grandmother	NOUN	NN	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6	Lawrence	Lawrence	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	8	aux	_	_
8	scare	scare	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Marie will say Timothy notices himself.
# sentence_bad = Timothy will say Marie notices himself.
# two_prefix_prefix_good = Marie will say Timothy notices
# two_prefix_prefix_bad = Timothy will say Marie notices
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3886
1	Timothy	Timothy	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Marie	Marie	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	notices	notice	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = April explains Steve hugs himself.
# sentence_bad = Steve explains April hugs himself.
# two_prefix_prefix_good = April explains Steve hugs
# two_prefix_prefix_bad = Steve explains April hugs
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3887
1	Steve	Steve	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	April	April	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hugs	hug	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Steven says Claire wouldn't listen to herself.
# sentence_bad = Claire says Steven wouldn't listen to herself.
# two_prefix_prefix_good = Steven says Claire wouldn't listen to
# two_prefix_prefix_bad = Claire says Steven wouldn't listen to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3888
1	Claire	Claire	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Steven	Steven	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	wouldn't	_	_	_	_	_	_	_	_
4	would	would	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	listen	listen	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Tracy explains Rodney reveals himself.
# sentence_bad = Rodney explains Tracy reveals himself.
# two_prefix_prefix_good = Tracy explains Rodney reveals
# two_prefix_prefix_bad = Rodney explains Tracy reveals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3889
1	Rodney	Rodney	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tracy	Tracy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	reveals	reveal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Stephanie can think Claire's son couldn't boast about himself.
# sentence_bad = Claire's son can think Stephanie couldn't boast about himself.
# two_prefix_prefix_good = Stephanie can think Claire's son couldn't boast about
# two_prefix_prefix_bad = Claire's son can think Stephanie couldn't boast about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3890
1-2	Claire's	_	_	_	_	_	_	_	_
1	Claire	Claire	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
6	Stephanie	Stephanie	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	couldn't	_	_	_	_	_	_	_	_
7	could	could	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	boast	boast	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	about	about	ADP	IN	_	11	case	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Marcus explains Erin finds herself.
# sentence_bad = Erin explains Marcus finds herself.
# two_prefix_prefix_good = Marcus explains Erin finds
# two_prefix_prefix_bad = Erin explains Marcus finds
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3891
1	Erin	Erin	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Marcus	Marcus	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	finds	find	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Timothy says Nina discusses herself.
# sentence_bad = Nina says Timothy discusses herself.
# two_prefix_prefix_good = Timothy says Nina discusses
# two_prefix_prefix_bad = Nina says Timothy discusses
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3892
1	Nina	Nina	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Timothy	Timothy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	discusses	discuss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Monica explains Michelle's grandfather might talk to himself.
# sentence_bad = Michelle's grandfather explains Monica might talk to himself.
# two_prefix_prefix_good = Monica explains Michelle's grandfather might talk to
# two_prefix_prefix_bad = Michelle's grandfather explains Monica might talk to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3893
1-2	Michelle's	_	_	_	_	_	_	_	_
1	Michelle	Michelle	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	grandfather	grandfather	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Monica	Monica	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	might	might	AUX	MD	VerbForm=Fin	7	aux	_	_
7	talk	talk	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	to	to	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tammy says Robert's boyfriend describes himself.
# sentence_bad = Robert's boyfriend says Tammy describes himself.
# two_prefix_prefix_good = Tammy says Robert's boyfriend describes
# two_prefix_prefix_bad = Robert's boyfriend says Tammy describes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3894
1-2	Robert's	_	_	_	_	_	_	_	_
1	Robert	Robert	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Tammy	Tammy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Gary says Amanda can't annoy herself.
# sentence_bad = Amanda says Gary can't annoy herself.
# two_prefix_prefix_good = Gary says Amanda can't annoy
# two_prefix_prefix_bad = Amanda says Gary can't annoy
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3895
1	Amanda	Amanda	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gary	Gary	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	annoy	annoy	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Samantha wouldn't explain Liam could confuse himself.
# sentence_bad = Liam wouldn't explain Samantha could confuse himself.
# two_prefix_prefix_good = Samantha wouldn't explain Liam could confuse
# two_prefix_prefix_bad = Liam wouldn't explain Samantha could confuse
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3896
1	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Samantha	Samantha	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	confuse	confuse	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Some woman imagines Steven questions himself.
# sentence_bad = Steven imagines some woman questions himself.
# two_prefix_prefix_good = Some woman imagines Steven questions
# two_prefix_prefix_bad = Steven imagines some woman questions
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3897
1	Steven	Steven	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	some	some	DET	DT	_	4	det	_	_
4	woman	woman	NOUN	NN	Number=Sing	5	nsubj	_	_
5	questions	question	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Heidi didn't imagine Rodney should cure himself.
# sentence_bad = Rodney didn't imagine Heidi should cure himself.
# two_prefix_prefix_good = Heidi didn't imagine Rodney should cure
# two_prefix_prefix_bad = Rodney didn't imagine Heidi should cure
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3898
1	Rodney	Rodney	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Heidi	Heidi	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
7	cure	cure	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Robert's daughter explains Jessica's ex-boyfriend will watch himself.
# sentence_bad = Jessica's ex-boyfriend explains Robert's daughter will watch himself.
# two_prefix_prefix_good = Robert's daughter explains Jessica's ex-boyfriend will watch
# two_prefix_prefix_bad = Jessica's ex-boyfriend explains Robert's daughter will watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3899
1-2	Jessica's	_	_	_	_	_	_	_	_
1	Jessica	Jessica	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	ex-boyfriend	ex-boyfriend	NOUN	NN	Number=Sing	4	nsubj	_	_
4	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5-6	Robert's	_	_	_	_	_	_	_	_
5	Robert	Robert	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	daughter	daughter	NOUN	NN	Number=Sing	9	nsubj	_	_
8	will	will	AUX	MD	VerbForm=Fin	9	aux	_	_
9	watch	watch	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Alice did explain Douglas sounds like himself.
# sentence_bad = Douglas did explain Alice sounds like himself.
# two_prefix_prefix_good = Alice did explain Douglas sounds like
# two_prefix_prefix_bad = Douglas did explain Alice sounds like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3900
1	Douglas	Douglas	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Alice	Alice	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	sounds	sound	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	like	like	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Sheila doesn't say Pamela's son works with himself.
# sentence_bad = Pamela's son doesn't say Sheila works with himself.
# two_prefix_prefix_good = Sheila doesn't say Pamela's son works with
# two_prefix_prefix_bad = Pamela's son doesn't say Sheila works with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3901
1-2	Pamela's	_	_	_	_	_	_	_	_
1	Pamela	Pamela	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
7	Sheila	Sheila	PROPN	NNP	Number=Sing	8	nsubj	_	_
8	works	work	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	ccomp	_	_
9	with	with	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Ruth imagines Edward can hide himself.
# sentence_bad = Edward imagines Ruth can hide himself.
# two_prefix_prefix_good = Ruth imagines Edward can hide
# two_prefix_prefix_bad = Edward imagines Ruth can hide
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3902
1	Edward	Edward	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Ruth	Ruth	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	hide	hide	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Beth explains Rodney dislikes himself.
# sentence_bad = Rodney explains Beth dislikes himself.
# two_prefix_prefix_good = Beth explains Rodney dislikes
# two_prefix_prefix_bad = Rodney explains Beth dislikes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3903
1	Rodney	Rodney	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Beth	Beth	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	dislikes	dislike	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Benjamin did imagine Sonia can't sound like herself.
# sentence_bad = Sonia did imagine Benjamin can't sound like herself.
# two_prefix_prefix_good = Benjamin did imagine Sonia can't sound like
# two_prefix_prefix_bad = Sonia did imagine Benjamin can't sound like
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3904
1	Sonia	Sonia	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Benjamin	Benjamin	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	can't	_	_	_	_	_	_	_	_
5	ca	can	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	sound	sound	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	like	like	ADP	IN	_	9	case	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = The teenager's daughter thinks Gregory would watch himself.
# sentence_bad = Gregory thinks the teenager's daughter would watch himself.
# two_prefix_prefix_good = The teenager's daughter thinks Gregory would watch
# two_prefix_prefix_bad = Gregory thinks the teenager's daughter would watch
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3905
1	Gregory	Gregory	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	the	the	DET	DT	Definite=Def|PronType=Art	4	det	_	_
4-5	teenager's	_	_	_	_	_	_	_	_
4	teenager	teenager	NOUN	NN	Number=Sing	6	nmod:poss	_	_
5	's	's	PART	POS	_	4	case	_	_
6	daughter	daughter	NOUN	NN	Number=Sing	8	nsubj	_	_
7	would	would	AUX	MD	VerbForm=Fin	8	aux	_	_
8	watch	watch	VERB	VB	VerbForm=Inf	2	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Patrick imagines Danielle references herself.
# sentence_bad = Danielle imagines Patrick references herself.
# two_prefix_prefix_good = Patrick imagines Danielle references
# two_prefix_prefix_bad = Danielle imagines Patrick references
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3906
1	Danielle	Danielle	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Patrick	Patrick	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	references	reference	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Lawrence didn't imagine Sonia describes herself.
# sentence_bad = Sonia didn't imagine Lawrence describes herself.
# two_prefix_prefix_good = Lawrence didn't imagine Sonia describes
# two_prefix_prefix_bad = Sonia didn't imagine Lawrence describes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3907
1	Sonia	Sonia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lawrence	Lawrence	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	describes	describe	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Steve might think Rose hates herself.
# sentence_bad = Rose might think Steve hates herself.
# two_prefix_prefix_good = Steve might think Rose hates
# two_prefix_prefix_bad = Rose might think Steve hates
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3908
1	Rose	Rose	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Steve	Steve	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Elizabeth imagines Lawrence approaches himself.
# sentence_bad = Lawrence imagines Elizabeth approaches himself.
# two_prefix_prefix_good = Elizabeth imagines Lawrence approaches
# two_prefix_prefix_bad = Lawrence imagines Elizabeth approaches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3909
1	Lawrence	Lawrence	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Bethany says Phillip does know himself.
# sentence_bad = Phillip says Bethany does know himself.
# two_prefix_prefix_good = Bethany says Phillip does know
# two_prefix_prefix_bad = Phillip says Bethany does know
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3910
1	Phillip	Phillip	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Bethany	Bethany	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	know	know	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Alice could imagine Marcus couldn't bore himself.
# sentence_bad = Marcus could imagine Alice couldn't bore himself.
# two_prefix_prefix_good = Alice could imagine Marcus couldn't bore
# two_prefix_prefix_bad = Marcus could imagine Alice couldn't bore
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3911
1	Marcus	Marcus	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Alice	Alice	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	couldn't	_	_	_	_	_	_	_	_
5	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	bore	bore	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Melissa could imagine Noah criticizes himself.
# sentence_bad = Noah could imagine Melissa criticizes himself.
# two_prefix_prefix_good = Melissa could imagine Noah criticizes
# two_prefix_prefix_bad = Noah could imagine Melissa criticizes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3912
1	Noah	Noah	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Melissa	Melissa	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	criticizes	criticize	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Carol shouldn't say Robert hides himself.
# sentence_bad = Robert shouldn't say Carol hides himself.
# two_prefix_prefix_good = Carol shouldn't say Robert hides
# two_prefix_prefix_bad = Robert shouldn't say Carol hides
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3913
1	Robert	Robert	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Carol	Carol	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hides	hide	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Diane does explain Steve didn't leave himself.
# sentence_bad = Steve does explain Diane didn't leave himself.
# two_prefix_prefix_good = Diane does explain Steve didn't leave
# two_prefix_prefix_bad = Steve does explain Diane didn't leave
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3914
1	Steve	Steve	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Diane	Diane	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	leave	leave	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Theodore could say Becky investigates herself.
# sentence_bad = Becky could say Theodore investigates herself.
# two_prefix_prefix_good = Theodore could say Becky investigates
# two_prefix_prefix_bad = Becky could say Theodore investigates
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3915
1	Becky	Becky	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Theodore	Theodore	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Theresa shouldn't say Craig helps himself.
# sentence_bad = Craig shouldn't say Theresa helps himself.
# two_prefix_prefix_good = Theresa shouldn't say Craig helps
# two_prefix_prefix_bad = Craig shouldn't say Theresa helps
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3916
1	Craig	Craig	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Theresa	Theresa	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	helps	help	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Rhonda's wife won't imagine Gerald fires himself.
# sentence_bad = Gerald won't imagine Rhonda's wife fires himself.
# two_prefix_prefix_good = Rhonda's wife won't imagine Gerald fires
# two_prefix_prefix_bad = Gerald won't imagine Rhonda's wife fires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3917
1	Gerald	Gerald	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Rhonda's	_	_	_	_	_	_	_	_
5	Rhonda	Rhonda	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	wife	wife	NOUN	NN	Number=Sing	8	nsubj	_	_
8	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tiffany did imagine Donald won't talk about himself.
# sentence_bad = Donald did imagine Tiffany won't talk about himself.
# two_prefix_prefix_good = Tiffany did imagine Donald won't talk about
# two_prefix_prefix_bad = Donald did imagine Tiffany won't talk about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3918
1	Donald	Donald	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Tiffany	Tiffany	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	talk	talk	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Teresa imagines the customers' son shouldn't conceal himself.
# sentence_bad = The customers' son imagines Teresa shouldn't conceal himself.
# two_prefix_prefix_good = Teresa imagines the customers' son shouldn't conceal
# two_prefix_prefix_bad = The customers' son imagines Teresa shouldn't conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3919
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2-3	customers'	_	_	_	_	_	_	_	_
2	customers	customer	NOUN	NNS	Number=Plur	4	nmod:poss	_	_
3	'	's	PART	POS	_	2	case	_	_
4	son	son	NOUN	NN	Number=Sing	5	nsubj	_	_
5	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	Teresa	Teresa	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	shouldn't	_	_	_	_	_	_	_	_
7	should	should	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	conceal	conceal	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Alicia thinks Peter talks to himself.
# sentence_bad = Peter thinks Alicia talks to himself.
# two_prefix_prefix_good = Alicia thinks Peter talks to
# two_prefix_prefix_bad = Peter thinks Alicia talks to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3920
1	Peter	Peter	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Alicia	Alicia	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Judy's grandson explains Diana should astound herself.
# sentence_bad = Diana explains Judy's grandson should astound herself.
# two_prefix_prefix_good = Judy's grandson explains Diana should astound
# two_prefix_prefix_bad = Diana explains Judy's grandson should astound
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3921
1	Diana	Diana	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Judy's	Judy	PROPN	NNPS	Number=Plur	4	compound	_	_
4	grandson	grandson	NOUN	NN	Number=Sing	6	nsubj	_	_
5	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
6	astound	astound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Michelle won't think Homer would attack himself.
# sentence_bad = Homer won't think Michelle would attack himself.
# two_prefix_prefix_good = Michelle won't think Homer would attack
# two_prefix_prefix_bad = Homer won't think Michelle would attack
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3922
1	Homer	Homer	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Michelle	Michelle	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	attack	attack	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Gerald says Diane couldn't bore herself.
# sentence_bad = Diane says Gerald couldn't bore herself.
# two_prefix_prefix_good = Gerald says Diane couldn't bore
# two_prefix_prefix_bad = Diane says Gerald couldn't bore
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3923
1	Diane	Diane	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gerald	Gerald	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	bore	bore	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Barbara thinks every senator's ex-husband kisses himself.
# sentence_bad = Every senator's ex-husband thinks Barbara kisses himself.
# two_prefix_prefix_good = Barbara thinks every senator's ex-husband kisses
# two_prefix_prefix_bad = Every senator's ex-husband thinks Barbara kisses
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3924
1	Every	every	DET	DT	_	3	det	_	_
2	senator's	senator'	NOUN	NNS	Number=Plur	3	compound	_	_
3	ex-husband	ex-husband	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Barbara	Barbara	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	kisses	kiss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Alexander wouldn't say Cynthia will scare herself.
# sentence_bad = Cynthia wouldn't say Alexander will scare herself.
# two_prefix_prefix_good = Alexander wouldn't say Cynthia will scare
# two_prefix_prefix_bad = Cynthia wouldn't say Alexander will scare
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3925
1	Cynthia	Cynthia	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Alexander	Alexander	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	scare	scare	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Vanessa says Chad hates himself.
# sentence_bad = Chad says Vanessa hates himself.
# two_prefix_prefix_good = Vanessa says Chad hates
# two_prefix_prefix_bad = Chad says Vanessa hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3926
1	Chad	Chad	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Vanessa	Vanessa	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Alice imagines Eric approaches himself.
# sentence_bad = Eric imagines Alice approaches himself.
# two_prefix_prefix_good = Alice imagines Eric approaches
# two_prefix_prefix_bad = Eric imagines Alice approaches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3927
1	Eric	Eric	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Alice	Alice	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Victoria shouldn't say Benjamin would appreciate himself.
# sentence_bad = Benjamin shouldn't say Victoria would appreciate himself.
# two_prefix_prefix_good = Victoria shouldn't say Benjamin would appreciate
# two_prefix_prefix_bad = Benjamin shouldn't say Victoria would appreciate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3928
1	Benjamin	Benjamin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Victoria	Victoria	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
7	appreciate	appreciate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Marie says Patrick can aggravate himself.
# sentence_bad = Patrick says Marie can aggravate himself.
# two_prefix_prefix_good = Marie says Patrick can aggravate
# two_prefix_prefix_bad = Patrick says Marie can aggravate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3929
1	Patrick	Patrick	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Marie	Marie	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	can	can	AUX	MD	VerbForm=Fin	5	aux	_	_
5	aggravate	aggravate	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jeffrey thinks Susan might heal herself.
# sentence_bad = Susan thinks Jeffrey might heal herself.
# two_prefix_prefix_good = Jeffrey thinks Susan might heal
# two_prefix_prefix_bad = Susan thinks Jeffrey might heal
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3930
1	Susan	Susan	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jeffrey	Jeffrey	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	heal	heal	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Noah explains Jacqueline boasts about herself.
# sentence_bad = Jacqueline explains Noah boasts about herself.
# two_prefix_prefix_good = Noah explains Jacqueline boasts about
# two_prefix_prefix_bad = Jacqueline explains Noah boasts about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3931
1	Jacqueline	Jacqueline	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Noah	Noah	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	boasts	boast	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Russell thinks Debra doesn't astound herself.
# sentence_bad = Debra thinks Russell doesn't astound herself.
# two_prefix_prefix_good = Russell thinks Debra doesn't astound
# two_prefix_prefix_bad = Debra thinks Russell doesn't astound
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3932
1	Debra	Debra	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Russell	Russell	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	doesn't	_	_	_	_	_	_	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	astound	astound	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Barbara says Aaron respects himself.
# sentence_bad = Aaron says Barbara respects himself.
# two_prefix_prefix_good = Barbara says Aaron respects
# two_prefix_prefix_bad = Aaron says Barbara respects
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3933
1	Aaron	Aaron	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Barbara	Barbara	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	respects	respect	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Marcus can explain Susan remembers herself.
# sentence_bad = Susan can explain Marcus remembers herself.
# two_prefix_prefix_good = Marcus can explain Susan remembers
# two_prefix_prefix_bad = Susan can explain Marcus remembers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3934
1	Susan	Susan	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	can	can	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Marcus	Marcus	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kristin might imagine Robert wouldn't admire himself.
# sentence_bad = Robert might imagine Kristin wouldn't admire himself.
# two_prefix_prefix_good = Kristin might imagine Robert wouldn't admire
# two_prefix_prefix_bad = Robert might imagine Kristin wouldn't admire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3935
1	Robert	Robert	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kristin	Kristin	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	admire	admire	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kendra might imagine Gary dislikes himself.
# sentence_bad = Gary might imagine Kendra dislikes himself.
# two_prefix_prefix_good = Kendra might imagine Gary dislikes
# two_prefix_prefix_bad = Gary might imagine Kendra dislikes
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3936
1	Gary	Gary	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kendra	Kendra	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	dislikes	dislike	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kirsten thinks Carl hates himself.
# sentence_bad = Carl thinks Kirsten hates himself.
# two_prefix_prefix_good = Kirsten thinks Carl hates
# two_prefix_prefix_bad = Carl thinks Kirsten hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3937
1	Carl	Carl	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kirsten	Kirsten	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Gina shouldn't think Larry shouldn't hate himself.
# sentence_bad = Larry shouldn't think Gina shouldn't hate himself.
# two_prefix_prefix_good = Gina shouldn't think Larry shouldn't hate
# two_prefix_prefix_bad = Larry shouldn't think Gina shouldn't hate
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3938
1	Larry	Larry	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	shouldn't	_	_	_	_	_	_	_	_
2	should	should	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Gina	Gina	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	shouldn't	_	_	_	_	_	_	_	_
6	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	hate	hate	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Julie's ex-wife didn't explain Martin will attack himself.
# sentence_bad = Martin didn't explain Julie's ex-wife will attack himself.
# two_prefix_prefix_good = Julie's ex-wife didn't explain Martin will attack
# two_prefix_prefix_bad = Martin didn't explain Julie's ex-wife will attack
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3939
1	Martin	Martin	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Julie's	_	_	_	_	_	_	_	_
5	Julie	Julie	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	ex-wife	ex-wife	NOUN	NN	Number=Sing	9	nsubj	_	_
8	will	will	AUX	MD	VerbForm=Fin	9	aux	_	_
9	attack	attack	VERB	VB	VerbForm=Inf	4	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Ann thinks Rose's son discusses himself.
# sentence_bad = Rose's son thinks Ann discusses himself.
# two_prefix_prefix_good = Ann thinks Rose's son discusses
# two_prefix_prefix_bad = Rose's son thinks Ann discusses
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3940
1-2	Rose's	_	_	_	_	_	_	_	_
1	Rose	Rose	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	son	son	NOUN	NN	Number=Sing	4	nsubj	_	_
4	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
5	Ann	Ann	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	discusses	discuss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Cheryl would think Scott did hire himself.
# sentence_bad = Scott would think Cheryl did hire himself.
# two_prefix_prefix_good = Cheryl would think Scott did hire
# two_prefix_prefix_bad = Scott would think Cheryl did hire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3941
1	Scott	Scott	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	would	would	AUX	MD	VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Cheryl	Cheryl	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	hire	hire	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Jill imagines Craig appreciates himself.
# sentence_bad = Craig imagines Jill appreciates himself.
# two_prefix_prefix_good = Jill imagines Craig appreciates
# two_prefix_prefix_bad = Craig imagines Jill appreciates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3942
1	Craig	Craig	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Jill	Jill	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	appreciates	appreciate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Dennis does think Sherry could forget herself.
# sentence_bad = Sherry does think Dennis could forget herself.
# two_prefix_prefix_good = Dennis does think Sherry could forget
# two_prefix_prefix_bad = Sherry does think Dennis could forget
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3943
1	Sherry	Sherry	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
4	Dennis	Dennis	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
6	forget	forget	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Guy thinks Leslie cares for herself.
# sentence_bad = Leslie thinks Guy cares for herself.
# two_prefix_prefix_good = Guy thinks Leslie cares for
# two_prefix_prefix_bad = Leslie thinks Guy cares for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3944
1	Leslie	Leslie	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Guy	Guy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Alan thinks Grace fires herself.
# sentence_bad = Grace thinks Alan fires herself.
# two_prefix_prefix_good = Alan thinks Grace fires
# two_prefix_prefix_bad = Grace thinks Alan fires
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3945
1	Grace	Grace	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Alan	Alan	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	fires	fire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Jill's nephew couldn't explain Colleen remembers herself.
# sentence_bad = Colleen couldn't explain Jill's nephew remembers herself.
# two_prefix_prefix_good = Jill's nephew couldn't explain Colleen remembers
# two_prefix_prefix_bad = Colleen couldn't explain Jill's nephew remembers
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3946
1	Colleen	Colleen	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Jill's	_	_	_	_	_	_	_	_
5	Jill	Jill	PROPN	NNP	Number=Sing	7	nmod:poss	_	_
6	's	's	PART	POS	_	5	case	_	_
7	nephew	nephew	NOUN	NN	Number=Sing	8	nsubj	_	_
8	remembers	remember	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Eric does explain Christina leaves herself.
# sentence_bad = Christina does explain Eric leaves herself.
# two_prefix_prefix_good = Eric does explain Christina leaves
# two_prefix_prefix_bad = Christina does explain Eric leaves
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3947
1	Christina	Christina	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Eric	Eric	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Noah imagines Allison likes herself.
# sentence_bad = Allison imagines Noah likes herself.
# two_prefix_prefix_good = Noah imagines Allison likes
# two_prefix_prefix_bad = Allison imagines Noah likes
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3948
1	Allison	Allison	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Noah	Noah	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	likes	like	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Sonia did explain Joel will fire himself.
# sentence_bad = Joel did explain Sonia will fire himself.
# two_prefix_prefix_good = Sonia did explain Joel will fire
# two_prefix_prefix_bad = Joel did explain Sonia will fire
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3949
1	Joel	Joel	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Sonia	Sonia	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	will	will	AUX	MD	VerbForm=Fin	6	aux	_	_
6	fire	fire	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kevin imagines Elizabeth shouldn't listen to herself.
# sentence_bad = Elizabeth imagines Kevin shouldn't listen to herself.
# two_prefix_prefix_good = Kevin imagines Elizabeth shouldn't listen to
# two_prefix_prefix_bad = Elizabeth imagines Kevin shouldn't listen to
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3950
1	Elizabeth	Elizabeth	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kevin	Kevin	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	listen	listen	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	to	to	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Erin did explain Kenneth conceals himself.
# sentence_bad = Kenneth did explain Erin conceals himself.
# two_prefix_prefix_good = Erin did explain Kenneth conceals
# two_prefix_prefix_bad = Kenneth did explain Erin conceals
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3951
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Erin	Erin	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	conceals	conceal	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Mark wouldn't imagine Marla couldn't reference herself.
# sentence_bad = Marla wouldn't imagine Mark couldn't reference herself.
# two_prefix_prefix_good = Mark wouldn't imagine Marla couldn't reference
# two_prefix_prefix_bad = Marla wouldn't imagine Mark couldn't reference
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3952
1	Marla	Marla	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	wouldn't	_	_	_	_	_	_	_	_
2	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Mark	Mark	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	couldn't	_	_	_	_	_	_	_	_
6	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	reference	reference	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Florence could say Liam won't forget himself.
# sentence_bad = Liam could say Florence won't forget himself.
# two_prefix_prefix_good = Florence could say Liam won't forget
# two_prefix_prefix_bad = Liam could say Florence won't forget
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3953
1	Liam	Liam	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	could	could	AUX	MD	VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Florence	Florence	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	won't	_	_	_	_	_	_	_	_
5	wo	will	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	forget	forget	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Homer imagines Cindy scares herself.
# sentence_bad = Cindy imagines Homer scares herself.
# two_prefix_prefix_good = Homer imagines Cindy scares
# two_prefix_prefix_bad = Cindy imagines Homer scares
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3954
1	Cindy	Cindy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Homer	Homer	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	scares	scare	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Theresa imagines the drivers' grandfather doesn't forget himself.
# sentence_bad = The drivers' grandfather imagines Theresa doesn't forget himself.
# two_prefix_prefix_good = Theresa imagines the drivers' grandfather doesn't forget
# two_prefix_prefix_bad = The drivers' grandfather imagines Theresa doesn't forget
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3955
1	The	the	DET	DT	Definite=Def|PronType=Art	2	det	_	_
2-3	drivers'	_	_	_	_	_	_	_	_
2	drivers	driver	NOUN	NNS	Number=Plur	4	nmod:poss	_	_
3	'	's	PART	POS	_	2	case	_	_
4	grandfather	grandfather	NOUN	NN	Number=Sing	5	nsubj	_	_
5	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	Theresa	Theresa	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	doesn't	_	_	_	_	_	_	_	_
7	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	forget	forget	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Gary's granddaughter imagines Carl scares himself.
# sentence_bad = Carl imagines Gary's granddaughter scares himself.
# two_prefix_prefix_good = Gary's granddaughter imagines Carl scares
# two_prefix_prefix_bad = Carl imagines Gary's granddaughter scares
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3956
1	Carl	Carl	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Gary's	_	_	_	_	_	_	_	_
3	Gary	Gary	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	granddaughter	granddaughter	NOUN	NN	Number=Sing	6	nsubj	_	_
6	scares	scare	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Emily might say Gary's nephew can't stun himself.
# sentence_bad = Gary's nephew might say Emily can't stun himself.
# two_prefix_prefix_good = Emily might say Gary's nephew can't stun
# two_prefix_prefix_bad = Gary's nephew might say Emily can't stun
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3957
1-2	Gary's	_	_	_	_	_	_	_	_
1	Gary	Gary	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	nephew	nephew	NOUN	NN	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
6	Emily	Emily	PROPN	NNP	Number=Sing	9	nsubj	_	_
7-8	can't	_	_	_	_	_	_	_	_
7	ca	can	AUX	MD	VerbForm=Fin	9	aux	_	_
8	n't	not	PART	RB	_	9	advmod	_	_
9	stun	stun	VERB	VB	VerbForm=Inf	5	ccomp	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obj	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Sonia would explain Anne's husband could question himself.
# sentence_bad = Anne's husband would explain Sonia could question himself.
# two_prefix_prefix_good = Sonia would explain Anne's husband could question
# two_prefix_prefix_bad = Anne's husband would explain Sonia could question
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3958
1-2	Anne's	_	_	_	_	_	_	_	_
1	Anne	Anne	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	husband	husband	NOUN	NN	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
6	Sonia	Sonia	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
8	question	question	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Candice will imagine Steve might reference himself.
# sentence_bad = Steve will imagine Candice might reference himself.
# two_prefix_prefix_good = Candice will imagine Steve might reference
# two_prefix_prefix_bad = Steve will imagine Candice might reference
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3959
1	Steve	Steve	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	will	will	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	Candice	Candice	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	might	might	AUX	MD	VerbForm=Fin	6	aux	_	_
6	reference	reference	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Helen would say this man hires himself.
# sentence_bad = This man would say Helen hires himself.
# two_prefix_prefix_good = Helen would say this man hires
# two_prefix_prefix_bad = This man would say Helen hires
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3960
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	man	man	NOUN	NN	Number=Sing	4	nsubj	_	_
3	would	would	AUX	MD	VerbForm=Fin	4	aux	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Helen	Helen	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	hires	hire	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Jessica's grandson says Allison approaches herself.
# sentence_bad = Allison says Jessica's grandson approaches herself.
# two_prefix_prefix_good = Jessica's grandson says Allison approaches
# two_prefix_prefix_bad = Allison says Jessica's grandson approaches
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3962
1	Allison	Allison	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3-4	Jessica's	_	_	_	_	_	_	_	_
3	Jessica	Jessica	PROPN	NNP	Number=Sing	5	nmod:poss	_	_
4	's	's	PART	POS	_	3	case	_	_
5	grandson	grandson	NOUN	NN	Number=Sing	6	nsubj	_	_
6	approaches	approach	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Beth imagines this guy can work with himself.
# sentence_bad = This guy imagines Beth can work with himself.
# two_prefix_prefix_good = Beth imagines this guy can work with
# two_prefix_prefix_bad = This guy imagines Beth can work with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3963
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Beth	Beth	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	can	can	AUX	MD	VerbForm=Fin	6	aux	_	_
6	work	work	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	with	with	ADP	IN	_	8	case	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = This dancer says Stephen cares for himself.
# sentence_bad = Stephen says this dancer cares for himself.
# two_prefix_prefix_good = This dancer says Stephen cares for
# two_prefix_prefix_bad = Stephen says this dancer cares for
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3964
1	Stephen	Stephen	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	this	this	DET	DT	Number=Sing|PronType=Dem	4	det	_	_
4	dancer	dancer	NOUN	NN	Number=Sing	5	nsubj	_	_
5	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
6	for	for	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Rachelle does say Randolf insults himself.
# sentence_bad = Randolf does say Rachelle insults himself.
# two_prefix_prefix_good = Rachelle does say Randolf insults
# two_prefix_prefix_bad = Randolf does say Rachelle insults
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3965
1	Randolf	Randolf	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
4	Rachelle	Rachelle	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	insults	insult	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Kimberley did explain Walter loves himself.
# sentence_bad = Walter did explain Kimberley loves himself.
# two_prefix_prefix_good = Kimberley did explain Walter loves
# two_prefix_prefix_bad = Walter did explain Kimberley loves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3966
1	Walter	Walter	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Kimberley	Kimberley	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	loves	love	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Lissa didn't say Andrew couldn't sound like himself.
# sentence_bad = Andrew didn't say Lissa couldn't sound like himself.
# two_prefix_prefix_good = Lissa didn't say Andrew couldn't sound like
# two_prefix_prefix_bad = Andrew didn't say Lissa couldn't sound like
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3967
1	Andrew	Andrew	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
5	Lissa	Lissa	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	couldn't	_	_	_	_	_	_	_	_
6	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	sound	sound	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	like	like	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Cynthia won't explain James could heal himself.
# sentence_bad = James won't explain Cynthia could heal himself.
# two_prefix_prefix_good = Cynthia won't explain James could heal
# two_prefix_prefix_bad = James won't explain Cynthia could heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3968
1	James	James	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	won't	_	_	_	_	_	_	_	_
2	wo	will	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Cynthia	Cynthia	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	could	could	AUX	MD	VerbForm=Fin	7	aux	_	_
7	heal	heal	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Tracy explains Robert complains about himself.
# sentence_bad = Robert explains Tracy complains about himself.
# two_prefix_prefix_good = Tracy explains Robert complains about
# two_prefix_prefix_bad = Robert explains Tracy complains about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3969
1	Robert	Robert	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Tracy	Tracy	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	complains	complain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	about	about	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Carrie shouldn't imagine Danielle's boyfriend will argue about himself.
# sentence_bad = Danielle's boyfriend shouldn't imagine Carrie will argue about himself.
# two_prefix_prefix_good = Carrie shouldn't imagine Danielle's boyfriend will argue about
# two_prefix_prefix_bad = Danielle's boyfriend shouldn't imagine Carrie will argue about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3970
1-2	Danielle's	_	_	_	_	_	_	_	_
1	Danielle	Danielle	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	boyfriend	boyfriend	NOUN	NN	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
7	Carrie	Carrie	PROPN	NNP	Number=Sing	9	nsubj	_	_
8	will	will	AUX	MD	VerbForm=Fin	9	aux	_	_
9	argue	argue	VERB	VB	VerbForm=Inf	6	ccomp	_	_
10	about	about	ADP	IN	_	11	case	_	_
11	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	9	obl	_	SpaceAfter=No
12	.	.	PUNCT	.	_	6	punct	_	SpaceAfter=No



# sentence_good = Nicole does explain Kenneth wouldn't help himself.
# sentence_bad = Kenneth does explain Nicole wouldn't help himself.
# two_prefix_prefix_good = Nicole does explain Kenneth wouldn't help
# two_prefix_prefix_bad = Kenneth does explain Nicole wouldn't help
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3971
1	Kenneth	Kenneth	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Nicole	Nicole	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	wouldn't	_	_	_	_	_	_	_	_
5	would	would	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	help	help	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Gerald imagines Samantha couldn't cure herself.
# sentence_bad = Samantha imagines Gerald couldn't cure herself.
# two_prefix_prefix_good = Gerald imagines Samantha couldn't cure
# two_prefix_prefix_bad = Samantha imagines Gerald couldn't cure
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3972
1	Samantha	Samantha	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Gerald	Gerald	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	cure	cure	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Teresa says Gregory attacks himself.
# sentence_bad = Gregory says Teresa attacks himself.
# two_prefix_prefix_good = Teresa says Gregory attacks
# two_prefix_prefix_bad = Gregory says Teresa attacks
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3973
1	Gregory	Gregory	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Teresa	Teresa	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Kendra explains Matt will return to himself.
# sentence_bad = Matt explains Kendra will return to himself.
# two_prefix_prefix_good = Kendra explains Matt will return to
# two_prefix_prefix_bad = Matt explains Kendra will return to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3974
1	Matt	Matt	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Kendra	Kendra	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	will	will	AUX	MD	VerbForm=Fin	5	aux	_	_
5	return	return	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	to	to	ADP	IN	_	7	case	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obl	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Holly says a girl's grandfather should disagree with himself.
# sentence_bad = A girl's grandfather says Holly should disagree with himself.
# two_prefix_prefix_good = Holly says a girl's grandfather should disagree with
# two_prefix_prefix_bad = A girl's grandfather says Holly should disagree with
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3975
1	A	a	DET	DT	Definite=Ind|PronType=Art	2	det	_	_
2-3	girl's	_	_	_	_	_	_	_	_
2	girl	girl	NOUN	NN	Number=Sing	4	nmod:poss	_	_
3	's	's	PART	POS	_	2	case	_	_
4	grandfather	grandfather	NOUN	NN	Number=Sing	5	nsubj	_	_
5	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	Holly	Holly	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	should	should	AUX	MD	VerbForm=Fin	8	aux	_	_
8	disagree	disagree	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	with	with	ADP	IN	_	10	case	_	_
10	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obl	_	SpaceAfter=No
11	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Dan explains Jennifer cares for herself.
# sentence_bad = Jennifer explains Dan cares for herself.
# two_prefix_prefix_good = Dan explains Jennifer cares for
# two_prefix_prefix_bad = Jennifer explains Dan cares for
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3976
1	Jennifer	Jennifer	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Dan	Dan	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	cares	care	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	for	for	ADP	IN	_	6	case	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Liam says Cheryl sees herself.
# sentence_bad = Cheryl says Liam sees herself.
# two_prefix_prefix_good = Liam says Cheryl sees
# two_prefix_prefix_bad = Cheryl says Liam sees
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3977
1	Cheryl	Cheryl	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Liam	Liam	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	sees	see	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Caroline didn't imagine Thomas attacks himself.
# sentence_bad = Thomas didn't imagine Caroline attacks himself.
# two_prefix_prefix_good = Caroline didn't imagine Thomas attacks
# two_prefix_prefix_bad = Thomas didn't imagine Caroline attacks
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3978
1	Thomas	Thomas	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Caroline	Caroline	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	attacks	attack	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Omar imagines Vanessa might visit herself.
# sentence_bad = Vanessa imagines Omar might visit herself.
# two_prefix_prefix_good = Omar imagines Vanessa might visit
# two_prefix_prefix_bad = Vanessa imagines Omar might visit
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3979
1	Vanessa	Vanessa	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Omar	Omar	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	might	might	AUX	MD	VerbForm=Fin	5	aux	_	_
5	visit	visit	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Diana says Dennis hates himself.
# sentence_bad = Dennis says Diana hates himself.
# two_prefix_prefix_good = Diana says Dennis hates
# two_prefix_prefix_bad = Dennis says Diana hates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3980
1	Dennis	Dennis	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Diana	Diana	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	hates	hate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Cheryl says this waiter's grandson can criticize himself.
# sentence_bad = This waiter's grandson says Cheryl can criticize himself.
# two_prefix_prefix_good = Cheryl says this waiter's grandson can criticize
# two_prefix_prefix_bad = This waiter's grandson says Cheryl can criticize
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3981
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2-3	waiter's	_	_	_	_	_	_	_	_
2	waiter	waiter	NOUN	NN	Number=Sing	4	nmod:poss	_	_
3	's	's	PART	POS	_	2	case	_	_
4	grandson	grandson	NOUN	NN	Number=Sing	5	nsubj	_	_
5	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
6	Cheryl	Cheryl	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	can	can	AUX	MD	VerbForm=Fin	8	aux	_	_
8	criticize	criticize	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Donna couldn't imagine Dennis will heal himself.
# sentence_bad = Dennis couldn't imagine Donna will heal himself.
# two_prefix_prefix_good = Donna couldn't imagine Dennis will heal
# two_prefix_prefix_bad = Dennis couldn't imagine Donna will heal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3983
1	Dennis	Dennis	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	couldn't	_	_	_	_	_	_	_	_
2	could	could	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5-6	Donna	_	_	_	_	_	_	_	_
5	Don	Don	PROPN	NNP	Number=Sing	8	nsubj	_	_
6	na	to	PART	TO	Abbr=Yes	8	mark	_	_
7	will	will	AUX	MD	VerbForm=Fin	8	aux	_	_
8	heal	heal	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Nancy imagines Donald shouldn't confuse himself.
# sentence_bad = Donald imagines Nancy shouldn't confuse himself.
# two_prefix_prefix_good = Nancy imagines Donald shouldn't confuse
# two_prefix_prefix_bad = Donald imagines Nancy shouldn't confuse
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3984
1	Donald	Donald	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Nancy	Nancy	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	shouldn't	_	_	_	_	_	_	_	_
4	should	should	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	confuse	confuse	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Nina didn't explain Thomas investigates himself.
# sentence_bad = Thomas didn't explain Nina investigates himself.
# two_prefix_prefix_good = Nina didn't explain Thomas investigates
# two_prefix_prefix_bad = Thomas didn't explain Nina investigates
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3985
1	Thomas	Thomas	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Nina	Nina	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	investigates	investigate	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Samantha says Roger talks to himself.
# sentence_bad = Roger says Samantha talks to himself.
# two_prefix_prefix_good = Samantha says Roger talks to
# two_prefix_prefix_bad = Roger says Samantha talks to
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3986
1	Roger	Roger	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Samantha	Samantha	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	talks	talk	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	to	to	ADP	IN	_	6	case	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obl	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Erin thinks Timothy did describe himself.
# sentence_bad = Timothy thinks Erin did describe himself.
# two_prefix_prefix_good = Erin thinks Timothy did describe
# two_prefix_prefix_bad = Timothy thinks Erin did describe
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3987
1	Timothy	Timothy	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Erin	Erin	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	5	aux	_	_
5	describe	describe	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Renee says this guy didn't hug himself.
# sentence_bad = This guy says Renee didn't hug himself.
# two_prefix_prefix_good = Renee says this guy didn't hug
# two_prefix_prefix_bad = This guy says Renee didn't hug
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3988
1	This	this	DET	DT	Number=Sing|PronType=Dem	2	det	_	_
2	guy	guy	NOUN	NN	Number=Sing	3	nsubj	_	_
3	says	say	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
4	Renee	Renee	PROPN	NNP	Number=Sing	7	nsubj	_	_
5-6	didn't	_	_	_	_	_	_	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	hug	hug	VERB	VB	VerbForm=Inf	3	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Stephanie might explain John did remember himself.
# sentence_bad = John might explain Stephanie did remember himself.
# two_prefix_prefix_good = Stephanie might explain John did remember
# two_prefix_prefix_bad = John might explain Stephanie did remember
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3989
1	John	John	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	might	might	AUX	MD	VerbForm=Fin	3	aux	_	_
3	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
4	Stephanie	Stephanie	PROPN	NNP	Number=Sing	6	nsubj	_	_
5	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	6	aux	_	_
6	remember	remember	VERB	VB	VerbForm=Inf	3	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = Every lady explains Randolf shouldn't think about himself.
# sentence_bad = Randolf explains every lady shouldn't think about himself.
# two_prefix_prefix_good = Every lady explains Randolf shouldn't think about
# two_prefix_prefix_bad = Randolf explains every lady shouldn't think about
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3990
1	Randolf	Randolf	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	every	every	DET	DT	_	4	det	_	_
4	lady	lady	NOUN	NN	Number=Sing	7	nsubj	_	_
5-6	shouldn't	_	_	_	_	_	_	_	_
5	should	should	AUX	MD	VerbForm=Fin	7	aux	_	_
6	n't	not	PART	RB	_	7	advmod	_	_
7	think	think	VERB	VB	VerbForm=Inf	2	ccomp	_	_
8	about	about	ADP	IN	_	9	case	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obl	_	SpaceAfter=No
10	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Judy can't explain Joseph leaves himself.
# sentence_bad = Joseph can't explain Judy leaves himself.
# two_prefix_prefix_good = Judy can't explain Joseph leaves
# two_prefix_prefix_bad = Joseph can't explain Judy leaves
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3991
1	Joseph	Joseph	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	can't	_	_	_	_	_	_	_	_
2	ca	can	AUX	MD	VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	explain	explain	VERB	VB	VerbForm=Inf	0	root	_	_
5	Judy	Judy	PROPN	NNP	Number=Sing	6	nsubj	_	_
6	leaves	leave	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Florence explains Scott does kiss himself.
# sentence_bad = Scott explains Florence does kiss himself.
# two_prefix_prefix_good = Florence explains Scott does kiss
# two_prefix_prefix_bad = Scott explains Florence does kiss
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3992
1	Scott	Scott	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Florence	Florence	PROPN	NNP	Number=Sing	5	nsubj	_	_
4	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	5	aux	_	_
5	kiss	kiss	VERB	VB	VerbForm=Inf	2	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Curtis thinks Jennifer kisses herself.
# sentence_bad = Jennifer thinks Curtis kisses herself.
# two_prefix_prefix_good = Curtis thinks Jennifer kisses
# two_prefix_prefix_bad = Jennifer thinks Curtis kisses
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3993
1	Jennifer	Jennifer	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	thinks	think	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Curtis	Curtis	PROPN	NNP	Number=Sing	4	nsubj	_	_
4	kisses	kiss	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	2	ccomp	_	_
5	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	4	obj	_	SpaceAfter=No
6	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Thomas imagines Nina couldn't argue about herself.
# sentence_bad = Nina imagines Thomas couldn't argue about herself.
# two_prefix_prefix_good = Thomas imagines Nina couldn't argue about
# two_prefix_prefix_bad = Nina imagines Thomas couldn't argue about
# two_prefix_word = herself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3994
1	Nina	Nina	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	imagines	imagine	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Thomas	Thomas	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	couldn't	_	_	_	_	_	_	_	_
4	could	could	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	argue	argue	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	about	about	ADP	IN	_	8	case	_	_
8	herself	herself	PRON	PRP	Case=Acc|Gender=Fem|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obl	_	SpaceAfter=No
9	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = April should imagine Brad researches himself.
# sentence_bad = Brad should imagine April researches himself.
# two_prefix_prefix_good = April should imagine Brad researches
# two_prefix_prefix_bad = Brad should imagine April researches
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3995
1	Brad	Brad	PROPN	NNP	Number=Sing	3	nsubj	_	_
2	should	should	AUX	MD	VerbForm=Fin	3	aux	_	_
3	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
4	April	April	PROPN	NNP	Number=Sing	5	nsubj	_	_
5	researches	research	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	3	ccomp	_	_
6	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	5	obj	_	SpaceAfter=No
7	.	.	PUNCT	.	_	3	punct	_	SpaceAfter=No



# sentence_good = April would say Karen's brother could conceal himself.
# sentence_bad = Karen's brother would say April could conceal himself.
# two_prefix_prefix_good = April would say Karen's brother could conceal
# two_prefix_prefix_bad = Karen's brother would say April could conceal
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3996
1-2	Karen's	_	_	_	_	_	_	_	_
1	Karen	Karen	PROPN	NNP	Number=Sing	3	nmod:poss	_	_
2	's	's	PART	POS	_	1	case	_	_
3	brother	brother	NOUN	NN	Number=Sing	5	nsubj	_	_
4	would	would	AUX	MD	VerbForm=Fin	5	aux	_	_
5	say	say	VERB	VB	VerbForm=Inf	0	root	_	_
6	April	April	PROPN	NNP	Number=Sing	8	nsubj	_	_
7	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
8	conceal	conceal	VERB	VB	VerbForm=Inf	5	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	5	punct	_	SpaceAfter=No



# sentence_good = Colleen explains Steven can't praise himself.
# sentence_bad = Steven explains Colleen can't praise himself.
# two_prefix_prefix_good = Colleen explains Steven can't praise
# two_prefix_prefix_bad = Steven explains Colleen can't praise
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3997
1	Steven	Steven	PROPN	NNP	Number=Sing	2	nsubj	_	_
2	explains	explain	VERB	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	0	root	_	_
3	Colleen	Colleen	PROPN	NNP	Number=Sing	6	nsubj	_	_
4-5	can't	_	_	_	_	_	_	_	_
4	ca	can	AUX	MD	VerbForm=Fin	6	aux	_	_
5	n't	not	PART	RB	_	6	advmod	_	_
6	praise	praise	VERB	VB	VerbForm=Inf	2	ccomp	_	_
7	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	6	obj	_	SpaceAfter=No
8	.	.	PUNCT	.	_	2	punct	_	SpaceAfter=No



# sentence_good = Ann didn't think Jason couldn't find himself.
# sentence_bad = Jason didn't think Ann couldn't find himself.
# two_prefix_prefix_good = Ann didn't think Jason couldn't find
# two_prefix_prefix_bad = Jason didn't think Ann couldn't find
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3998
1	Jason	Jason	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	didn't	_	_	_	_	_	_	_	_
2	did	do	AUX	VBD	Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	think	think	VERB	VB	VerbForm=Inf	0	root	_	_
5	Ann	Ann	PROPN	NNP	Number=Sing	8	nsubj	_	_
6-7	couldn't	_	_	_	_	_	_	_	_
6	could	could	AUX	MD	VerbForm=Fin	8	aux	_	_
7	n't	not	PART	RB	_	8	advmod	_	_
8	find	find	VERB	VB	VerbForm=Inf	4	ccomp	_	_
9	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	8	obj	_	SpaceAfter=No
10	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No



# sentence_good = Kristen doesn't imagine Samuel will question himself.
# sentence_bad = Samuel doesn't imagine Kristen will question himself.
# two_prefix_prefix_good = Kristen doesn't imagine Samuel will question
# two_prefix_prefix_bad = Samuel doesn't imagine Kristen will question
# two_prefix_word = himself
# field = syntax_semantics
# linguistics_term = binding
# UID = principle_A_domain_3
# simple_LM_method = True
# one_prefix_method = False
# two_prefix_method = True
# lexically_identical = True
# sent_id = principle_A_domain_3999
1	Samuel	Samuel	PROPN	NNP	Number=Sing	4	nsubj	_	_
2-3	doesn't	_	_	_	_	_	_	_	_
2	does	do	AUX	VBZ	Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin	4	aux	_	_
3	n't	not	PART	RB	_	4	advmod	_	_
4	imagine	imagine	VERB	VB	VerbForm=Inf	0	root	_	_
5	Kristen	Kristen	PROPN	NNP	Number=Sing	7	nsubj	_	_
6	will	will	AUX	MD	VerbForm=Fin	7	aux	_	_
7	question	question	VERB	VB	VerbForm=Inf	4	ccomp	_	_
8	himself	himself	PRON	PRP	Case=Acc|Gender=Masc|Number=Sing|Person=3|PronType=Prs|Reflex=Yes	7	obj	_	SpaceAfter=No
9	.	.	PUNCT	.	_	4	punct	_	SpaceAfter=No

